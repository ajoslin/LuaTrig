/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGLUA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return an integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * luarun.swg
 *
 * This file contains the runtime support for Lua modules
 * and includes code for managing global variables and pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

#include "lua.h"
#include "lauxlib.h"
#include <stdlib.h>  /* for malloc */
#include <assert.h>  /* for a few sanity tests */

/* -----------------------------------------------------------------------------
 * global swig types
 * ----------------------------------------------------------------------------- */
/* Constant table */
#define SWIG_LUA_INT     1
#define SWIG_LUA_FLOAT   2
#define SWIG_LUA_STRING  3
#define SWIG_LUA_POINTER 4
#define SWIG_LUA_BINARY  5
#define SWIG_LUA_CHAR    6

/* Structure for variable linking table */
typedef struct {
  const char *name;
  lua_CFunction get;
  lua_CFunction set;
} swig_lua_var_info;

/* Constant information structure */
typedef struct {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_lua_const_info;

typedef struct {
  const char     *name;
  lua_CFunction   method;
} swig_lua_method;

typedef struct {
  const char     *name;
  lua_CFunction   getmethod;
  lua_CFunction   setmethod;
} swig_lua_attribute;

typedef struct swig_lua_class {
  const char    *name;
  swig_type_info   **type;
  lua_CFunction  constructor;
  void    (*destructor)(void *);
  swig_lua_method   *methods;
  swig_lua_attribute     *attributes;
  struct swig_lua_class **bases;
  const char **base_names;
} swig_lua_class;

/* this is the struct for wrappering all pointers in SwigLua
*/
typedef struct {
  swig_type_info   *type;
  int     own;  /* 1 if owned & must be destroyed */
  void        *ptr;
} swig_lua_userdata;

/* this is the struct for wrapping arbitary packed binary data
(currently it is only used for member function pointers)
the data ordering is similar to swig_lua_userdata, but it is currently not possible
to tell the two structures apart within SWIG, other than by looking at the type
*/
typedef struct {
  swig_type_info   *type;
  int     own;  /* 1 if owned & must be destroyed */
  char data[1];       /* arbitary amount of data */    
} swig_lua_rawdata;

/* Common SWIG API */
#define SWIG_NewPointerObj(L, ptr, type, owner)       SWIG_Lua_NewPointerObj(L, (void *)ptr, type, owner)
#define SWIG_ConvertPtr(L,idx, ptr, type, flags)    SWIG_Lua_ConvertPtr(L,idx,ptr,type,flags)
#define SWIG_MustGetPtr(L,idx, type,flags, argnum,fnname)  SWIG_Lua_MustGetPtr(L,idx, type,flags, argnum,fnname)
/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(L, idx, ptr, sz, ty)       SWIG_Lua_ConvertPacked(L, idx, ptr, sz, ty)
#define SWIG_NewMemberObj(L, ptr, sz, type)      SWIG_Lua_NewPackedObj(L, ptr, sz, type)

/* Runtime API */
#define SWIG_GetModule(clientdata) SWIG_Lua_GetModule((lua_State*)(clientdata))
#define SWIG_SetModule(clientdata, pointer) SWIG_Lua_SetModule((lua_State*) (clientdata), pointer)
#define SWIG_MODULE_CLIENTDATA_TYPE lua_State*

/* Contract support */
#define SWIG_contract_assert(expr, msg)  \
  if (!(expr)) { lua_pushstring(L, (char *) msg); goto fail; } else

/* helper #defines */
#define SWIG_fail {goto fail;}
#define SWIG_fail_arg(func_name,argnum,type) \
  {lua_pushfstring(L,"Error in %s (arg %d), expected '%s' got '%s'",\
  func_name,argnum,type,SWIG_Lua_typename(L,argnum));\
  goto fail;}
#define SWIG_fail_ptr(func_name,argnum,type) \
  SWIG_fail_arg(func_name,argnum,(type && type->str)?type->str:"void*")
#define SWIG_check_num_args(func_name,a,b) \
  if (lua_gettop(L)<a || lua_gettop(L)>b) \
  {lua_pushfstring(L,"Error in %s expected %d..%d args, got %d",func_name,a,b,lua_gettop(L));\
  goto fail;}


#define SWIG_Lua_get_table(L,n) \
  (lua_pushstring(L, n), lua_rawget(L,-2))

#define SWIG_Lua_add_function(L,n,f) \
  (lua_pushstring(L, n), \
      lua_pushcfunction(L, f), \
      lua_rawset(L,-3))

/* special helper for allowing 'nil' for usertypes */
#define SWIG_isptrtype(L,I) (lua_isuserdata(L,I) || lua_isnil(L,I))

#ifdef __cplusplus
/* Special helper for member function pointers 
it gets the address, casts it, then dereferences it */
//#define SWIG_mem_fn_as_voidptr(a)  (*((char**)&(a)))
#endif

/* storing/access of swig_module_info */
SWIGRUNTIME swig_module_info *
SWIG_Lua_GetModule(lua_State* L) {
  swig_module_info *ret = 0;
  lua_pushstring(L,"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME);
  lua_rawget(L,LUA_REGISTRYINDEX);
  if (lua_islightuserdata(L,-1))
    ret=(swig_module_info*)lua_touserdata(L,-1);
  lua_pop(L,1);  /* tidy */
  return ret;
}

SWIGRUNTIME void
SWIG_Lua_SetModule(lua_State* L, swig_module_info *module) {
  /* add this all into the Lua registry: */
  lua_pushstring(L,"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME);
  lua_pushlightuserdata(L,(void*)module);
  lua_rawset(L,LUA_REGISTRYINDEX);
}

/* -----------------------------------------------------------------------------
 * global variable support code: modules
 * ----------------------------------------------------------------------------- */

/* this function is called when trying to set an immutable.
default value is to print an error.
This can removed with a compile flag SWIGLUA_IGNORE_SET_IMMUTABLE */
SWIGINTERN int SWIG_Lua_set_immutable(lua_State* L)
{
/*  there should be 1 param passed in: the new value */
#ifndef SWIGLUA_IGNORE_SET_IMMUTABLE
  lua_pop(L,1);  /* remove it */
  lua_pushstring(L,"This variable is immutable");
  lua_error(L);
#endif
    return 0;   /* should not return anything */
}

/* the module.get method used for getting linked data */
SWIGINTERN int SWIG_Lua_module_get(lua_State* L)
{
/*  there should be 2 params passed in
  (1) table (not the meta table)
  (2) string name of the attribute
  printf("SWIG_Lua_module_get %p(%s) '%s'\n",
   lua_topointer(L,1),lua_typename(L,lua_type(L,1)),
   lua_tostring(L,2));
*/
  /* get the metatable */
  assert(lua_istable(L,1));  /* just in case */
  lua_getmetatable(L,1);  /* get the metatable */
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_get_table(L,".get");  /* get the .get table */
  lua_remove(L,3);  /* remove metatable */
  if (lua_istable(L,-1))
  {
    /* look for the key in the .get table */
    lua_pushvalue(L,2);  /* key */
    lua_rawget(L,-2);
    lua_remove(L,3);  /* remove .get */
    if (lua_iscfunction(L,-1))
    {  /* found it so call the fn & return its value */
      lua_call(L,0,1);
      return 1;
    }
    lua_pop(L,1);  /* remove the top */
  }
  lua_pop(L,1);  /* remove the .get */
  lua_pushnil(L);  /* return a nil */
    return 1;
}

/* the module.set method used for setting linked data */
SWIGINTERN int SWIG_Lua_module_set(lua_State* L)
{
/*  there should be 3 params passed in
  (1) table (not the meta table)
  (2) string name of the attribute
  (3) any for the new value
*/
  /* get the metatable */
  assert(lua_istable(L,1));  /* just in case */
  lua_getmetatable(L,1);  /* get the metatable */
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_get_table(L,".set");  /* get the .set table */
  lua_remove(L,4);  /* remove metatable */
  if (lua_istable(L,-1))
  {
    /* look for the key in the .set table */
    lua_pushvalue(L,2);  /* key */
    lua_rawget(L,-2);
    lua_remove(L,4);  /* remove .set */
    if (lua_iscfunction(L,-1))
    {  /* found it so call the fn & return its value */
      lua_pushvalue(L,3);  /* value */
      lua_call(L,1,0);
      return 0;
    }
  }
  lua_settop(L,3);  /* reset back to start */
  /* we now have the table, key & new value, so just set directly */
  lua_rawset(L,1);  /* add direct */
  return 0;
}

/* registering a module in lua */
SWIGINTERN void  SWIG_Lua_module_begin(lua_State* L,const char* name)
{
  assert(lua_istable(L,-1));  /* just in case */
  lua_pushstring(L,name);
  lua_newtable(L);   /* the table */
  /* add meta table */
  lua_newtable(L);    /* the meta table */
  SWIG_Lua_add_function(L,"__index",SWIG_Lua_module_get);
  SWIG_Lua_add_function(L,"__newindex",SWIG_Lua_module_set);
  lua_pushstring(L,".get");
  lua_newtable(L);    /* the .get table */
  lua_rawset(L,-3);  /* add .get into metatable */
  lua_pushstring(L,".set");
  lua_newtable(L);    /* the .set table */
  lua_rawset(L,-3);  /* add .set into metatable */
  lua_setmetatable(L,-2);  /* sets meta table in module */
  lua_rawset(L,-3);        /* add module into parent */
  SWIG_Lua_get_table(L,name);   /* get the table back out */
}

/* ending the register */
SWIGINTERN void  SWIG_Lua_module_end(lua_State* L)
{
  lua_pop(L,1);       /* tidy stack (remove module) */
}

/* adding a linked variable to the module */
SWIGINTERN void SWIG_Lua_module_add_variable(lua_State* L,const char* name,lua_CFunction getFn,lua_CFunction setFn)
{
  assert(lua_istable(L,-1));  /* just in case */
  lua_getmetatable(L,-1);  /* get the metatable */
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_get_table(L,".get"); /* find the .get table */
  assert(lua_istable(L,-1));  /* should be a table: */
  SWIG_Lua_add_function(L,name,getFn);
  lua_pop(L,1);       /* tidy stack (remove table) */
  if (setFn)  /* if there is a set fn */
  {
    SWIG_Lua_get_table(L,".set"); /* find the .set table */
    assert(lua_istable(L,-1));  /* should be a table: */
    SWIG_Lua_add_function(L,name,setFn);
    lua_pop(L,1);       /* tidy stack (remove table) */
  }
  lua_pop(L,1);       /* tidy stack (remove meta) */
}

/* adding a function module */
SWIGINTERN void  SWIG_Lua_module_add_function(lua_State* L,const char* name,lua_CFunction fn)
{
  SWIG_Lua_add_function(L,name,fn);
}

/* -----------------------------------------------------------------------------
 * global variable support code: classes
 * ----------------------------------------------------------------------------- */

/* the class.get method, performs the lookup of class attributes */
SWIGINTERN int  SWIG_Lua_class_get(lua_State* L)
{
/*  there should be 2 params passed in
  (1) userdata (not the meta table)
  (2) string name of the attribute
*/
  assert(lua_isuserdata(L,-2));  /* just in case */
  lua_getmetatable(L,-2);    /* get the meta table */
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_get_table(L,".get"); /* find the .get table */
  assert(lua_istable(L,-1));  /* just in case */
  /* look for the key in the .get table */
  lua_pushvalue(L,2);  /* key */
  lua_rawget(L,-2);
  lua_remove(L,-2); /* stack tidy, remove .get table */
  if (lua_iscfunction(L,-1))
  {  /* found it so call the fn & return its value */
    lua_pushvalue(L,1);  /* the userdata */
    lua_call(L,1,1);  /* 1 value in (userdata),1 out (result) */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    return 1;
  }
  lua_pop(L,1);  /* remove whatever was there */
  /* ok, so try the .fn table */
  SWIG_Lua_get_table(L,".fn"); /* find the .get table */
  assert(lua_istable(L,-1));  /* just in case */
  lua_pushvalue(L,2);  /* key */
  lua_rawget(L,-2);  /* look for the fn */
  lua_remove(L,-2); /* stack tidy, remove .fn table */
  if (lua_isfunction(L,-1)) /* note: if its a C function or lua function */
  {  /* found it so return the fn & let lua call it */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    return 1;
  }
  lua_pop(L,1);  /* remove whatever was there */
  /* NEW: looks for the __getitem() fn
  this is a user provided get fn */
  SWIG_Lua_get_table(L,"__getitem"); /* find the __getitem fn */
  if (lua_iscfunction(L,-1))  /* if its there */
  {  /* found it so call the fn & return its value */
    lua_pushvalue(L,1);  /* the userdata */
    lua_pushvalue(L,2);  /* the parameter */
    lua_call(L,2,1);  /* 2 value in (userdata),1 out (result) */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    return 1;
  }
  return 0;  /* sorry not known */
}

/* the class.set method, performs the lookup of class attributes */
SWIGINTERN int  SWIG_Lua_class_set(lua_State* L)
{
/*  there should be 3 params passed in
  (1) table (not the meta table)
  (2) string name of the attribute
  (3) any for the new value
printf("SWIG_Lua_class_set %p(%s) '%s' %p(%s)\n",
      lua_topointer(L,1),lua_typename(L,lua_type(L,1)),
      lua_tostring(L,2),
      lua_topointer(L,3),lua_typename(L,lua_type(L,3)));*/

  assert(lua_isuserdata(L,1));  /* just in case */
  lua_getmetatable(L,1);    /* get the meta table */
  assert(lua_istable(L,-1));  /* just in case */

  SWIG_Lua_get_table(L,".set"); /* find the .set table */
  if (lua_istable(L,-1))
  {
    /* look for the key in the .set table */
    lua_pushvalue(L,2);  /* key */
    lua_rawget(L,-2);
    if (lua_iscfunction(L,-1))
    {  /* found it so call the fn & return its value */
      lua_pushvalue(L,1);  /* userdata */
      lua_pushvalue(L,3);  /* value */
      lua_call(L,2,0);
      return 0;
    }
    lua_pop(L,1);  /* remove the value */
  }
  lua_pop(L,1);  /* remove the value .set table */
  /* NEW: looks for the __setitem() fn
  this is a user provided set fn */
  SWIG_Lua_get_table(L,"__setitem"); /* find the fn */
  if (lua_iscfunction(L,-1))  /* if its there */
  {  /* found it so call the fn & return its value */
    lua_pushvalue(L,1);  /* the userdata */
    lua_pushvalue(L,2);  /* the parameter */
    lua_pushvalue(L,3);  /* the value */
    lua_call(L,3,0);  /* 3 values in ,0 out */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    return 1;
  }
  return 0;
}

/* the class.destruct method called by the interpreter */
SWIGINTERN int  SWIG_Lua_class_destruct(lua_State* L)
{
/*  there should be 1 params passed in
  (1) userdata (not the meta table) */
  swig_lua_userdata* usr;
  swig_lua_class* clss;
  assert(lua_isuserdata(L,-1));  /* just in case */
  usr=(swig_lua_userdata*)lua_touserdata(L,-1);  /* get it */
  /* if must be destroyed & has a destructor */
  if (usr->own) /* if must be destroyed */
  {
    clss=(swig_lua_class*)usr->type->clientdata;  /* get the class */
    if (clss && clss->destructor)  /* there is a destroy fn */
    {
      clss->destructor(usr->ptr);  /* bye bye */
    }
  }
  return 0;
}

/* gets the swig class registry (or creates it) */
SWIGINTERN void  SWIG_Lua_get_class_registry(lua_State* L)
{
  /* add this all into the swig registry: */
  lua_pushstring(L,"SWIG");
  lua_rawget(L,LUA_REGISTRYINDEX);  /* get the registry */
  if (!lua_istable(L,-1))  /* not there */
  {  /* must be first time, so add it */
    lua_pop(L,1);  /* remove the result */
    lua_pushstring(L,"SWIG");
    lua_newtable(L);
    lua_rawset(L,LUA_REGISTRYINDEX);
    /* then get it */
    lua_pushstring(L,"SWIG");
    lua_rawget(L,LUA_REGISTRYINDEX);
  }
}

/* helper fn to get the classes metatable from the register */
SWIGINTERN void  SWIG_Lua_get_class_metatable(lua_State* L,const char* cname)
{
  SWIG_Lua_get_class_registry(L);  /* get the registry */
  lua_pushstring(L,cname);  /* get the name */
  lua_rawget(L,-2);    /* get it */
  lua_remove(L,-2);    /* tidy up (remove registry) */
}

/* helper add a variable to a registered class */
SWIGINTERN void  SWIG_Lua_add_class_variable(lua_State* L,const char* name,lua_CFunction getFn,lua_CFunction setFn)
{
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_get_table(L,".get"); /* find the .get table */
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_add_function(L,name,getFn);
  lua_pop(L,1);       /* tidy stack (remove table) */
  if (setFn)
  {
    SWIG_Lua_get_table(L,".set"); /* find the .set table */
    assert(lua_istable(L,-1));  /* just in case */
    SWIG_Lua_add_function(L,name,setFn);
    lua_pop(L,1);       /* tidy stack (remove table) */
  }
}

/* helper to recursively add class details (attributes & operations) */
SWIGINTERN void  SWIG_Lua_add_class_details(lua_State* L,swig_lua_class* clss)
{
  int i;
  /* call all the base classes first: we can then override these later: */
  for(i=0;clss->bases[i];i++)
  {
    SWIG_Lua_add_class_details(L,clss->bases[i]);
  }
  /* add fns */
  for(i=0;clss->attributes[i].name;i++){
    SWIG_Lua_add_class_variable(L,clss->attributes[i].name,clss->attributes[i].getmethod,clss->attributes[i].setmethod);
  }
  /* add methods to the metatable */
  SWIG_Lua_get_table(L,".fn"); /* find the .fn table */
  assert(lua_istable(L,-1));  /* just in case */
  for(i=0;clss->methods[i].name;i++){
    SWIG_Lua_add_function(L,clss->methods[i].name,clss->methods[i].method);
  }
  lua_pop(L,1);       /* tidy stack (remove table) */
  /*   add operator overloads
    these look ANY method which start with "__" and assume they
    are operator overloads & add them to the metatable
    (this might mess up is someone defines a method __gc (the destructor)*/
  for(i=0;clss->methods[i].name;i++){
    if (clss->methods[i].name[0]=='_' && clss->methods[i].name[1]=='_'){
      SWIG_Lua_add_function(L,clss->methods[i].name,clss->methods[i].method);
    }
  }
}

/* set up the base classes pointers.
Each class structure has a list of pointers to the base class structures.
This function fills them.
It cannot be done at compile time, as this will not work with hireachies
spread over more than one swig file. 
Therefore it must be done at runtime, querying the SWIG type system.
*/
SWIGINTERN void SWIG_Lua_init_base_class(lua_State* L,swig_lua_class* clss)
{
  int i=0;
  swig_module_info* module=SWIG_GetModule(L);
  for(i=0;clss->base_names[i];i++)
  {
    if (clss->bases[i]==0) /* not found yet */
    {
      /* lookup and cache the base class */
      swig_type_info *info = SWIG_TypeQueryModule(module,module,clss->base_names[i]);
      if (info) clss->bases[i] = (swig_lua_class *) info->clientdata;
    }
  }	
}

/* performs the entire class registration process */
SWIGINTERN void  SWIG_Lua_class_register(lua_State* L,swig_lua_class* clss)
{
  /*  add its constructor to module with the name of the class
  so you can do MyClass(...) as well as new_MyClass(...)
  BUT only if a constructor is defined
  (this overcomes the problem of pure virtual classes without constructors)*/
  if (clss->constructor)
    SWIG_Lua_add_function(L,clss->name,clss->constructor);

  SWIG_Lua_get_class_registry(L);  /* get the registry */
  lua_pushstring(L,clss->name);  /* get the name */
  lua_newtable(L);    /* create the metatable */
  /* add string of class name called ".type" */
  lua_pushstring(L,".type");
  lua_pushstring(L,clss->name);
  lua_rawset(L,-3);
  /* add a table called ".get" */
  lua_pushstring(L,".get");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add a table called ".set" */
  lua_pushstring(L,".set");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add a table called ".fn" */
  lua_pushstring(L,".fn");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add accessor fns for using the .get,.set&.fn */
  SWIG_Lua_add_function(L,"__index",SWIG_Lua_class_get);
  SWIG_Lua_add_function(L,"__newindex",SWIG_Lua_class_set);
  SWIG_Lua_add_function(L,"__gc",SWIG_Lua_class_destruct);
  /* add it */
  lua_rawset(L,-3);  /* metatable into registry */
  lua_pop(L,1);      /* tidy stack (remove registry) */

  SWIG_Lua_get_class_metatable(L,clss->name);
  SWIG_Lua_add_class_details(L,clss);  /* recursive adding of details (atts & ops) */
  lua_pop(L,1);      /* tidy stack (remove class metatable) */
}

/* -----------------------------------------------------------------------------
 * Class/structure conversion fns
 * ----------------------------------------------------------------------------- */

/* helper to add metatable to new lua object */
SWIGINTERN void _SWIG_Lua_AddMetatable(lua_State* L,swig_type_info *type)
{
  if (type->clientdata)  /* there is clientdata: so add the metatable */
  {
    SWIG_Lua_get_class_metatable(L,((swig_lua_class*)(type->clientdata))->name);
    if (lua_istable(L,-1))
    {
      lua_setmetatable(L,-2);
    }
    else
    {
      lua_pop(L,1);
    }
  }
}

/* pushes a new object into the lua stack */
SWIGRUNTIME void SWIG_Lua_NewPointerObj(lua_State* L,void* ptr,swig_type_info *type, int own)
{
  swig_lua_userdata* usr;
  if (!ptr){
    lua_pushnil(L);
    return;
  }
  usr=(swig_lua_userdata*)lua_newuserdata(L,sizeof(swig_lua_userdata));  /* get data */
  usr->ptr=ptr;  /* set the ptr */
  usr->type=type;
  usr->own=own;
  _SWIG_Lua_AddMetatable(L,type); /* add metatable */
}

/* takes a object from the lua stack & converts it into an object of the correct type
 (if possible) */
SWIGRUNTIME int  SWIG_Lua_ConvertPtr(lua_State* L,int index,void** ptr,swig_type_info *type,int flags)
{
  swig_lua_userdata* usr;
  swig_cast_info *cast;
  if (lua_isnil(L,index)){*ptr=0; return SWIG_OK;}    /* special case: lua nil => NULL pointer */
  usr=(swig_lua_userdata*)lua_touserdata(L,index);  /* get data */
  if (usr)
  {
    if (flags & SWIG_POINTER_DISOWN) /* must disown the object */
    {
        usr->own=0;
    }
    if (!type)            /* special cast void*, no casting fn */
    {
      *ptr=usr->ptr;
      return SWIG_OK; /* ok */
    }
    cast=SWIG_TypeCheckStruct(usr->type,type); /* performs normal type checking */
    if (cast)
    {
      int newmemory = 0;
      *ptr=SWIG_TypeCast(cast,usr->ptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
      return SWIG_OK;  /* ok */
    }
  }
  return SWIG_ERROR;  /* error */
}

SWIGRUNTIME void* SWIG_Lua_MustGetPtr(lua_State* L,int index,swig_type_info *type,int flags,
       int argnum,const char* func_name){
  void* result;
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,index,&result,type,flags))){
    lua_pushfstring(L,"Error in %s, expected a %s at argument number %d\n",
      func_name,(type && type->str)?type->str:"void*",argnum);
    lua_error(L);
  }
  return result;
}

/* pushes a packed userdata. user for member fn pointers only */
SWIGRUNTIME void SWIG_Lua_NewPackedObj(lua_State* L,void* ptr,size_t size,swig_type_info *type)
{
  swig_lua_rawdata* raw;
  assert(ptr); /* not acceptable to pass in a NULL value */
  raw=(swig_lua_rawdata*)lua_newuserdata(L,sizeof(swig_lua_rawdata)-1+size);  /* alloc data */
  raw->type=type;
  raw->own=0;
  memcpy(raw->data,ptr,size); /* copy the data */
  _SWIG_Lua_AddMetatable(L,type); /* add metatable */
}
    
/* converts a packed userdata. user for member fn pointers only */
SWIGRUNTIME int  SWIG_Lua_ConvertPacked(lua_State* L,int index,void* ptr,size_t size,swig_type_info *type)
{
  swig_lua_rawdata* raw;
  raw=(swig_lua_rawdata*)lua_touserdata(L,index);  /* get data */
  if (!raw) return SWIG_ERROR;  /* error */
  if (type==0 || type==raw->type) /* void* or identical type */
  {
    memcpy(ptr,raw->data,size); /* copy it */
    return SWIG_OK; /* ok */
  }
  return SWIG_ERROR;  /* error */
}

/* a function to get the typestring of a piece of data */
SWIGRUNTIME const char *SWIG_Lua_typename(lua_State *L, int tp)
{
  swig_lua_userdata* usr;
  if (lua_isuserdata(L,tp))
  {
    usr=(swig_lua_userdata*)lua_touserdata(L,tp);  /* get data */
    if (usr && usr->type && usr->type->str)
      return usr->type->str;
    return "userdata (unknown type)";
  }
  return lua_typename(L,lua_type(L,tp));
}

/* lua callable function to get the userdata's type */
SWIGRUNTIME int SWIG_Lua_type(lua_State* L)
{
  lua_pushstring(L,SWIG_Lua_typename(L,1));
  return 1;
}

/* lua callable function to compare userdata's value
the issue is that two userdata may point to the same thing
but to lua, they are different objects */
SWIGRUNTIME int SWIG_Lua_equal(lua_State* L)
{
  int result;
  swig_lua_userdata *usr1,*usr2;
  if (!lua_isuserdata(L,1) || !lua_isuserdata(L,2))  /* just in case */
    return 0;  /* nil reply */
  usr1=(swig_lua_userdata*)lua_touserdata(L,1);  /* get data */
  usr2=(swig_lua_userdata*)lua_touserdata(L,2);  /* get data */
  /*result=(usr1->ptr==usr2->ptr && usr1->type==usr2->type); only works if type is the same*/
  result=(usr1->ptr==usr2->ptr);
   lua_pushboolean(L,result);
  return 1;
}

/* -----------------------------------------------------------------------------
 * global variable support code: class/struct typemap functions
 * ----------------------------------------------------------------------------- */

/* Install Constants */
SWIGINTERN void
SWIG_Lua_InstallConstants(lua_State* L, swig_lua_const_info constants[]) {
  int i;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_LUA_INT:
      lua_pushstring(L,constants[i].name);
      lua_pushnumber(L,(lua_Number)constants[i].lvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_FLOAT:
      lua_pushstring(L,constants[i].name);
      lua_pushnumber(L,(lua_Number)constants[i].dvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_CHAR:
      lua_pushstring(L,constants[i].name);
      lua_pushfstring(L,"%c",(char)constants[i].lvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_STRING:
      lua_pushstring(L,constants[i].name);
      lua_pushstring(L,(char *) constants[i].pvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_POINTER:
      lua_pushstring(L,constants[i].name);
      SWIG_NewPointerObj(L,constants[i].pvalue, *(constants[i]).ptype,0);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_BINARY:
      lua_pushstring(L,constants[i].name);
      SWIG_NewMemberObj(L,constants[i].pvalue,constants[i].lvalue,*(constants[i]).ptype);
      lua_rawset(L,-3);
      break;
    default:
      break;
    }
  }
}

/* -----------------------------------------------------------------------------
 * executing lua code from within the wrapper
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DOSTRING_FAIL /* Allows redefining of error function */
#define SWIG_DOSTRING_FAIL(S) fprintf(stderr,"%s\n",S)
#endif
/* Executes a C string in Lua a really simple way of calling lua from C
Unfortunately lua keeps changing its API's, so we need a conditional compile
In lua 5.0.X its lua_dostring()
In lua 5.1.X its luaL_dostring()
*/
SWIGINTERN int 
SWIG_Lua_dostring(lua_State *L, const char* str) {
  int ok,top;
  if (str==0 || str[0]==0) return 0; /* nothing to do */
  top=lua_gettop(L); /* save stack */
#if (defined(LUA_VERSION_NUM) && (LUA_VERSION_NUM>=501))
  ok=luaL_dostring(L,str);	/* looks like this is lua 5.1.X or later, good */
#else
  ok=lua_dostring(L,str);	/* might be lua 5.0.x, using lua_dostring */
#endif
  if (ok!=0) {
    SWIG_DOSTRING_FAIL(lua_tostring(L,-1));
  }
  lua_settop(L,top); /* restore the stack */
  return ok;
}    

#ifdef __cplusplus
}
#endif

/* ------------------------------ end luarun.swg  ------------------------------ */


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_AOKPT swig_types[0]
#define SWIGTYPE_p_AOKRECT swig_types[1]
#define SWIGTYPE_p_Condition swig_types[2]
#define SWIGTYPE_p_Condition_AISignal swig_types[3]
#define SWIGTYPE_p_Condition_AccumulateAttribute swig_types[4]
#define SWIGTYPE_p_Condition_BringObjectToArea swig_types[5]
#define SWIGTYPE_p_Condition_BringObjectToObject swig_types[6]
#define SWIGTYPE_p_Condition_CaptureObject swig_types[7]
#define SWIGTYPE_p_Condition_DestroyObject swig_types[8]
#define SWIGTYPE_p_Condition_DifficultyLevel swig_types[9]
#define SWIGTYPE_p_Condition_None swig_types[10]
#define SWIGTYPE_p_Condition_ObjectHasTarget swig_types[11]
#define SWIGTYPE_p_Condition_ObjectNotVisible swig_types[12]
#define SWIGTYPE_p_Condition_ObjectSelected swig_types[13]
#define SWIGTYPE_p_Condition_ObjectVisible swig_types[14]
#define SWIGTYPE_p_Condition_ObjectsInArea swig_types[15]
#define SWIGTYPE_p_Condition_OwnFewerObjects swig_types[16]
#define SWIGTYPE_p_Condition_OwnObjects swig_types[17]
#define SWIGTYPE_p_Condition_PlayerDefeated swig_types[18]
#define SWIGTYPE_p_Condition_ResearchTechnology swig_types[19]
#define SWIGTYPE_p_Condition_ResearchingTechnology swig_types[20]
#define SWIGTYPE_p_Condition_Timer swig_types[21]
#define SWIGTYPE_p_Condition_UnitsGarrisoned swig_types[22]
#define SWIGTYPE_p_Effect swig_types[23]
#define SWIGTYPE_p_Effect_AIScriptGoal swig_types[24]
#define SWIGTYPE_p_Effect_ActivateTrigger swig_types[25]
#define SWIGTYPE_p_Effect_ChangeDiplomacy swig_types[26]
#define SWIGTYPE_p_Effect_ChangeObjectAttack swig_types[27]
#define SWIGTYPE_p_Effect_ChangeObjectHP swig_types[28]
#define SWIGTYPE_p_Effect_ChangeObjectName swig_types[29]
#define SWIGTYPE_p_Effect_ChangeOwnership swig_types[30]
#define SWIGTYPE_p_Effect_ChangeView swig_types[31]
#define SWIGTYPE_p_Effect_ClearInstructions swig_types[32]
#define SWIGTYPE_p_Effect_CreateObject swig_types[33]
#define SWIGTYPE_p_Effect_DamageObject swig_types[34]
#define SWIGTYPE_p_Effect_DeactivateTrigger swig_types[35]
#define SWIGTYPE_p_Effect_DeclareVictory swig_types[36]
#define SWIGTYPE_p_Effect_DisplayInstructions swig_types[37]
#define SWIGTYPE_p_Effect_FreezeUnit swig_types[38]
#define SWIGTYPE_p_Effect_KillObject swig_types[39]
#define SWIGTYPE_p_Effect_LockGate swig_types[40]
#define SWIGTYPE_p_Effect_None swig_types[41]
#define SWIGTYPE_p_Effect_Patrol swig_types[42]
#define SWIGTYPE_p_Effect_PlaceFoundation swig_types[43]
#define SWIGTYPE_p_Effect_PlaySound swig_types[44]
#define SWIGTYPE_p_Effect_RemoveObject swig_types[45]
#define SWIGTYPE_p_Effect_ResearchTechnology swig_types[46]
#define SWIGTYPE_p_Effect_SendChat swig_types[47]
#define SWIGTYPE_p_Effect_SendTribute swig_types[48]
#define SWIGTYPE_p_Effect_StopUnit swig_types[49]
#define SWIGTYPE_p_Effect_TaskObject swig_types[50]
#define SWIGTYPE_p_Effect_Unload swig_types[51]
#define SWIGTYPE_p_Effect_UnlockGate swig_types[52]
#define SWIGTYPE_p_Effect_UseAdvancedButtons swig_types[53]
#define SWIGTYPE_p_FILE swig_types[54]
#define SWIGTYPE_p_NewTrigger swig_types[55]
#define SWIGTYPE_p_eclong swig_types[56]
#define SWIGTYPE_p_p_char swig_types[57]
#define SWIGTYPE_p_std__string swig_types[58]
#define SWIGTYPE_p_std__vectorT_int_t swig_types[59]
static swig_type_info *swig_types[61];
static swig_module_info swig_module = {swig_types, 60, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_name      "Scenario"
#define SWIG_init      luaopen_Scenario
#define SWIG_init_user luaopen_Scenario_user

#define SWIG_LUACODE   luaopen_Scenario_luacode


namespace swig {
typedef struct{} LANGUAGE_OBJ;
}


#include "../genie/ECTypes.h"


#include "../genie/Effect.h"


#include "../genie/EffectTypes.h"


SWIGINTERN int SWIG_lua_isnilstring(lua_State *L, int idx) {
  int ret = lua_isstring(L, idx);
  if (!ret)
   ret = lua_isnil(L, idx);
  return ret;
}


#include "../genie/Condition.h"


#include "../genie/ConditionTypes.h"


#include "../lua/NewTrigger.h"

#ifdef __cplusplus
extern "C" {
#endif
static int _wrap_new_Effect(lua_State* L) {
  int SWIG_arg = 0;
  long arg1 ;
  Effect *result = 0 ;
  
  SWIG_check_num_args("Effect::Effect",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("Effect::Effect",1,"long");
  arg1 = (long)lua_tonumber(L, 1);
  result = (Effect *)new Effect(arg1);
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_createType__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  long arg1 ;
  Effect *result = 0 ;
  
  SWIG_check_num_args("Effect::createType",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("Effect::createType",1,"long");
  arg1 = (long)lua_tonumber(L, 1);
  result = (Effect *)Effect::createType(arg1);
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_createType__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect *result = 0 ;
  
  SWIG_check_num_args("Effect::createType",0,0)
  result = (Effect *)Effect::createType();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_createType(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_Effect_createType__SWIG_1(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_Effect_createType__SWIG_0(L);
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_createType'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect::createType(long)\n"
    "    Effect::createType()\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_getName(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  char *result = 0 ;
  
  SWIG_check_num_args("Effect::getName",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getName",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getName",1,SWIGTYPE_p_Effect);
  }
  
  result = (char *)(arg1)->getName();
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_read(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::read",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::read",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::read",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_read",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_read",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->read(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_write(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::write",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::write",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::write",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_write",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_write",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->write(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_check(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  bool result;
  
  SWIG_check_num_args("Effect::check",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::check",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_check",1,SWIGTYPE_p_Effect);
  }
  
  result = (bool)(arg1)->check();
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getType(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getType",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getType",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getAmount",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getAmount",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getLocation",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getLocation",1,SWIGTYPE_p_Effect);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getArea",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getArea",1,SWIGTYPE_p_Effect);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getAiGoal(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getAiGoal",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getAiGoal",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getAiGoal",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getAiGoal();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getDiplomacy(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getDiplomacy",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getDiplomacy",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getDiplomacy",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getDiplomacy();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getDisplayTime(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getDisplayTime",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getDisplayTime",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getDisplayTime",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getDisplayTime();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getNumSelected(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getNumSelected",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getNumSelected",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getNumSelected",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getNumSelected();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getPanel(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getPanel",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getPanel",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getPanel",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getPanel();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getPlayerSource",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getPlayerSource",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getPlayerTarget",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getPlayerTarget",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getPlayerTarget",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getPlayerTarget();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getResource(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getResource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getResource",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getResource",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getResource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getTechnology",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getTechnology",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getTechnology();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getTriggerIndex(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getTriggerIndex",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getTriggerIndex",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getTriggerIndex",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getTriggerIndex();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getUids",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getUids",1,SWIGTYPE_p_Effect);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getUidLocation",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getUidLocation",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getUnitGroup",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getUnitGroup",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getUnitType",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getUnitType",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getUnitConst",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getUnitConst",1,SWIGTYPE_p_Effect);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect::getSound",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getSound",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getSound",1,SWIGTYPE_p_Effect);
  }
  
  result = (arg1)->getSound();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_getText(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect::getText",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::getText",1,"Effect *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_getText",1,SWIGTYPE_p_Effect);
  }
  
  result = (arg1)->getText();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readAmount",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readAmount",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readLocation",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readLocation",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readArea",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readArea",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readAiGoal(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readAiGoal",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readAiGoal",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readAiGoal",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readAiGoal",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readAiGoal",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAiGoal(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readDiplomacy(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readDiplomacy",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readDiplomacy",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readDiplomacy",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readDiplomacy",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readDiplomacy",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readDiplomacy(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readDisplayTime(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readDisplayTime",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readDisplayTime",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readDisplayTime",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readDisplayTime",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readDisplayTime",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readDisplayTime(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readPanel(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readPanel",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readPanel",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readPanel",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readPanel",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readPanel",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPanel(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readPlayerSource",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readPlayerSource",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readPlayerTarget",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readPlayerTarget",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readPlayerTarget",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readPlayerTarget",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readPlayerTarget",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerTarget(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readResource(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readResource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readResource",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readResource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readResource",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readResource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readResource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readTechnology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readTechnology",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readTechnology",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readTechnology",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readTechnology",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTechnology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readTriggerIndex(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readTriggerIndex",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readTriggerIndex",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readTriggerIndex",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readTriggerIndex",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readTriggerIndex",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTriggerIndex(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readType(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readType",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readType",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readUids",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readUids",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readUidLocation",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readUidLocation",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readUnitGroup",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readUnitGroup",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readUnitType",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readUnitType",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readUnitConst",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readUnitConst",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readSound",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readSound",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readSound",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readSound",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readSound",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readSound(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_readText(lua_State* L) {
  int SWIG_arg = 0;
  Effect *arg1 = (Effect *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect::readText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::readText",1,"Effect *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect::readText",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect,0))){
    SWIG_fail_ptr("Effect_readText",1,SWIGTYPE_p_Effect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_readText",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readText(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_types_set(lua_State* L) {
  int SWIG_arg = 0;
  char **arg1 ;
  
  SWIG_check_num_args("Effect::types",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::types",1,"char const *[30]");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_p_char,0))){
    SWIG_fail_ptr("Effect_types_set",1,SWIGTYPE_p_p_char);
  }
  
  {
    size_t ii;
    char const * *b = (char const * *) Effect::types;
    for (ii = 0; ii < (size_t)30; ii++) b[ii] = *((char const * *) arg1 + ii);
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_types_get(lua_State* L) {
  int SWIG_arg = 0;
  char **result = 0 ;
  
  SWIG_check_num_args("Effect::types",0,0)
  result = (char **)(char **)Effect::types;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_p_char,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_propertyTypes_set(lua_State* L) {
  int SWIG_arg = 0;
  char **arg1 ;
  
  SWIG_check_num_args("Effect::propertyTypes",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect::propertyTypes",1,"char const *[21]");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_p_char,0))){
    SWIG_fail_ptr("Effect_propertyTypes_set",1,SWIGTYPE_p_p_char);
  }
  
  {
    size_t ii;
    char const * *b = (char const * *) Effect::propertyTypes;
    for (ii = 0; ii < (size_t)21; ii++) b[ii] = *((char const * *) arg1 + ii);
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_propertyTypes_get(lua_State* L) {
  int SWIG_arg = 0;
  char **result = 0 ;
  
  SWIG_check_num_args("Effect::propertyTypes",0,0)
  result = (char **)(char **)Effect::propertyTypes;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_p_char,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect(void *obj) {
Effect *arg1 = (Effect *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_methods[] = {
    {"getName", _wrap_Effect_getName}, 
    {"read", _wrap_Effect_read}, 
    {"write", _wrap_Effect_write}, 
    {"check", _wrap_Effect_check}, 
    {"getType", _wrap_Effect_getType}, 
    {"getAmount", _wrap_Effect_getAmount}, 
    {"getLocation", _wrap_Effect_getLocation}, 
    {"getArea", _wrap_Effect_getArea}, 
    {"getAiGoal", _wrap_Effect_getAiGoal}, 
    {"getDiplomacy", _wrap_Effect_getDiplomacy}, 
    {"getDisplayTime", _wrap_Effect_getDisplayTime}, 
    {"getNumSelected", _wrap_Effect_getNumSelected}, 
    {"getPanel", _wrap_Effect_getPanel}, 
    {"getPlayerSource", _wrap_Effect_getPlayerSource}, 
    {"getPlayerTarget", _wrap_Effect_getPlayerTarget}, 
    {"getResource", _wrap_Effect_getResource}, 
    {"getTechnology", _wrap_Effect_getTechnology}, 
    {"getTriggerIndex", _wrap_Effect_getTriggerIndex}, 
    {"getUids", _wrap_Effect_getUids}, 
    {"getUidLocation", _wrap_Effect_getUidLocation}, 
    {"getUnitGroup", _wrap_Effect_getUnitGroup}, 
    {"getUnitType", _wrap_Effect_getUnitType}, 
    {"getUnitConst", _wrap_Effect_getUnitConst}, 
    {"getSound", _wrap_Effect_getSound}, 
    {"getText", _wrap_Effect_getText}, 
    {"readAmount", _wrap_Effect_readAmount}, 
    {"readLocation", _wrap_Effect_readLocation}, 
    {"readArea", _wrap_Effect_readArea}, 
    {"readAiGoal", _wrap_Effect_readAiGoal}, 
    {"readDiplomacy", _wrap_Effect_readDiplomacy}, 
    {"readDisplayTime", _wrap_Effect_readDisplayTime}, 
    {"readPanel", _wrap_Effect_readPanel}, 
    {"readPlayerSource", _wrap_Effect_readPlayerSource}, 
    {"readPlayerTarget", _wrap_Effect_readPlayerTarget}, 
    {"readResource", _wrap_Effect_readResource}, 
    {"readTechnology", _wrap_Effect_readTechnology}, 
    {"readTriggerIndex", _wrap_Effect_readTriggerIndex}, 
    {"readType", _wrap_Effect_readType}, 
    {"readUids", _wrap_Effect_readUids}, 
    {"readUidLocation", _wrap_Effect_readUidLocation}, 
    {"readUnitGroup", _wrap_Effect_readUnitGroup}, 
    {"readUnitType", _wrap_Effect_readUnitType}, 
    {"readUnitConst", _wrap_Effect_readUnitConst}, 
    {"readSound", _wrap_Effect_readSound}, 
    {"readText", _wrap_Effect_readText}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_bases[] = {0};
static const char *swig_Effect_base_names[] = {0};
static swig_lua_class _wrap_class_Effect = { "Effect", &SWIGTYPE_p_Effect,_wrap_new_Effect, swig_delete_Effect, swig_Effect_methods, swig_Effect_attributes, swig_Effect_bases, swig_Effect_base_names };

static int _wrap_new_Effect_None(lua_State* L) {
  int SWIG_arg = 0;
  Effect_None *result = 0 ;
  
  SWIG_check_num_args("Effect_None::Effect_None",0,0)
  result = (Effect_None *)new Effect_None();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_None,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_None(void *obj) {
Effect_None *arg1 = (Effect_None *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_None_methods[] = {
    {0,0}
};
static swig_lua_attribute swig_Effect_None_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_None_bases[] = {0,0};
static const char *swig_Effect_None_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_None = { "Effect_None", &SWIGTYPE_p_Effect_None,_wrap_new_Effect_None, swig_delete_Effect_None, swig_Effect_None_methods, swig_Effect_None_attributes, swig_Effect_None_bases, swig_Effect_None_base_names };

static int _wrap_new_Effect_ChangeDiplomacy(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *result = 0 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::Effect_ChangeDiplomacy",0,0)
  result = (Effect_ChangeDiplomacy *)new Effect_ChangeDiplomacy();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeDiplomacy,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::p_source",1,"Effect_ChangeDiplomacy *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeDiplomacy::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_p_source",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::getPlayerSource",1,"Effect_ChangeDiplomacy *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_getPlayerSource",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::readPlayerSource",1,"Effect_ChangeDiplomacy *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeDiplomacy::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_readPlayerSource",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_p_target(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::p_target",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::p_target",1,"Effect_ChangeDiplomacy *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeDiplomacy::p_target",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_p_target",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_target(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_getPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::getPlayerTarget",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::getPlayerTarget",1,"Effect_ChangeDiplomacy *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_getPlayerTarget",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  result = (long)(arg1)->getPlayerTarget();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_readPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::readPlayerTarget",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::readPlayerTarget",1,"Effect_ChangeDiplomacy *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeDiplomacy::readPlayerTarget",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_readPlayerTarget",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_readPlayerTarget",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerTarget(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_diplomacy__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::diplomacy",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::diplomacy",1,"Effect_ChangeDiplomacy *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeDiplomacy::diplomacy",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_diplomacy",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->diplomacy(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_diplomacy__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::diplomacy",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::diplomacy",1,"Effect_ChangeDiplomacy *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeDiplomacy::diplomacy",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_diplomacy",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->diplomacy((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_diplomacy(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeDiplomacy, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeDiplomacy_diplomacy__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeDiplomacy, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeDiplomacy_diplomacy__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeDiplomacy_diplomacy'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeDiplomacy::diplomacy(int)\n"
    "    Effect_ChangeDiplomacy::diplomacy(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeDiplomacy_getDiplomacy(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::getDiplomacy",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::getDiplomacy",1,"Effect_ChangeDiplomacy *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_getDiplomacy",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  result = (long)(arg1)->getDiplomacy();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeDiplomacy_readDiplomacy(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeDiplomacy::readDiplomacy",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeDiplomacy::readDiplomacy",1,"Effect_ChangeDiplomacy *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeDiplomacy::readDiplomacy",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeDiplomacy,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_readDiplomacy",1,SWIGTYPE_p_Effect_ChangeDiplomacy);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeDiplomacy_readDiplomacy",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readDiplomacy(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ChangeDiplomacy(void *obj) {
Effect_ChangeDiplomacy *arg1 = (Effect_ChangeDiplomacy *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ChangeDiplomacy_methods[] = {
    {"p_source", _wrap_Effect_ChangeDiplomacy_p_source}, 
    {"getPlayerSource", _wrap_Effect_ChangeDiplomacy_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_ChangeDiplomacy_readPlayerSource}, 
    {"p_target", _wrap_Effect_ChangeDiplomacy_p_target}, 
    {"getPlayerTarget", _wrap_Effect_ChangeDiplomacy_getPlayerTarget}, 
    {"readPlayerTarget", _wrap_Effect_ChangeDiplomacy_readPlayerTarget}, 
    {"diplomacy", _wrap_Effect_ChangeDiplomacy_diplomacy}, 
    {"getDiplomacy", _wrap_Effect_ChangeDiplomacy_getDiplomacy}, 
    {"readDiplomacy", _wrap_Effect_ChangeDiplomacy_readDiplomacy}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ChangeDiplomacy_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ChangeDiplomacy_bases[] = {0,0};
static const char *swig_Effect_ChangeDiplomacy_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ChangeDiplomacy = { "Effect_ChangeDiplomacy", &SWIGTYPE_p_Effect_ChangeDiplomacy,_wrap_new_Effect_ChangeDiplomacy, swig_delete_Effect_ChangeDiplomacy, swig_Effect_ChangeDiplomacy_methods, swig_Effect_ChangeDiplomacy_attributes, swig_Effect_ChangeDiplomacy_bases, swig_Effect_ChangeDiplomacy_base_names };

static int _wrap_new_Effect_ResearchTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *result = 0 ;
  
  SWIG_check_num_args("Effect_ResearchTechnology::Effect_ResearchTechnology",0,0)
  result = (Effect_ResearchTechnology *)new Effect_ResearchTechnology();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ResearchTechnology,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ResearchTechnology_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ResearchTechnology::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ResearchTechnology::p_source",1,"Effect_ResearchTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ResearchTechnology::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ResearchTechnology,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_p_source",1,SWIGTYPE_p_Effect_ResearchTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ResearchTechnology_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ResearchTechnology::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ResearchTechnology::getPlayerSource",1,"Effect_ResearchTechnology *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ResearchTechnology,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_getPlayerSource",1,SWIGTYPE_p_Effect_ResearchTechnology);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ResearchTechnology_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ResearchTechnology::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ResearchTechnology::readPlayerSource",1,"Effect_ResearchTechnology *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ResearchTechnology::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ResearchTechnology,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_readPlayerSource",1,SWIGTYPE_p_Effect_ResearchTechnology);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ResearchTechnology_technology(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ResearchTechnology::technology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ResearchTechnology::technology",1,"Effect_ResearchTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ResearchTechnology::technology",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ResearchTechnology,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_technology",1,SWIGTYPE_p_Effect_ResearchTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->technology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ResearchTechnology_tech(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ResearchTechnology::tech",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ResearchTechnology::tech",1,"Effect_ResearchTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ResearchTechnology::tech",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ResearchTechnology,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_tech",1,SWIGTYPE_p_Effect_ResearchTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->tech(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ResearchTechnology_getTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ResearchTechnology::getTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ResearchTechnology::getTechnology",1,"Effect_ResearchTechnology *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ResearchTechnology,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_getTechnology",1,SWIGTYPE_p_Effect_ResearchTechnology);
  }
  
  result = (long)(arg1)->getTechnology();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ResearchTechnology_readTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ResearchTechnology::readTechnology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ResearchTechnology::readTechnology",1,"Effect_ResearchTechnology *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ResearchTechnology::readTechnology",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ResearchTechnology,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_readTechnology",1,SWIGTYPE_p_Effect_ResearchTechnology);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ResearchTechnology_readTechnology",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTechnology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ResearchTechnology(void *obj) {
Effect_ResearchTechnology *arg1 = (Effect_ResearchTechnology *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ResearchTechnology_methods[] = {
    {"p_source", _wrap_Effect_ResearchTechnology_p_source}, 
    {"getPlayerSource", _wrap_Effect_ResearchTechnology_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_ResearchTechnology_readPlayerSource}, 
    {"technology", _wrap_Effect_ResearchTechnology_technology}, 
    {"tech", _wrap_Effect_ResearchTechnology_tech}, 
    {"getTechnology", _wrap_Effect_ResearchTechnology_getTechnology}, 
    {"readTechnology", _wrap_Effect_ResearchTechnology_readTechnology}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ResearchTechnology_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ResearchTechnology_bases[] = {0,0};
static const char *swig_Effect_ResearchTechnology_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ResearchTechnology = { "Effect_ResearchTechnology", &SWIGTYPE_p_Effect_ResearchTechnology,_wrap_new_Effect_ResearchTechnology, swig_delete_Effect_ResearchTechnology, swig_Effect_ResearchTechnology_methods, swig_Effect_ResearchTechnology_attributes, swig_Effect_ResearchTechnology_bases, swig_Effect_ResearchTechnology_base_names };

static int _wrap_new_Effect_SendChat(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *result = 0 ;
  
  SWIG_check_num_args("Effect_SendChat::Effect_SendChat",0,0)
  result = (Effect_SendChat *)new Effect_SendChat();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_SendChat,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_SendChat::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::p_source",1,"Effect_SendChat *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_SendChat::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_p_source",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_SendChat::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::getPlayerSource",1,"Effect_SendChat *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_getPlayerSource",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_SendChat::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::readPlayerSource",1,"Effect_SendChat *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_SendChat::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_readPlayerSource",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_SendChat_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_text(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_SendChat::text",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::text",1,"Effect_SendChat *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_SendChat::text",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_text",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->text((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_getText(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect_SendChat::getText",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::getText",1,"Effect_SendChat *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_getText",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  result = (arg1)->getText();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_readText(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_SendChat::readText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::readText",1,"Effect_SendChat *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_SendChat::readText",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_readText",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_SendChat_readText",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readText(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_sound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_SendChat::sound",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::sound",1,"Effect_SendChat *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_SendChat::sound",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_sound",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->sound((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_getSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect_SendChat::getSound",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::getSound",1,"Effect_SendChat *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_getSound",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  result = (arg1)->getSound();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendChat_readSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendChat *arg1 = (Effect_SendChat *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_SendChat::readSound",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendChat::readSound",1,"Effect_SendChat *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_SendChat::readSound",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendChat,0))){
    SWIG_fail_ptr("Effect_SendChat_readSound",1,SWIGTYPE_p_Effect_SendChat);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_SendChat_readSound",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readSound(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_SendChat(void *obj) {
Effect_SendChat *arg1 = (Effect_SendChat *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_SendChat_methods[] = {
    {"p_source", _wrap_Effect_SendChat_p_source}, 
    {"getPlayerSource", _wrap_Effect_SendChat_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_SendChat_readPlayerSource}, 
    {"text", _wrap_Effect_SendChat_text}, 
    {"getText", _wrap_Effect_SendChat_getText}, 
    {"readText", _wrap_Effect_SendChat_readText}, 
    {"sound", _wrap_Effect_SendChat_sound}, 
    {"getSound", _wrap_Effect_SendChat_getSound}, 
    {"readSound", _wrap_Effect_SendChat_readSound}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_SendChat_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_SendChat_bases[] = {0,0};
static const char *swig_Effect_SendChat_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_SendChat = { "Effect_SendChat", &SWIGTYPE_p_Effect_SendChat,_wrap_new_Effect_SendChat, swig_delete_Effect_SendChat, swig_Effect_SendChat_methods, swig_Effect_SendChat_attributes, swig_Effect_SendChat_bases, swig_Effect_SendChat_base_names };

static int _wrap_new_Effect_PlaySound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaySound *result = 0 ;
  
  SWIG_check_num_args("Effect_PlaySound::Effect_PlaySound",0,0)
  result = (Effect_PlaySound *)new Effect_PlaySound();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_PlaySound,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaySound_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaySound *arg1 = (Effect_PlaySound *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_PlaySound::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaySound::p_source",1,"Effect_PlaySound *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_PlaySound::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaySound,0))){
    SWIG_fail_ptr("Effect_PlaySound_p_source",1,SWIGTYPE_p_Effect_PlaySound);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaySound_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaySound *arg1 = (Effect_PlaySound *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_PlaySound::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaySound::getPlayerSource",1,"Effect_PlaySound *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaySound,0))){
    SWIG_fail_ptr("Effect_PlaySound_getPlayerSource",1,SWIGTYPE_p_Effect_PlaySound);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaySound_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaySound *arg1 = (Effect_PlaySound *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_PlaySound::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaySound::readPlayerSource",1,"Effect_PlaySound *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_PlaySound::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaySound,0))){
    SWIG_fail_ptr("Effect_PlaySound_readPlayerSource",1,SWIGTYPE_p_Effect_PlaySound);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_PlaySound_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaySound_sound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaySound *arg1 = (Effect_PlaySound *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_PlaySound::sound",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaySound::sound",1,"Effect_PlaySound *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_PlaySound::sound",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaySound,0))){
    SWIG_fail_ptr("Effect_PlaySound_sound",1,SWIGTYPE_p_Effect_PlaySound);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->sound((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaySound_getSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaySound *arg1 = (Effect_PlaySound *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect_PlaySound::getSound",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaySound::getSound",1,"Effect_PlaySound *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaySound,0))){
    SWIG_fail_ptr("Effect_PlaySound_getSound",1,SWIGTYPE_p_Effect_PlaySound);
  }
  
  result = (arg1)->getSound();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaySound_readSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaySound *arg1 = (Effect_PlaySound *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_PlaySound::readSound",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaySound::readSound",1,"Effect_PlaySound *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_PlaySound::readSound",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaySound,0))){
    SWIG_fail_ptr("Effect_PlaySound_readSound",1,SWIGTYPE_p_Effect_PlaySound);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_PlaySound_readSound",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readSound(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_PlaySound(void *obj) {
Effect_PlaySound *arg1 = (Effect_PlaySound *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_PlaySound_methods[] = {
    {"p_source", _wrap_Effect_PlaySound_p_source}, 
    {"getPlayerSource", _wrap_Effect_PlaySound_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_PlaySound_readPlayerSource}, 
    {"sound", _wrap_Effect_PlaySound_sound}, 
    {"getSound", _wrap_Effect_PlaySound_getSound}, 
    {"readSound", _wrap_Effect_PlaySound_readSound}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_PlaySound_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_PlaySound_bases[] = {0,0};
static const char *swig_Effect_PlaySound_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_PlaySound = { "Effect_PlaySound", &SWIGTYPE_p_Effect_PlaySound,_wrap_new_Effect_PlaySound, swig_delete_Effect_PlaySound, swig_Effect_PlaySound_methods, swig_Effect_PlaySound_attributes, swig_Effect_PlaySound_bases, swig_Effect_PlaySound_base_names };

static int _wrap_new_Effect_SendTribute(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *result = 0 ;
  
  SWIG_check_num_args("Effect_SendTribute::Effect_SendTribute",0,0)
  result = (Effect_SendTribute *)new Effect_SendTribute();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_SendTribute,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_SendTribute::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::p_source",1,"Effect_SendTribute *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_SendTribute::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_p_source",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_SendTribute::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::getPlayerSource",1,"Effect_SendTribute *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_getPlayerSource",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_SendTribute::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::readPlayerSource",1,"Effect_SendTribute *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_SendTribute::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_readPlayerSource",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_SendTribute_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_p_target(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_SendTribute::p_target",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::p_target",1,"Effect_SendTribute *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_SendTribute::p_target",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_p_target",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_target(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_getPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_SendTribute::getPlayerTarget",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::getPlayerTarget",1,"Effect_SendTribute *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_getPlayerTarget",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  result = (long)(arg1)->getPlayerTarget();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_readPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_SendTribute::readPlayerTarget",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::readPlayerTarget",1,"Effect_SendTribute *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_SendTribute::readPlayerTarget",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_readPlayerTarget",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_SendTribute_readPlayerTarget",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerTarget(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_resource__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_SendTribute::resource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::resource",1,"Effect_SendTribute *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_SendTribute::resource",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_resource",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->resource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_resource__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_SendTribute::resource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::resource",1,"Effect_SendTribute *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_SendTribute::resource",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_resource",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->resource((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_resource(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_SendTribute, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_SendTribute_resource__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_SendTribute, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_SendTribute_resource__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_SendTribute_resource'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_SendTribute::resource(int)\n"
    "    Effect_SendTribute::resource(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_SendTribute_getResource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_SendTribute::getResource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::getResource",1,"Effect_SendTribute *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_getResource",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  result = (long)(arg1)->getResource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_readResource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_SendTribute::readResource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::readResource",1,"Effect_SendTribute *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_SendTribute::readResource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_readResource",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_SendTribute_readResource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readResource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_amount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_SendTribute::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::amount",1,"Effect_SendTribute *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_SendTribute::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_amount",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_SendTribute::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::getAmount",1,"Effect_SendTribute *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_getAmount",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_SendTribute_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_SendTribute *arg1 = (Effect_SendTribute *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_SendTribute::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_SendTribute::readAmount",1,"Effect_SendTribute *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_SendTribute::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_SendTribute,0))){
    SWIG_fail_ptr("Effect_SendTribute_readAmount",1,SWIGTYPE_p_Effect_SendTribute);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_SendTribute_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_SendTribute(void *obj) {
Effect_SendTribute *arg1 = (Effect_SendTribute *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_SendTribute_methods[] = {
    {"p_source", _wrap_Effect_SendTribute_p_source}, 
    {"getPlayerSource", _wrap_Effect_SendTribute_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_SendTribute_readPlayerSource}, 
    {"p_target", _wrap_Effect_SendTribute_p_target}, 
    {"getPlayerTarget", _wrap_Effect_SendTribute_getPlayerTarget}, 
    {"readPlayerTarget", _wrap_Effect_SendTribute_readPlayerTarget}, 
    {"resource", _wrap_Effect_SendTribute_resource}, 
    {"getResource", _wrap_Effect_SendTribute_getResource}, 
    {"readResource", _wrap_Effect_SendTribute_readResource}, 
    {"amount", _wrap_Effect_SendTribute_amount}, 
    {"getAmount", _wrap_Effect_SendTribute_getAmount}, 
    {"readAmount", _wrap_Effect_SendTribute_readAmount}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_SendTribute_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_SendTribute_bases[] = {0,0};
static const char *swig_Effect_SendTribute_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_SendTribute = { "Effect_SendTribute", &SWIGTYPE_p_Effect_SendTribute,_wrap_new_Effect_SendTribute, swig_delete_Effect_SendTribute, swig_Effect_SendTribute_methods, swig_Effect_SendTribute_attributes, swig_Effect_SendTribute_bases, swig_Effect_SendTribute_base_names };

static int _wrap_new_Effect_UnlockGate(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *result = 0 ;
  
  SWIG_check_num_args("Effect_UnlockGate::Effect_UnlockGate",0,0)
  result = (Effect_UnlockGate *)new Effect_UnlockGate();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_UnlockGate,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_UnlockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_UnlockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_UnlockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_UnlockGate::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_UnlockGate::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_UnlockGate::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_UnlockGate::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_UnlockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_UnlockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_UnlockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_UnlockGate::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_UnlockGate::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_UnlockGate::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_UnlockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_UnlockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_UnlockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_UnlockGate::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_UnlockGate::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_UnlockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_UnlockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_UnlockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_UnlockGate::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_UnlockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_UnlockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_UnlockGate::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_UnlockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_UnlockGate::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_UnlockGate::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_UnlockGate::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_UnlockGate::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_UnlockGate::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_UnlockGate::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_UnlockGate::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_UnlockGate::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_UnlockGate::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_UnlockGate::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_UnlockGate::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_UnlockGate::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_UnlockGate::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_UnlockGate::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_UnlockGate::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_UnlockGate::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::units",1,"Effect_UnlockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_UnlockGate::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_units",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_UnlockGate_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_UnlockGate_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_UnlockGate_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_UnlockGate_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_UnlockGate_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_UnlockGate_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_UnlockGate_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_UnlockGate_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_UnlockGate_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_UnlockGate_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_UnlockGate_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_UnlockGate_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_UnlockGate_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_UnlockGate_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_UnlockGate_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_UnlockGate_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_UnlockGate_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_UnlockGate_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_UnlockGate_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_UnlockGate_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_UnlockGate_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_UnlockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_UnlockGate_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_UnlockGate_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int,int)\n"
    "    Effect_UnlockGate::units(int,int,int)\n"
    "    Effect_UnlockGate::units(int,int)\n"
    "    Effect_UnlockGate::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_UnlockGate_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_UnlockGate::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::getUids",1,"Effect_UnlockGate *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_getUids",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_UnlockGate_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UnlockGate *arg1 = (Effect_UnlockGate *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_UnlockGate::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_UnlockGate::readUids",1,"Effect_UnlockGate *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_UnlockGate::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_UnlockGate::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_UnlockGate,0))){
    SWIG_fail_ptr("Effect_UnlockGate_readUids",1,SWIGTYPE_p_Effect_UnlockGate);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_UnlockGate_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_UnlockGate(void *obj) {
Effect_UnlockGate *arg1 = (Effect_UnlockGate *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_UnlockGate_methods[] = {
    {"units", _wrap_Effect_UnlockGate_units}, 
    {"getUids", _wrap_Effect_UnlockGate_getUids}, 
    {"readUids", _wrap_Effect_UnlockGate_readUids}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_UnlockGate_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_UnlockGate_bases[] = {0,0};
static const char *swig_Effect_UnlockGate_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_UnlockGate = { "Effect_UnlockGate", &SWIGTYPE_p_Effect_UnlockGate,_wrap_new_Effect_UnlockGate, swig_delete_Effect_UnlockGate, swig_Effect_UnlockGate_methods, swig_Effect_UnlockGate_attributes, swig_Effect_UnlockGate_bases, swig_Effect_UnlockGate_base_names };

static int _wrap_new_Effect_LockGate(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *result = 0 ;
  
  SWIG_check_num_args("Effect_LockGate::Effect_LockGate",0,0)
  result = (Effect_LockGate *)new Effect_LockGate();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_LockGate,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_LockGate::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_LockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_LockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_LockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_LockGate::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_LockGate::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_LockGate::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_LockGate::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_LockGate::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_LockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_LockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_LockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_LockGate::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_LockGate::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_LockGate::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_LockGate::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_LockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_LockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_LockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_LockGate::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_LockGate::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_LockGate::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_LockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_LockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_LockGate::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_LockGate::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_LockGate::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_LockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_LockGate::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_LockGate::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_LockGate::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_LockGate::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_LockGate::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_LockGate::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_LockGate::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_LockGate::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_LockGate::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_LockGate::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_LockGate::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_LockGate::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_LockGate::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_LockGate::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_LockGate::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_LockGate::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_LockGate::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_LockGate::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_LockGate::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_LockGate::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_LockGate::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_LockGate::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_LockGate::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_LockGate::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_LockGate::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_LockGate::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_LockGate::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_LockGate::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_LockGate::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_LockGate::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_LockGate::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_LockGate::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_LockGate::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_LockGate::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_LockGate::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::units",1,"Effect_LockGate *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_LockGate::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_units",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_LockGate_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_LockGate_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_LockGate_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_LockGate_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_LockGate_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_LockGate_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_LockGate_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_LockGate_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_LockGate_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_LockGate_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_LockGate_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_LockGate_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_LockGate_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_LockGate_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_LockGate_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_LockGate_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_LockGate_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_LockGate_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_LockGate_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_LockGate_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_LockGate_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_LockGate, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_LockGate_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_LockGate_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int,int)\n"
    "    Effect_LockGate::units(int,int,int)\n"
    "    Effect_LockGate::units(int,int)\n"
    "    Effect_LockGate::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_LockGate_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_LockGate::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::getUids",1,"Effect_LockGate *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_getUids",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_LockGate_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_LockGate *arg1 = (Effect_LockGate *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_LockGate::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_LockGate::readUids",1,"Effect_LockGate *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_LockGate::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_LockGate::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_LockGate,0))){
    SWIG_fail_ptr("Effect_LockGate_readUids",1,SWIGTYPE_p_Effect_LockGate);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_LockGate_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_LockGate(void *obj) {
Effect_LockGate *arg1 = (Effect_LockGate *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_LockGate_methods[] = {
    {"units", _wrap_Effect_LockGate_units}, 
    {"getUids", _wrap_Effect_LockGate_getUids}, 
    {"readUids", _wrap_Effect_LockGate_readUids}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_LockGate_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_LockGate_bases[] = {0,0};
static const char *swig_Effect_LockGate_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_LockGate = { "Effect_LockGate", &SWIGTYPE_p_Effect_LockGate,_wrap_new_Effect_LockGate, swig_delete_Effect_LockGate, swig_Effect_LockGate_methods, swig_Effect_LockGate_attributes, swig_Effect_LockGate_bases, swig_Effect_LockGate_base_names };

static int _wrap_new_Effect_ActivateTrigger(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ActivateTrigger *result = 0 ;
  
  SWIG_check_num_args("Effect_ActivateTrigger::Effect_ActivateTrigger",0,0)
  result = (Effect_ActivateTrigger *)new Effect_ActivateTrigger();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ActivateTrigger,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ActivateTrigger_trigger(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ActivateTrigger *arg1 = (Effect_ActivateTrigger *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ActivateTrigger::trigger",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ActivateTrigger::trigger",1,"Effect_ActivateTrigger *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ActivateTrigger::trigger",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ActivateTrigger,0))){
    SWIG_fail_ptr("Effect_ActivateTrigger_trigger",1,SWIGTYPE_p_Effect_ActivateTrigger);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->trigger(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ActivateTrigger_getTriggerIndex(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ActivateTrigger *arg1 = (Effect_ActivateTrigger *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ActivateTrigger::getTriggerIndex",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ActivateTrigger::getTriggerIndex",1,"Effect_ActivateTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ActivateTrigger,0))){
    SWIG_fail_ptr("Effect_ActivateTrigger_getTriggerIndex",1,SWIGTYPE_p_Effect_ActivateTrigger);
  }
  
  result = (long)(arg1)->getTriggerIndex();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ActivateTrigger_readTriggerIndex(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ActivateTrigger *arg1 = (Effect_ActivateTrigger *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ActivateTrigger::readTriggerIndex",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ActivateTrigger::readTriggerIndex",1,"Effect_ActivateTrigger *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ActivateTrigger::readTriggerIndex",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ActivateTrigger,0))){
    SWIG_fail_ptr("Effect_ActivateTrigger_readTriggerIndex",1,SWIGTYPE_p_Effect_ActivateTrigger);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ActivateTrigger_readTriggerIndex",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTriggerIndex(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ActivateTrigger(void *obj) {
Effect_ActivateTrigger *arg1 = (Effect_ActivateTrigger *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ActivateTrigger_methods[] = {
    {"trigger", _wrap_Effect_ActivateTrigger_trigger}, 
    {"getTriggerIndex", _wrap_Effect_ActivateTrigger_getTriggerIndex}, 
    {"readTriggerIndex", _wrap_Effect_ActivateTrigger_readTriggerIndex}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ActivateTrigger_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ActivateTrigger_bases[] = {0,0};
static const char *swig_Effect_ActivateTrigger_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ActivateTrigger = { "Effect_ActivateTrigger", &SWIGTYPE_p_Effect_ActivateTrigger,_wrap_new_Effect_ActivateTrigger, swig_delete_Effect_ActivateTrigger, swig_Effect_ActivateTrigger_methods, swig_Effect_ActivateTrigger_attributes, swig_Effect_ActivateTrigger_bases, swig_Effect_ActivateTrigger_base_names };

static int _wrap_new_Effect_DeactivateTrigger(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeactivateTrigger *result = 0 ;
  
  SWIG_check_num_args("Effect_DeactivateTrigger::Effect_DeactivateTrigger",0,0)
  result = (Effect_DeactivateTrigger *)new Effect_DeactivateTrigger();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DeactivateTrigger,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DeactivateTrigger_trigger(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeactivateTrigger *arg1 = (Effect_DeactivateTrigger *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DeactivateTrigger::trigger",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DeactivateTrigger::trigger",1,"Effect_DeactivateTrigger *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DeactivateTrigger::trigger",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DeactivateTrigger,0))){
    SWIG_fail_ptr("Effect_DeactivateTrigger_trigger",1,SWIGTYPE_p_Effect_DeactivateTrigger);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->trigger(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DeactivateTrigger_getTriggerIndex(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeactivateTrigger *arg1 = (Effect_DeactivateTrigger *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DeactivateTrigger::getTriggerIndex",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DeactivateTrigger::getTriggerIndex",1,"Effect_DeactivateTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DeactivateTrigger,0))){
    SWIG_fail_ptr("Effect_DeactivateTrigger_getTriggerIndex",1,SWIGTYPE_p_Effect_DeactivateTrigger);
  }
  
  result = (long)(arg1)->getTriggerIndex();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DeactivateTrigger_readTriggerIndex(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeactivateTrigger *arg1 = (Effect_DeactivateTrigger *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DeactivateTrigger::readTriggerIndex",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DeactivateTrigger::readTriggerIndex",1,"Effect_DeactivateTrigger *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DeactivateTrigger::readTriggerIndex",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DeactivateTrigger,0))){
    SWIG_fail_ptr("Effect_DeactivateTrigger_readTriggerIndex",1,SWIGTYPE_p_Effect_DeactivateTrigger);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DeactivateTrigger_readTriggerIndex",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTriggerIndex(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_DeactivateTrigger(void *obj) {
Effect_DeactivateTrigger *arg1 = (Effect_DeactivateTrigger *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_DeactivateTrigger_methods[] = {
    {"trigger", _wrap_Effect_DeactivateTrigger_trigger}, 
    {"getTriggerIndex", _wrap_Effect_DeactivateTrigger_getTriggerIndex}, 
    {"readTriggerIndex", _wrap_Effect_DeactivateTrigger_readTriggerIndex}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_DeactivateTrigger_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_DeactivateTrigger_bases[] = {0,0};
static const char *swig_Effect_DeactivateTrigger_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_DeactivateTrigger = { "Effect_DeactivateTrigger", &SWIGTYPE_p_Effect_DeactivateTrigger,_wrap_new_Effect_DeactivateTrigger, swig_delete_Effect_DeactivateTrigger, swig_Effect_DeactivateTrigger_methods, swig_Effect_DeactivateTrigger_attributes, swig_Effect_DeactivateTrigger_bases, swig_Effect_DeactivateTrigger_base_names };

static int _wrap_new_Effect_AIScriptGoal(lua_State* L) {
  int SWIG_arg = 0;
  Effect_AIScriptGoal *result = 0 ;
  
  SWIG_check_num_args("Effect_AIScriptGoal::Effect_AIScriptGoal",0,0)
  result = (Effect_AIScriptGoal *)new Effect_AIScriptGoal();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_AIScriptGoal,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_AIScriptGoal_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_AIScriptGoal *arg1 = (Effect_AIScriptGoal *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_AIScriptGoal::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_AIScriptGoal::p_source",1,"Effect_AIScriptGoal *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_AIScriptGoal::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_AIScriptGoal,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_p_source",1,SWIGTYPE_p_Effect_AIScriptGoal);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_AIScriptGoal_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_AIScriptGoal *arg1 = (Effect_AIScriptGoal *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_AIScriptGoal::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_AIScriptGoal::getPlayerSource",1,"Effect_AIScriptGoal *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_AIScriptGoal,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_getPlayerSource",1,SWIGTYPE_p_Effect_AIScriptGoal);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_AIScriptGoal_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_AIScriptGoal *arg1 = (Effect_AIScriptGoal *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_AIScriptGoal::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_AIScriptGoal::readPlayerSource",1,"Effect_AIScriptGoal *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_AIScriptGoal::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_AIScriptGoal,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_readPlayerSource",1,SWIGTYPE_p_Effect_AIScriptGoal);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_AIScriptGoal_ai_goal(lua_State* L) {
  int SWIG_arg = 0;
  Effect_AIScriptGoal *arg1 = (Effect_AIScriptGoal *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_AIScriptGoal::ai_goal",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_AIScriptGoal::ai_goal",1,"Effect_AIScriptGoal *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_AIScriptGoal::ai_goal",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_AIScriptGoal,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_ai_goal",1,SWIGTYPE_p_Effect_AIScriptGoal);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ai_goal(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_AIScriptGoal_getAiGoal(lua_State* L) {
  int SWIG_arg = 0;
  Effect_AIScriptGoal *arg1 = (Effect_AIScriptGoal *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_AIScriptGoal::getAiGoal",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_AIScriptGoal::getAiGoal",1,"Effect_AIScriptGoal *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_AIScriptGoal,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_getAiGoal",1,SWIGTYPE_p_Effect_AIScriptGoal);
  }
  
  result = (long)(arg1)->getAiGoal();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_AIScriptGoal_readAiGoal(lua_State* L) {
  int SWIG_arg = 0;
  Effect_AIScriptGoal *arg1 = (Effect_AIScriptGoal *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_AIScriptGoal::readAiGoal",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_AIScriptGoal::readAiGoal",1,"Effect_AIScriptGoal *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_AIScriptGoal::readAiGoal",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_AIScriptGoal,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_readAiGoal",1,SWIGTYPE_p_Effect_AIScriptGoal);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_AIScriptGoal_readAiGoal",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAiGoal(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_AIScriptGoal(void *obj) {
Effect_AIScriptGoal *arg1 = (Effect_AIScriptGoal *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_AIScriptGoal_methods[] = {
    {"p_source", _wrap_Effect_AIScriptGoal_p_source}, 
    {"getPlayerSource", _wrap_Effect_AIScriptGoal_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_AIScriptGoal_readPlayerSource}, 
    {"ai_goal", _wrap_Effect_AIScriptGoal_ai_goal}, 
    {"getAiGoal", _wrap_Effect_AIScriptGoal_getAiGoal}, 
    {"readAiGoal", _wrap_Effect_AIScriptGoal_readAiGoal}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_AIScriptGoal_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_AIScriptGoal_bases[] = {0,0};
static const char *swig_Effect_AIScriptGoal_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_AIScriptGoal = { "Effect_AIScriptGoal", &SWIGTYPE_p_Effect_AIScriptGoal,_wrap_new_Effect_AIScriptGoal, swig_delete_Effect_AIScriptGoal, swig_Effect_AIScriptGoal_methods, swig_Effect_AIScriptGoal_attributes, swig_Effect_AIScriptGoal_bases, swig_Effect_AIScriptGoal_base_names };

static int _wrap_new_Effect_CreateObject(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *result = 0 ;
  
  SWIG_check_num_args("Effect_CreateObject::Effect_CreateObject",0,0)
  result = (Effect_CreateObject *)new Effect_CreateObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_CreateObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_CreateObject::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::p_source",1,"Effect_CreateObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_CreateObject::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_p_source",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_CreateObject::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::getPlayerSource",1,"Effect_CreateObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_getPlayerSource",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_CreateObject::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::readPlayerSource",1,"Effect_CreateObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_CreateObject::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_readPlayerSource",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_CreateObject_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_CreateObject::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::unit_const",1,"Effect_CreateObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_CreateObject::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_unit_const",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_CreateObject::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::getUnitConst",1,"Effect_CreateObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_getUnitConst",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_CreateObject::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::readUnitConst",1,"Effect_CreateObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_CreateObject::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_readUnitConst",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_CreateObject_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_CreateObject::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::location",1,"Effect_CreateObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_CreateObject::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_CreateObject::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_location",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_CreateObject::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::getLocation",1,"Effect_CreateObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_getLocation",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_CreateObject_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_CreateObject *arg1 = (Effect_CreateObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_CreateObject::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_CreateObject::readLocation",1,"Effect_CreateObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_CreateObject::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_CreateObject,0))){
    SWIG_fail_ptr("Effect_CreateObject_readLocation",1,SWIGTYPE_p_Effect_CreateObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_CreateObject_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_CreateObject(void *obj) {
Effect_CreateObject *arg1 = (Effect_CreateObject *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_CreateObject_methods[] = {
    {"p_source", _wrap_Effect_CreateObject_p_source}, 
    {"getPlayerSource", _wrap_Effect_CreateObject_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_CreateObject_readPlayerSource}, 
    {"unit_const", _wrap_Effect_CreateObject_unit_const}, 
    {"getUnitConst", _wrap_Effect_CreateObject_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_CreateObject_readUnitConst}, 
    {"location", _wrap_Effect_CreateObject_location}, 
    {"getLocation", _wrap_Effect_CreateObject_getLocation}, 
    {"readLocation", _wrap_Effect_CreateObject_readLocation}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_CreateObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_CreateObject_bases[] = {0,0};
static const char *swig_Effect_CreateObject_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_CreateObject = { "Effect_CreateObject", &SWIGTYPE_p_Effect_CreateObject,_wrap_new_Effect_CreateObject, swig_delete_Effect_CreateObject, swig_Effect_CreateObject_methods, swig_Effect_CreateObject_attributes, swig_Effect_CreateObject_bases, swig_Effect_CreateObject_base_names };

static int _wrap_new_Effect_TaskObject(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *result = 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::Effect_TaskObject",0,0)
  result = (Effect_TaskObject *)new Effect_TaskObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_TaskObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_TaskObject::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::p_source",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_p_source",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_TaskObject::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getPlayerSource",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getPlayerSource",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readPlayerSource",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readPlayerSource",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_TaskObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_TaskObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_TaskObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_TaskObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_TaskObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_TaskObject::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_TaskObject::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_TaskObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_TaskObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_TaskObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_TaskObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_TaskObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_TaskObject::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_TaskObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_TaskObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_TaskObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_TaskObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_TaskObject::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_TaskObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_TaskObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_TaskObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_TaskObject::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_TaskObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_TaskObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_TaskObject::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_TaskObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_TaskObject::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_TaskObject::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_TaskObject::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_TaskObject::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_TaskObject::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_TaskObject::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_TaskObject::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_TaskObject::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_TaskObject::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_TaskObject::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_TaskObject::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_TaskObject::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_TaskObject::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_TaskObject::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::units",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_units",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_TaskObject_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_TaskObject_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_TaskObject_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_TaskObject_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_TaskObject_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_TaskObject_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_TaskObject_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_TaskObject_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_TaskObject_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_TaskObject_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_TaskObject_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_TaskObject_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_TaskObject_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_TaskObject_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_TaskObject_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_TaskObject_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_TaskObject_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_TaskObject_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_TaskObject_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_TaskObject_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_TaskObject_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_TaskObject_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_TaskObject_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int,int)\n"
    "    Effect_TaskObject::units(int,int,int)\n"
    "    Effect_TaskObject::units(int,int)\n"
    "    Effect_TaskObject::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_TaskObject_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_TaskObject::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getUids",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getUids",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_TaskObject::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readUids",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUids",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_TaskObject::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::unit_location",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_unit_location",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_TaskObject::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::uid_location",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_uid_location",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_TaskObject::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getUidLocation",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getUidLocation",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readUidLocation",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUidLocation",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_TaskObject::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::location",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_location",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_TaskObject::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getLocation",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getLocation",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readLocation",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readLocation",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_TaskObject::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::area",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_TaskObject::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_TaskObject::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_TaskObject::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_area",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_TaskObject::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getArea",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getArea",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readArea",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readArea",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_TaskObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::unit_group",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_unit_group",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::unit_group",1,"Effect_TaskObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_TaskObject::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_unit_group",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_TaskObject_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_TaskObject_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_TaskObject_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_TaskObject::unit_group(int)\n"
    "    Effect_TaskObject::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_TaskObject_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_TaskObject::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getUnitGroup",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getUnitGroup",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readUnitGroup",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUnitGroup",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_TaskObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::unit_type",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_unit_type",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::unit_type",1,"Effect_TaskObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_TaskObject::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_unit_type",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_TaskObject_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_TaskObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_TaskObject_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_TaskObject_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_TaskObject::unit_type(int)\n"
    "    Effect_TaskObject::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_TaskObject_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_TaskObject::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getUnitType",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getUnitType",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readUnitType",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUnitType",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_TaskObject::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::unit_const",1,"Effect_TaskObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_TaskObject::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_unit_const",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_TaskObject::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::getUnitConst",1,"Effect_TaskObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_getUnitConst",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_TaskObject_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_TaskObject *arg1 = (Effect_TaskObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_TaskObject::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_TaskObject::readUnitConst",1,"Effect_TaskObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_TaskObject::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_TaskObject,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUnitConst",1,SWIGTYPE_p_Effect_TaskObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_TaskObject_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_TaskObject(void *obj) {
Effect_TaskObject *arg1 = (Effect_TaskObject *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_TaskObject_methods[] = {
    {"p_source", _wrap_Effect_TaskObject_p_source}, 
    {"getPlayerSource", _wrap_Effect_TaskObject_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_TaskObject_readPlayerSource}, 
    {"units", _wrap_Effect_TaskObject_units}, 
    {"getUids", _wrap_Effect_TaskObject_getUids}, 
    {"readUids", _wrap_Effect_TaskObject_readUids}, 
    {"unit_location", _wrap_Effect_TaskObject_unit_location}, 
    {"uid_location", _wrap_Effect_TaskObject_uid_location}, 
    {"getUidLocation", _wrap_Effect_TaskObject_getUidLocation}, 
    {"readUidLocation", _wrap_Effect_TaskObject_readUidLocation}, 
    {"location", _wrap_Effect_TaskObject_location}, 
    {"getLocation", _wrap_Effect_TaskObject_getLocation}, 
    {"readLocation", _wrap_Effect_TaskObject_readLocation}, 
    {"area", _wrap_Effect_TaskObject_area}, 
    {"getArea", _wrap_Effect_TaskObject_getArea}, 
    {"readArea", _wrap_Effect_TaskObject_readArea}, 
    {"unit_group", _wrap_Effect_TaskObject_unit_group}, 
    {"getUnitGroup", _wrap_Effect_TaskObject_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_TaskObject_readUnitGroup}, 
    {"unit_type", _wrap_Effect_TaskObject_unit_type}, 
    {"getUnitType", _wrap_Effect_TaskObject_getUnitType}, 
    {"readUnitType", _wrap_Effect_TaskObject_readUnitType}, 
    {"unit_const", _wrap_Effect_TaskObject_unit_const}, 
    {"getUnitConst", _wrap_Effect_TaskObject_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_TaskObject_readUnitConst}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_TaskObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_TaskObject_bases[] = {0,0};
static const char *swig_Effect_TaskObject_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_TaskObject = { "Effect_TaskObject", &SWIGTYPE_p_Effect_TaskObject,_wrap_new_Effect_TaskObject, swig_delete_Effect_TaskObject, swig_Effect_TaskObject_methods, swig_Effect_TaskObject_attributes, swig_Effect_TaskObject_bases, swig_Effect_TaskObject_base_names };

static int _wrap_new_Effect_DeclareVictory(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeclareVictory *result = 0 ;
  
  SWIG_check_num_args("Effect_DeclareVictory::Effect_DeclareVictory",0,0)
  result = (Effect_DeclareVictory *)new Effect_DeclareVictory();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DeclareVictory,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DeclareVictory_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeclareVictory *arg1 = (Effect_DeclareVictory *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DeclareVictory::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DeclareVictory::p_source",1,"Effect_DeclareVictory *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DeclareVictory::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DeclareVictory,0))){
    SWIG_fail_ptr("Effect_DeclareVictory_p_source",1,SWIGTYPE_p_Effect_DeclareVictory);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DeclareVictory_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeclareVictory *arg1 = (Effect_DeclareVictory *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DeclareVictory::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DeclareVictory::getPlayerSource",1,"Effect_DeclareVictory *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DeclareVictory,0))){
    SWIG_fail_ptr("Effect_DeclareVictory_getPlayerSource",1,SWIGTYPE_p_Effect_DeclareVictory);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DeclareVictory_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DeclareVictory *arg1 = (Effect_DeclareVictory *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DeclareVictory::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DeclareVictory::readPlayerSource",1,"Effect_DeclareVictory *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DeclareVictory::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DeclareVictory,0))){
    SWIG_fail_ptr("Effect_DeclareVictory_readPlayerSource",1,SWIGTYPE_p_Effect_DeclareVictory);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DeclareVictory_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_DeclareVictory(void *obj) {
Effect_DeclareVictory *arg1 = (Effect_DeclareVictory *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_DeclareVictory_methods[] = {
    {"p_source", _wrap_Effect_DeclareVictory_p_source}, 
    {"getPlayerSource", _wrap_Effect_DeclareVictory_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_DeclareVictory_readPlayerSource}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_DeclareVictory_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_DeclareVictory_bases[] = {0,0};
static const char *swig_Effect_DeclareVictory_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_DeclareVictory = { "Effect_DeclareVictory", &SWIGTYPE_p_Effect_DeclareVictory,_wrap_new_Effect_DeclareVictory, swig_delete_Effect_DeclareVictory, swig_Effect_DeclareVictory_methods, swig_Effect_DeclareVictory_attributes, swig_Effect_DeclareVictory_bases, swig_Effect_DeclareVictory_base_names };

static int _wrap_new_Effect_KillObject(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *result = 0 ;
  
  SWIG_check_num_args("Effect_KillObject::Effect_KillObject",0,0)
  result = (Effect_KillObject *)new Effect_KillObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_KillObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_KillObject::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::p_source",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_p_source",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_KillObject::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getPlayerSource",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getPlayerSource",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readPlayerSource",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readPlayerSource",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_KillObject::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_KillObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_KillObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_KillObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_KillObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_KillObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_KillObject::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_KillObject::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_KillObject::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_KillObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_KillObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_KillObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_KillObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_KillObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_KillObject::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_KillObject::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_KillObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_KillObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_KillObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_KillObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_KillObject::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_KillObject::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_KillObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_KillObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_KillObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_KillObject::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_KillObject::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_KillObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_KillObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_KillObject::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_KillObject::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_KillObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_KillObject::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_KillObject::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_KillObject::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_KillObject::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_KillObject::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_KillObject::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_KillObject::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_KillObject::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_KillObject::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_KillObject::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_KillObject::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_KillObject::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_KillObject::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_KillObject::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_KillObject::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_KillObject::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_KillObject::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_KillObject::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_KillObject::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_KillObject::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_KillObject::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_KillObject::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_KillObject::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_KillObject::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_KillObject::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_KillObject::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_KillObject::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_KillObject::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_KillObject::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::units",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_units",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_KillObject_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_KillObject_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_KillObject_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_KillObject_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_KillObject_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_KillObject_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_KillObject_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_KillObject_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_KillObject_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_KillObject_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_KillObject_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_KillObject_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_KillObject_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_KillObject_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_KillObject_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_KillObject_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_KillObject_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_KillObject_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_KillObject_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_KillObject_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_KillObject_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_KillObject_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_KillObject_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int,int)\n"
    "    Effect_KillObject::units(int,int,int)\n"
    "    Effect_KillObject::units(int,int)\n"
    "    Effect_KillObject::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_KillObject_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_KillObject::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getUids",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getUids",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_KillObject::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readUids",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readUids",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_KillObject::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::unit_location",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_unit_location",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_KillObject::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::uid_location",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_uid_location",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_KillObject::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getUidLocation",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getUidLocation",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readUidLocation",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readUidLocation",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_KillObject::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::location",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_location",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_KillObject::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getLocation",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getLocation",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readLocation",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readLocation",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_KillObject::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::area",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_KillObject::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_KillObject::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_KillObject::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_area",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_KillObject::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getArea",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getArea",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readArea",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readArea",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_KillObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::unit_group",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_unit_group",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::unit_group",1,"Effect_KillObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_KillObject::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_unit_group",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_KillObject_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_KillObject_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_KillObject_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_KillObject::unit_group(int)\n"
    "    Effect_KillObject::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_KillObject_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_KillObject::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getUnitGroup",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getUnitGroup",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readUnitGroup",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readUnitGroup",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_KillObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::unit_type",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_unit_type",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::unit_type",1,"Effect_KillObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_KillObject::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_unit_type",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_KillObject_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_KillObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_KillObject_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_KillObject_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_KillObject::unit_type(int)\n"
    "    Effect_KillObject::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_KillObject_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_KillObject::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getUnitType",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getUnitType",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readUnitType",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readUnitType",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_KillObject::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::unit_const",1,"Effect_KillObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_KillObject::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_unit_const",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_KillObject::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::getUnitConst",1,"Effect_KillObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_getUnitConst",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_KillObject_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_KillObject *arg1 = (Effect_KillObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_KillObject::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_KillObject::readUnitConst",1,"Effect_KillObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_KillObject::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_KillObject,0))){
    SWIG_fail_ptr("Effect_KillObject_readUnitConst",1,SWIGTYPE_p_Effect_KillObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_KillObject_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_KillObject(void *obj) {
Effect_KillObject *arg1 = (Effect_KillObject *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_KillObject_methods[] = {
    {"p_source", _wrap_Effect_KillObject_p_source}, 
    {"getPlayerSource", _wrap_Effect_KillObject_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_KillObject_readPlayerSource}, 
    {"units", _wrap_Effect_KillObject_units}, 
    {"getUids", _wrap_Effect_KillObject_getUids}, 
    {"readUids", _wrap_Effect_KillObject_readUids}, 
    {"unit_location", _wrap_Effect_KillObject_unit_location}, 
    {"uid_location", _wrap_Effect_KillObject_uid_location}, 
    {"getUidLocation", _wrap_Effect_KillObject_getUidLocation}, 
    {"readUidLocation", _wrap_Effect_KillObject_readUidLocation}, 
    {"location", _wrap_Effect_KillObject_location}, 
    {"getLocation", _wrap_Effect_KillObject_getLocation}, 
    {"readLocation", _wrap_Effect_KillObject_readLocation}, 
    {"area", _wrap_Effect_KillObject_area}, 
    {"getArea", _wrap_Effect_KillObject_getArea}, 
    {"readArea", _wrap_Effect_KillObject_readArea}, 
    {"unit_group", _wrap_Effect_KillObject_unit_group}, 
    {"getUnitGroup", _wrap_Effect_KillObject_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_KillObject_readUnitGroup}, 
    {"unit_type", _wrap_Effect_KillObject_unit_type}, 
    {"getUnitType", _wrap_Effect_KillObject_getUnitType}, 
    {"readUnitType", _wrap_Effect_KillObject_readUnitType}, 
    {"unit_const", _wrap_Effect_KillObject_unit_const}, 
    {"getUnitConst", _wrap_Effect_KillObject_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_KillObject_readUnitConst}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_KillObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_KillObject_bases[] = {0,0};
static const char *swig_Effect_KillObject_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_KillObject = { "Effect_KillObject", &SWIGTYPE_p_Effect_KillObject,_wrap_new_Effect_KillObject, swig_delete_Effect_KillObject, swig_Effect_KillObject_methods, swig_Effect_KillObject_attributes, swig_Effect_KillObject_bases, swig_Effect_KillObject_base_names };

static int _wrap_new_Effect_RemoveObject(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *result = 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::Effect_RemoveObject",0,0)
  result = (Effect_RemoveObject *)new Effect_RemoveObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_RemoveObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_RemoveObject::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::p_source",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_p_source",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_RemoveObject::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getPlayerSource",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getPlayerSource",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readPlayerSource",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readPlayerSource",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_RemoveObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_RemoveObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_RemoveObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_RemoveObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_RemoveObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_RemoveObject::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_RemoveObject::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_RemoveObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_RemoveObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_RemoveObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_RemoveObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_RemoveObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_RemoveObject::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_RemoveObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_RemoveObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_RemoveObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_RemoveObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_RemoveObject::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_RemoveObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_RemoveObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_RemoveObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_RemoveObject::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_RemoveObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_RemoveObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_RemoveObject::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_RemoveObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_RemoveObject::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_RemoveObject::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_RemoveObject::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_RemoveObject::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_RemoveObject::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_RemoveObject::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_RemoveObject::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_RemoveObject::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_RemoveObject::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_RemoveObject::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_RemoveObject::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_RemoveObject::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_RemoveObject::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_RemoveObject::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::units",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_units",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_RemoveObject_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_RemoveObject_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_RemoveObject_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_RemoveObject_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_RemoveObject_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_RemoveObject_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_RemoveObject_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_RemoveObject_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_RemoveObject_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_RemoveObject_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_RemoveObject_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_RemoveObject_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_RemoveObject_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_RemoveObject_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_RemoveObject_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_RemoveObject_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_RemoveObject_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_RemoveObject_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_RemoveObject_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_RemoveObject_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_RemoveObject_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_RemoveObject_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_RemoveObject_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int,int)\n"
    "    Effect_RemoveObject::units(int,int,int)\n"
    "    Effect_RemoveObject::units(int,int)\n"
    "    Effect_RemoveObject::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_RemoveObject_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_RemoveObject::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getUids",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getUids",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readUids",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUids",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_RemoveObject::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::unit_location",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_unit_location",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_RemoveObject::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::uid_location",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_uid_location",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_RemoveObject::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getUidLocation",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getUidLocation",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readUidLocation",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUidLocation",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_RemoveObject::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::location",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_location",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_RemoveObject::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getLocation",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getLocation",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readLocation",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readLocation",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_RemoveObject::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::area",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_RemoveObject::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_RemoveObject::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_RemoveObject::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_area",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_RemoveObject::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getArea",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getArea",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readArea",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readArea",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_RemoveObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::unit_group",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_unit_group",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::unit_group",1,"Effect_RemoveObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_RemoveObject::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_unit_group",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_RemoveObject_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_RemoveObject_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_RemoveObject_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_RemoveObject::unit_group(int)\n"
    "    Effect_RemoveObject::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_RemoveObject_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_RemoveObject::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getUnitGroup",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getUnitGroup",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readUnitGroup",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUnitGroup",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_RemoveObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::unit_type",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_unit_type",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::unit_type",1,"Effect_RemoveObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_RemoveObject::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_unit_type",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_RemoveObject_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_RemoveObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_RemoveObject_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_RemoveObject_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_RemoveObject::unit_type(int)\n"
    "    Effect_RemoveObject::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_RemoveObject_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_RemoveObject::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getUnitType",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getUnitType",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readUnitType",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUnitType",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_RemoveObject::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::unit_const",1,"Effect_RemoveObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_RemoveObject::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_unit_const",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_RemoveObject::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::getUnitConst",1,"Effect_RemoveObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_getUnitConst",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_RemoveObject_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_RemoveObject *arg1 = (Effect_RemoveObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_RemoveObject::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_RemoveObject::readUnitConst",1,"Effect_RemoveObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_RemoveObject::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_RemoveObject,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUnitConst",1,SWIGTYPE_p_Effect_RemoveObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_RemoveObject_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_RemoveObject(void *obj) {
Effect_RemoveObject *arg1 = (Effect_RemoveObject *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_RemoveObject_methods[] = {
    {"p_source", _wrap_Effect_RemoveObject_p_source}, 
    {"getPlayerSource", _wrap_Effect_RemoveObject_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_RemoveObject_readPlayerSource}, 
    {"units", _wrap_Effect_RemoveObject_units}, 
    {"getUids", _wrap_Effect_RemoveObject_getUids}, 
    {"readUids", _wrap_Effect_RemoveObject_readUids}, 
    {"unit_location", _wrap_Effect_RemoveObject_unit_location}, 
    {"uid_location", _wrap_Effect_RemoveObject_uid_location}, 
    {"getUidLocation", _wrap_Effect_RemoveObject_getUidLocation}, 
    {"readUidLocation", _wrap_Effect_RemoveObject_readUidLocation}, 
    {"location", _wrap_Effect_RemoveObject_location}, 
    {"getLocation", _wrap_Effect_RemoveObject_getLocation}, 
    {"readLocation", _wrap_Effect_RemoveObject_readLocation}, 
    {"area", _wrap_Effect_RemoveObject_area}, 
    {"getArea", _wrap_Effect_RemoveObject_getArea}, 
    {"readArea", _wrap_Effect_RemoveObject_readArea}, 
    {"unit_group", _wrap_Effect_RemoveObject_unit_group}, 
    {"getUnitGroup", _wrap_Effect_RemoveObject_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_RemoveObject_readUnitGroup}, 
    {"unit_type", _wrap_Effect_RemoveObject_unit_type}, 
    {"getUnitType", _wrap_Effect_RemoveObject_getUnitType}, 
    {"readUnitType", _wrap_Effect_RemoveObject_readUnitType}, 
    {"unit_const", _wrap_Effect_RemoveObject_unit_const}, 
    {"getUnitConst", _wrap_Effect_RemoveObject_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_RemoveObject_readUnitConst}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_RemoveObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_RemoveObject_bases[] = {0,0};
static const char *swig_Effect_RemoveObject_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_RemoveObject = { "Effect_RemoveObject", &SWIGTYPE_p_Effect_RemoveObject,_wrap_new_Effect_RemoveObject, swig_delete_Effect_RemoveObject, swig_Effect_RemoveObject_methods, swig_Effect_RemoveObject_attributes, swig_Effect_RemoveObject_bases, swig_Effect_RemoveObject_base_names };

static int _wrap_new_Effect_ChangeView(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeView *result = 0 ;
  
  SWIG_check_num_args("Effect_ChangeView::Effect_ChangeView",0,0)
  result = (Effect_ChangeView *)new Effect_ChangeView();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeView,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeView_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeView *arg1 = (Effect_ChangeView *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeView::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeView::p_source",1,"Effect_ChangeView *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeView::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeView,0))){
    SWIG_fail_ptr("Effect_ChangeView_p_source",1,SWIGTYPE_p_Effect_ChangeView);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeView_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeView *arg1 = (Effect_ChangeView *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeView::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeView::getPlayerSource",1,"Effect_ChangeView *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeView,0))){
    SWIG_fail_ptr("Effect_ChangeView_getPlayerSource",1,SWIGTYPE_p_Effect_ChangeView);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeView_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeView *arg1 = (Effect_ChangeView *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeView::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeView::readPlayerSource",1,"Effect_ChangeView *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeView::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeView,0))){
    SWIG_fail_ptr("Effect_ChangeView_readPlayerSource",1,SWIGTYPE_p_Effect_ChangeView);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeView_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeView_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeView *arg1 = (Effect_ChangeView *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_ChangeView::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeView::location",1,"Effect_ChangeView *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeView::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeView::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeView,0))){
    SWIG_fail_ptr("Effect_ChangeView_location",1,SWIGTYPE_p_Effect_ChangeView);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeView_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeView *arg1 = (Effect_ChangeView *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_ChangeView::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeView::getLocation",1,"Effect_ChangeView *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeView,0))){
    SWIG_fail_ptr("Effect_ChangeView_getLocation",1,SWIGTYPE_p_Effect_ChangeView);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeView_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeView *arg1 = (Effect_ChangeView *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeView::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeView::readLocation",1,"Effect_ChangeView *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeView::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeView,0))){
    SWIG_fail_ptr("Effect_ChangeView_readLocation",1,SWIGTYPE_p_Effect_ChangeView);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeView_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ChangeView(void *obj) {
Effect_ChangeView *arg1 = (Effect_ChangeView *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ChangeView_methods[] = {
    {"p_source", _wrap_Effect_ChangeView_p_source}, 
    {"getPlayerSource", _wrap_Effect_ChangeView_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_ChangeView_readPlayerSource}, 
    {"location", _wrap_Effect_ChangeView_location}, 
    {"getLocation", _wrap_Effect_ChangeView_getLocation}, 
    {"readLocation", _wrap_Effect_ChangeView_readLocation}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ChangeView_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ChangeView_bases[] = {0,0};
static const char *swig_Effect_ChangeView_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ChangeView = { "Effect_ChangeView", &SWIGTYPE_p_Effect_ChangeView,_wrap_new_Effect_ChangeView, swig_delete_Effect_ChangeView, swig_Effect_ChangeView_methods, swig_Effect_ChangeView_attributes, swig_Effect_ChangeView_bases, swig_Effect_ChangeView_base_names };

static int _wrap_new_Effect_Unload(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *result = 0 ;
  
  SWIG_check_num_args("Effect_Unload::Effect_Unload",0,0)
  result = (Effect_Unload *)new Effect_Unload();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_Unload,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Unload::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::p_source",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_p_source",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_Unload::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getPlayerSource",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getPlayerSource",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readPlayerSource",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readPlayerSource",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_Unload::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Unload::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Unload::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Unload::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Unload::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_Unload::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_Unload::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_Unload::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_Unload::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Unload::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Unload::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Unload::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Unload::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_Unload::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_Unload::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_Unload::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Unload::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Unload::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Unload::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Unload::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_Unload::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_Unload::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Unload::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Unload::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Unload::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Unload::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_Unload::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Unload::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Unload::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Unload::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_Unload::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Unload::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Unload::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_Unload::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Unload::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_Unload::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Unload::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_Unload::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Unload::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_Unload::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Unload::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_Unload::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Unload::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_Unload::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Unload::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_Unload::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Unload::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_Unload::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Unload::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_Unload::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Unload::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_Unload::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Unload::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_Unload::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Unload::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_Unload::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Unload::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_Unload::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_Unload::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_Unload::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Unload::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::units",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_units",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_Unload_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_Unload_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_Unload_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_Unload_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_Unload_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_Unload_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_Unload_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_Unload_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_Unload_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_Unload_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_Unload_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_Unload_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_Unload_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_Unload_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_Unload_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_Unload_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_Unload_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_Unload_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_Unload_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_Unload_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_Unload_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_Unload_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_Unload_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int,int)\n"
    "    Effect_Unload::units(int,int,int)\n"
    "    Effect_Unload::units(int,int)\n"
    "    Effect_Unload::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_Unload_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_Unload::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getUids",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getUids",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_Unload::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readUids",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readUids",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Unload::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::unit_location",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_unit_location",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Unload::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::uid_location",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_uid_location",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_Unload::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getUidLocation",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getUidLocation",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readUidLocation",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readUidLocation",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_Unload::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::location",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_location",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_Unload::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getLocation",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getLocation",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readLocation",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readLocation",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_Unload::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::area",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Unload::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Unload::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Unload::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_area",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_Unload::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getArea",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getArea",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readArea",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readArea",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Unload::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::unit_group",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_unit_group",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::unit_group",1,"Effect_Unload *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_Unload::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_unit_group",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_Unload_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_Unload_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_Unload_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_Unload::unit_group(int)\n"
    "    Effect_Unload::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_Unload_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_Unload::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getUnitGroup",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getUnitGroup",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readUnitGroup",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readUnitGroup",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Unload::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::unit_type",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_unit_type",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::unit_type",1,"Effect_Unload *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_Unload::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_unit_type",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_Unload_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Unload, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_Unload_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_Unload_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_Unload::unit_type(int)\n"
    "    Effect_Unload::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_Unload_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_Unload::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getUnitType",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getUnitType",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readUnitType",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readUnitType",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Unload::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::unit_const",1,"Effect_Unload *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Unload::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_unit_const",1,SWIGTYPE_p_Effect_Unload);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_Unload::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::getUnitConst",1,"Effect_Unload *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_getUnitConst",1,SWIGTYPE_p_Effect_Unload);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Unload_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Unload *arg1 = (Effect_Unload *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Unload::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Unload::readUnitConst",1,"Effect_Unload *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Unload::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Unload,0))){
    SWIG_fail_ptr("Effect_Unload_readUnitConst",1,SWIGTYPE_p_Effect_Unload);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Unload_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_Unload(void *obj) {
Effect_Unload *arg1 = (Effect_Unload *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_Unload_methods[] = {
    {"p_source", _wrap_Effect_Unload_p_source}, 
    {"getPlayerSource", _wrap_Effect_Unload_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_Unload_readPlayerSource}, 
    {"units", _wrap_Effect_Unload_units}, 
    {"getUids", _wrap_Effect_Unload_getUids}, 
    {"readUids", _wrap_Effect_Unload_readUids}, 
    {"unit_location", _wrap_Effect_Unload_unit_location}, 
    {"uid_location", _wrap_Effect_Unload_uid_location}, 
    {"getUidLocation", _wrap_Effect_Unload_getUidLocation}, 
    {"readUidLocation", _wrap_Effect_Unload_readUidLocation}, 
    {"location", _wrap_Effect_Unload_location}, 
    {"getLocation", _wrap_Effect_Unload_getLocation}, 
    {"readLocation", _wrap_Effect_Unload_readLocation}, 
    {"area", _wrap_Effect_Unload_area}, 
    {"getArea", _wrap_Effect_Unload_getArea}, 
    {"readArea", _wrap_Effect_Unload_readArea}, 
    {"unit_group", _wrap_Effect_Unload_unit_group}, 
    {"getUnitGroup", _wrap_Effect_Unload_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_Unload_readUnitGroup}, 
    {"unit_type", _wrap_Effect_Unload_unit_type}, 
    {"getUnitType", _wrap_Effect_Unload_getUnitType}, 
    {"readUnitType", _wrap_Effect_Unload_readUnitType}, 
    {"unit_const", _wrap_Effect_Unload_unit_const}, 
    {"getUnitConst", _wrap_Effect_Unload_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_Unload_readUnitConst}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_Unload_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_Unload_bases[] = {0,0};
static const char *swig_Effect_Unload_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_Unload = { "Effect_Unload", &SWIGTYPE_p_Effect_Unload,_wrap_new_Effect_Unload, swig_delete_Effect_Unload, swig_Effect_Unload_methods, swig_Effect_Unload_attributes, swig_Effect_Unload_bases, swig_Effect_Unload_base_names };

static int _wrap_new_Effect_ChangeOwnership(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *result = 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::Effect_ChangeOwnership",0,0)
  result = (Effect_ChangeOwnership *)new Effect_ChangeOwnership();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeOwnership,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::p_source",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_p_source",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeOwnership::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::getPlayerSource",1,"Effect_ChangeOwnership *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_getPlayerSource",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::readPlayerSource",1,"Effect_ChangeOwnership *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readPlayerSource",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_p_target(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::p_target",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::p_target",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::p_target",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_p_target",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_target(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_getPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeOwnership::getPlayerTarget",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::getPlayerTarget",1,"Effect_ChangeOwnership *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_getPlayerTarget",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  result = (long)(arg1)->getPlayerTarget();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_readPlayerTarget(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::readPlayerTarget",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::readPlayerTarget",1,"Effect_ChangeOwnership *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::readPlayerTarget",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readPlayerTarget",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readPlayerTarget",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerTarget(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::area",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_area",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_ChangeOwnership::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::getArea",1,"Effect_ChangeOwnership *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_getArea",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::readArea",1,"Effect_ChangeOwnership *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readArea",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeOwnership::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeOwnership::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeOwnership::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeOwnership::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeOwnership::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeOwnership::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_ChangeOwnership::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeOwnership::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeOwnership::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeOwnership::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeOwnership::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeOwnership::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeOwnership::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeOwnership::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeOwnership::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeOwnership::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeOwnership::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeOwnership::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeOwnership::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeOwnership::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeOwnership::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeOwnership::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeOwnership::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeOwnership::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeOwnership::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeOwnership::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeOwnership::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeOwnership::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeOwnership::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeOwnership::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeOwnership::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeOwnership::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeOwnership::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeOwnership::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeOwnership::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeOwnership::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeOwnership::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeOwnership::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeOwnership::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeOwnership::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeOwnership::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::units",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_units",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeOwnership_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_ChangeOwnership_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_ChangeOwnership_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_ChangeOwnership_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_ChangeOwnership_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_ChangeOwnership_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_ChangeOwnership_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_ChangeOwnership_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_ChangeOwnership_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_ChangeOwnership_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_ChangeOwnership_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_ChangeOwnership_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_ChangeOwnership_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_ChangeOwnership_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_ChangeOwnership_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_ChangeOwnership_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_ChangeOwnership_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_ChangeOwnership_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_ChangeOwnership_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_ChangeOwnership_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_ChangeOwnership_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_ChangeOwnership_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeOwnership_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int,int)\n"
    "    Effect_ChangeOwnership::units(int,int)\n"
    "    Effect_ChangeOwnership::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeOwnership_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_ChangeOwnership::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::getUids",1,"Effect_ChangeOwnership *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_getUids",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::readUids",1,"Effect_ChangeOwnership *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeOwnership::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUids",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::unit_const",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_unit_const",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeOwnership::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::getUnitConst",1,"Effect_ChangeOwnership *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_getUnitConst",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::readUnitConst",1,"Effect_ChangeOwnership *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUnitConst",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::unit_type",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_unit_type",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::unit_type",1,"Effect_ChangeOwnership *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_unit_type",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeOwnership_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeOwnership_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeOwnership_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeOwnership::unit_type(int)\n"
    "    Effect_ChangeOwnership::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeOwnership_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeOwnership::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::getUnitType",1,"Effect_ChangeOwnership *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_getUnitType",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::readUnitType",1,"Effect_ChangeOwnership *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUnitType",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::unit_group",1,"Effect_ChangeOwnership *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_unit_group",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::unit_group",1,"Effect_ChangeOwnership *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_unit_group",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeOwnership_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeOwnership, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeOwnership_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeOwnership_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeOwnership::unit_group(int)\n"
    "    Effect_ChangeOwnership::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeOwnership_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeOwnership::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::getUnitGroup",1,"Effect_ChangeOwnership *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_getUnitGroup",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeOwnership_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeOwnership::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeOwnership::readUnitGroup",1,"Effect_ChangeOwnership *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeOwnership::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeOwnership,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUnitGroup",1,SWIGTYPE_p_Effect_ChangeOwnership);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeOwnership_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ChangeOwnership(void *obj) {
Effect_ChangeOwnership *arg1 = (Effect_ChangeOwnership *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ChangeOwnership_methods[] = {
    {"p_source", _wrap_Effect_ChangeOwnership_p_source}, 
    {"getPlayerSource", _wrap_Effect_ChangeOwnership_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_ChangeOwnership_readPlayerSource}, 
    {"p_target", _wrap_Effect_ChangeOwnership_p_target}, 
    {"getPlayerTarget", _wrap_Effect_ChangeOwnership_getPlayerTarget}, 
    {"readPlayerTarget", _wrap_Effect_ChangeOwnership_readPlayerTarget}, 
    {"area", _wrap_Effect_ChangeOwnership_area}, 
    {"getArea", _wrap_Effect_ChangeOwnership_getArea}, 
    {"readArea", _wrap_Effect_ChangeOwnership_readArea}, 
    {"units", _wrap_Effect_ChangeOwnership_units}, 
    {"getUids", _wrap_Effect_ChangeOwnership_getUids}, 
    {"readUids", _wrap_Effect_ChangeOwnership_readUids}, 
    {"unit_const", _wrap_Effect_ChangeOwnership_unit_const}, 
    {"getUnitConst", _wrap_Effect_ChangeOwnership_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_ChangeOwnership_readUnitConst}, 
    {"unit_type", _wrap_Effect_ChangeOwnership_unit_type}, 
    {"getUnitType", _wrap_Effect_ChangeOwnership_getUnitType}, 
    {"readUnitType", _wrap_Effect_ChangeOwnership_readUnitType}, 
    {"unit_group", _wrap_Effect_ChangeOwnership_unit_group}, 
    {"getUnitGroup", _wrap_Effect_ChangeOwnership_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_ChangeOwnership_readUnitGroup}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ChangeOwnership_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ChangeOwnership_bases[] = {0,0};
static const char *swig_Effect_ChangeOwnership_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ChangeOwnership = { "Effect_ChangeOwnership", &SWIGTYPE_p_Effect_ChangeOwnership,_wrap_new_Effect_ChangeOwnership, swig_delete_Effect_ChangeOwnership, swig_Effect_ChangeOwnership_methods, swig_Effect_ChangeOwnership_attributes, swig_Effect_ChangeOwnership_bases, swig_Effect_ChangeOwnership_base_names };

static int _wrap_new_Effect_Patrol(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *result = 0 ;
  
  SWIG_check_num_args("Effect_Patrol::Effect_Patrol",0,0)
  result = (Effect_Patrol *)new Effect_Patrol();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_Patrol,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_Patrol::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::location",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_location",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_Patrol::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::getLocation",1,"Effect_Patrol *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_getLocation",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_Patrol::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::readLocation",1,"Effect_Patrol *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Patrol::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_readLocation",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Patrol_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_Patrol::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Patrol::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Patrol::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Patrol::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Patrol::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_Patrol::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_Patrol::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_Patrol::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_Patrol::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Patrol::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Patrol::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Patrol::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Patrol::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_Patrol::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_Patrol::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_Patrol::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Patrol::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Patrol::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Patrol::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Patrol::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_Patrol::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_Patrol::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Patrol::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Patrol::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Patrol::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_Patrol::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_Patrol::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Patrol::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Patrol::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_Patrol::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_Patrol::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Patrol::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_Patrol::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_Patrol::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_Patrol::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_Patrol::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_Patrol::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_Patrol::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_Patrol::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_Patrol::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_Patrol::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_Patrol::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_Patrol::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_Patrol::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_Patrol::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_Patrol::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_Patrol::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_Patrol::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_Patrol::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_Patrol::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_Patrol::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_Patrol::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_Patrol::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_Patrol::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_Patrol::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_Patrol::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_Patrol::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_Patrol::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_Patrol::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_Patrol::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_Patrol::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_Patrol::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_Patrol::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::units",1,"Effect_Patrol *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_Patrol::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_units",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_Patrol_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_Patrol_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_Patrol_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_Patrol_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_Patrol_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_Patrol_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_Patrol_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_Patrol_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_Patrol_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_Patrol_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_Patrol_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_Patrol_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_Patrol_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_Patrol_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_Patrol_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_Patrol_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_Patrol_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_Patrol_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_Patrol_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_Patrol_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_Patrol_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_Patrol, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_Patrol_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_Patrol_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int,int)\n"
    "    Effect_Patrol::units(int,int,int)\n"
    "    Effect_Patrol::units(int,int)\n"
    "    Effect_Patrol::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_Patrol_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_Patrol::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::getUids",1,"Effect_Patrol *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_getUids",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_Patrol_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_Patrol *arg1 = (Effect_Patrol *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_Patrol::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_Patrol::readUids",1,"Effect_Patrol *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_Patrol::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_Patrol::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_Patrol,0))){
    SWIG_fail_ptr("Effect_Patrol_readUids",1,SWIGTYPE_p_Effect_Patrol);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_Patrol_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_Patrol(void *obj) {
Effect_Patrol *arg1 = (Effect_Patrol *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_Patrol_methods[] = {
    {"location", _wrap_Effect_Patrol_location}, 
    {"getLocation", _wrap_Effect_Patrol_getLocation}, 
    {"readLocation", _wrap_Effect_Patrol_readLocation}, 
    {"units", _wrap_Effect_Patrol_units}, 
    {"getUids", _wrap_Effect_Patrol_getUids}, 
    {"readUids", _wrap_Effect_Patrol_readUids}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_Patrol_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_Patrol_bases[] = {0,0};
static const char *swig_Effect_Patrol_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_Patrol = { "Effect_Patrol", &SWIGTYPE_p_Effect_Patrol,_wrap_new_Effect_Patrol, swig_delete_Effect_Patrol, swig_Effect_Patrol_methods, swig_Effect_Patrol_attributes, swig_Effect_Patrol_bases, swig_Effect_Patrol_base_names };

static int _wrap_new_Effect_DisplayInstructions(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *result = 0 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::Effect_DisplayInstructions",0,0)
  result = (Effect_DisplayInstructions *)new Effect_DisplayInstructions();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DisplayInstructions,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_panel(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::panel",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::panel",1,"Effect_DisplayInstructions *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::panel",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_panel",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->panel(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_getPanel(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DisplayInstructions::getPanel",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::getPanel",1,"Effect_DisplayInstructions *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_getPanel",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  result = (long)(arg1)->getPanel();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_readPanel(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::readPanel",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::readPanel",1,"Effect_DisplayInstructions *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::readPanel",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readPanel",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readPanel",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPanel(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_display_time(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::display_time",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::display_time",1,"Effect_DisplayInstructions *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::display_time",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_display_time",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->display_time(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_time(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::time",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::time",1,"Effect_DisplayInstructions *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::time",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_time",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->time(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_getDisplayTime(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DisplayInstructions::getDisplayTime",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::getDisplayTime",1,"Effect_DisplayInstructions *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_getDisplayTime",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  result = (long)(arg1)->getDisplayTime();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_readDisplayTime(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::readDisplayTime",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::readDisplayTime",1,"Effect_DisplayInstructions *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::readDisplayTime",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readDisplayTime",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readDisplayTime",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readDisplayTime(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_text(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::text",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::text",1,"Effect_DisplayInstructions *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::text",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_text",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->text((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_getText(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect_DisplayInstructions::getText",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::getText",1,"Effect_DisplayInstructions *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_getText",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  result = (arg1)->getText();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_readText(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::readText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::readText",1,"Effect_DisplayInstructions *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::readText",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readText",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readText",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readText(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_sound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::sound",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::sound",1,"Effect_DisplayInstructions *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::sound",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_sound",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->sound((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_getSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect_DisplayInstructions::getSound",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::getSound",1,"Effect_DisplayInstructions *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_getSound",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  result = (arg1)->getSound();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DisplayInstructions_readSound(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DisplayInstructions::readSound",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DisplayInstructions::readSound",1,"Effect_DisplayInstructions *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DisplayInstructions::readSound",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DisplayInstructions,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readSound",1,SWIGTYPE_p_Effect_DisplayInstructions);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DisplayInstructions_readSound",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readSound(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_DisplayInstructions(void *obj) {
Effect_DisplayInstructions *arg1 = (Effect_DisplayInstructions *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_DisplayInstructions_methods[] = {
    {"panel", _wrap_Effect_DisplayInstructions_panel}, 
    {"getPanel", _wrap_Effect_DisplayInstructions_getPanel}, 
    {"readPanel", _wrap_Effect_DisplayInstructions_readPanel}, 
    {"display_time", _wrap_Effect_DisplayInstructions_display_time}, 
    {"time", _wrap_Effect_DisplayInstructions_time}, 
    {"getDisplayTime", _wrap_Effect_DisplayInstructions_getDisplayTime}, 
    {"readDisplayTime", _wrap_Effect_DisplayInstructions_readDisplayTime}, 
    {"text", _wrap_Effect_DisplayInstructions_text}, 
    {"getText", _wrap_Effect_DisplayInstructions_getText}, 
    {"readText", _wrap_Effect_DisplayInstructions_readText}, 
    {"sound", _wrap_Effect_DisplayInstructions_sound}, 
    {"getSound", _wrap_Effect_DisplayInstructions_getSound}, 
    {"readSound", _wrap_Effect_DisplayInstructions_readSound}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_DisplayInstructions_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_DisplayInstructions_bases[] = {0,0};
static const char *swig_Effect_DisplayInstructions_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_DisplayInstructions = { "Effect_DisplayInstructions", &SWIGTYPE_p_Effect_DisplayInstructions,_wrap_new_Effect_DisplayInstructions, swig_delete_Effect_DisplayInstructions, swig_Effect_DisplayInstructions_methods, swig_Effect_DisplayInstructions_attributes, swig_Effect_DisplayInstructions_bases, swig_Effect_DisplayInstructions_base_names };

static int _wrap_new_Effect_ClearInstructions(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ClearInstructions *result = 0 ;
  
  SWIG_check_num_args("Effect_ClearInstructions::Effect_ClearInstructions",0,0)
  result = (Effect_ClearInstructions *)new Effect_ClearInstructions();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ClearInstructions,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ClearInstructions_panel(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ClearInstructions *arg1 = (Effect_ClearInstructions *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ClearInstructions::panel",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ClearInstructions::panel",1,"Effect_ClearInstructions *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ClearInstructions::panel",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ClearInstructions,0))){
    SWIG_fail_ptr("Effect_ClearInstructions_panel",1,SWIGTYPE_p_Effect_ClearInstructions);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->panel(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ClearInstructions_getPanel(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ClearInstructions *arg1 = (Effect_ClearInstructions *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ClearInstructions::getPanel",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ClearInstructions::getPanel",1,"Effect_ClearInstructions *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ClearInstructions,0))){
    SWIG_fail_ptr("Effect_ClearInstructions_getPanel",1,SWIGTYPE_p_Effect_ClearInstructions);
  }
  
  result = (long)(arg1)->getPanel();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ClearInstructions_readPanel(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ClearInstructions *arg1 = (Effect_ClearInstructions *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ClearInstructions::readPanel",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ClearInstructions::readPanel",1,"Effect_ClearInstructions *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ClearInstructions::readPanel",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ClearInstructions,0))){
    SWIG_fail_ptr("Effect_ClearInstructions_readPanel",1,SWIGTYPE_p_Effect_ClearInstructions);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ClearInstructions_readPanel",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPanel(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ClearInstructions(void *obj) {
Effect_ClearInstructions *arg1 = (Effect_ClearInstructions *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ClearInstructions_methods[] = {
    {"panel", _wrap_Effect_ClearInstructions_panel}, 
    {"getPanel", _wrap_Effect_ClearInstructions_getPanel}, 
    {"readPanel", _wrap_Effect_ClearInstructions_readPanel}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ClearInstructions_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ClearInstructions_bases[] = {0,0};
static const char *swig_Effect_ClearInstructions_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ClearInstructions = { "Effect_ClearInstructions", &SWIGTYPE_p_Effect_ClearInstructions,_wrap_new_Effect_ClearInstructions, swig_delete_Effect_ClearInstructions, swig_Effect_ClearInstructions_methods, swig_Effect_ClearInstructions_attributes, swig_Effect_ClearInstructions_bases, swig_Effect_ClearInstructions_base_names };

static int _wrap_new_Effect_FreezeUnit(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *result = 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::Effect_FreezeUnit",0,0)
  result = (Effect_FreezeUnit *)new Effect_FreezeUnit();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_FreezeUnit,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::p_source",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_p_source",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getPlayerSource",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getPlayerSource",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readPlayerSource",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readPlayerSource",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_FreezeUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_FreezeUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_FreezeUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_FreezeUnit::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_FreezeUnit::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_FreezeUnit::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_FreezeUnit::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_FreezeUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_FreezeUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_FreezeUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_FreezeUnit::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_FreezeUnit::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_FreezeUnit::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_FreezeUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_FreezeUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_FreezeUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_FreezeUnit::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_FreezeUnit::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_FreezeUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_FreezeUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_FreezeUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_FreezeUnit::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_FreezeUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_FreezeUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_FreezeUnit::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_FreezeUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_FreezeUnit::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_FreezeUnit::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_FreezeUnit::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_FreezeUnit::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_FreezeUnit::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_FreezeUnit::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_FreezeUnit::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_FreezeUnit::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_FreezeUnit::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_FreezeUnit::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_FreezeUnit::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_FreezeUnit::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_FreezeUnit::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::units",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_units",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_FreezeUnit_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_FreezeUnit_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_FreezeUnit_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_FreezeUnit_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_FreezeUnit_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_FreezeUnit_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_FreezeUnit_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_FreezeUnit_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_FreezeUnit_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_FreezeUnit_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_FreezeUnit_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_FreezeUnit_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_FreezeUnit_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_FreezeUnit_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_FreezeUnit_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_FreezeUnit_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_FreezeUnit_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_FreezeUnit_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_FreezeUnit_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_FreezeUnit_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_FreezeUnit_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_FreezeUnit_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_FreezeUnit_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int,int)\n"
    "    Effect_FreezeUnit::units(int,int)\n"
    "    Effect_FreezeUnit::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_FreezeUnit_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getUids",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getUids",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readUids",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUids",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::unit_location",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_unit_location",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::uid_location",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_uid_location",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getUidLocation",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getUidLocation",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readUidLocation",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUidLocation",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::location",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_location",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getLocation",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getLocation",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readLocation",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readLocation",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::area",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_FreezeUnit::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_FreezeUnit::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_FreezeUnit::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_area",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getArea",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getArea",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readArea",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readArea",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::unit_group",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_unit_group",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::unit_group",1,"Effect_FreezeUnit *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_FreezeUnit::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_unit_group",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_FreezeUnit_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_FreezeUnit_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_FreezeUnit_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_FreezeUnit::unit_group(int)\n"
    "    Effect_FreezeUnit::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_FreezeUnit_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getUnitGroup",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getUnitGroup",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readUnitGroup",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUnitGroup",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::unit_type",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_unit_type",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::unit_type",1,"Effect_FreezeUnit *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_FreezeUnit::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_unit_type",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_FreezeUnit_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_FreezeUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_FreezeUnit_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_FreezeUnit_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_FreezeUnit::unit_type(int)\n"
    "    Effect_FreezeUnit::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_FreezeUnit_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getUnitType",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getUnitType",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readUnitType",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUnitType",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::unit_const",1,"Effect_FreezeUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_FreezeUnit::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_unit_const",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_FreezeUnit::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::getUnitConst",1,"Effect_FreezeUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_getUnitConst",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_FreezeUnit_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_FreezeUnit::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_FreezeUnit::readUnitConst",1,"Effect_FreezeUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_FreezeUnit::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_FreezeUnit,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUnitConst",1,SWIGTYPE_p_Effect_FreezeUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_FreezeUnit_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_FreezeUnit(void *obj) {
Effect_FreezeUnit *arg1 = (Effect_FreezeUnit *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_FreezeUnit_methods[] = {
    {"p_source", _wrap_Effect_FreezeUnit_p_source}, 
    {"getPlayerSource", _wrap_Effect_FreezeUnit_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_FreezeUnit_readPlayerSource}, 
    {"units", _wrap_Effect_FreezeUnit_units}, 
    {"getUids", _wrap_Effect_FreezeUnit_getUids}, 
    {"readUids", _wrap_Effect_FreezeUnit_readUids}, 
    {"unit_location", _wrap_Effect_FreezeUnit_unit_location}, 
    {"uid_location", _wrap_Effect_FreezeUnit_uid_location}, 
    {"getUidLocation", _wrap_Effect_FreezeUnit_getUidLocation}, 
    {"readUidLocation", _wrap_Effect_FreezeUnit_readUidLocation}, 
    {"location", _wrap_Effect_FreezeUnit_location}, 
    {"getLocation", _wrap_Effect_FreezeUnit_getLocation}, 
    {"readLocation", _wrap_Effect_FreezeUnit_readLocation}, 
    {"area", _wrap_Effect_FreezeUnit_area}, 
    {"getArea", _wrap_Effect_FreezeUnit_getArea}, 
    {"readArea", _wrap_Effect_FreezeUnit_readArea}, 
    {"unit_group", _wrap_Effect_FreezeUnit_unit_group}, 
    {"getUnitGroup", _wrap_Effect_FreezeUnit_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_FreezeUnit_readUnitGroup}, 
    {"unit_type", _wrap_Effect_FreezeUnit_unit_type}, 
    {"getUnitType", _wrap_Effect_FreezeUnit_getUnitType}, 
    {"readUnitType", _wrap_Effect_FreezeUnit_readUnitType}, 
    {"unit_const", _wrap_Effect_FreezeUnit_unit_const}, 
    {"getUnitConst", _wrap_Effect_FreezeUnit_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_FreezeUnit_readUnitConst}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_FreezeUnit_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_FreezeUnit_bases[] = {0,0};
static const char *swig_Effect_FreezeUnit_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_FreezeUnit = { "Effect_FreezeUnit", &SWIGTYPE_p_Effect_FreezeUnit,_wrap_new_Effect_FreezeUnit, swig_delete_Effect_FreezeUnit, swig_Effect_FreezeUnit_methods, swig_Effect_FreezeUnit_attributes, swig_Effect_FreezeUnit_bases, swig_Effect_FreezeUnit_base_names };

static int _wrap_new_Effect_UseAdvancedButtons(lua_State* L) {
  int SWIG_arg = 0;
  Effect_UseAdvancedButtons *result = 0 ;
  
  SWIG_check_num_args("Effect_UseAdvancedButtons::Effect_UseAdvancedButtons",0,0)
  result = (Effect_UseAdvancedButtons *)new Effect_UseAdvancedButtons();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_UseAdvancedButtons,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_UseAdvancedButtons(void *obj) {
Effect_UseAdvancedButtons *arg1 = (Effect_UseAdvancedButtons *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_UseAdvancedButtons_methods[] = {
    {0,0}
};
static swig_lua_attribute swig_Effect_UseAdvancedButtons_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_UseAdvancedButtons_bases[] = {0,0};
static const char *swig_Effect_UseAdvancedButtons_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_UseAdvancedButtons = { "Effect_UseAdvancedButtons", &SWIGTYPE_p_Effect_UseAdvancedButtons,_wrap_new_Effect_UseAdvancedButtons, swig_delete_Effect_UseAdvancedButtons, swig_Effect_UseAdvancedButtons_methods, swig_Effect_UseAdvancedButtons_attributes, swig_Effect_UseAdvancedButtons_bases, swig_Effect_UseAdvancedButtons_base_names };

static int _wrap_new_Effect_DamageObject(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *result = 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::Effect_DamageObject",0,0)
  result = (Effect_DamageObject *)new Effect_DamageObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DamageObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DamageObject::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::p_source",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_p_source",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DamageObject::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::getPlayerSource",1,"Effect_DamageObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_getPlayerSource",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::readPlayerSource",1,"Effect_DamageObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DamageObject::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_readPlayerSource",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DamageObject_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_DamageObject::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::area",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_area",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_DamageObject::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::getArea",1,"Effect_DamageObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_getArea",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::readArea",1,"Effect_DamageObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DamageObject::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_readArea",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DamageObject_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_DamageObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_DamageObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_DamageObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_DamageObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_DamageObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_DamageObject::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_DamageObject::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_DamageObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_DamageObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_DamageObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_DamageObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_DamageObject::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_DamageObject::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_DamageObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_DamageObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_DamageObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_DamageObject::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_DamageObject::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_DamageObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_DamageObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_DamageObject::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_DamageObject::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_DamageObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_DamageObject::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_DamageObject::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_DamageObject::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_DamageObject::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_DamageObject::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_DamageObject::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_DamageObject::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_DamageObject::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_DamageObject::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_DamageObject::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_DamageObject::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_DamageObject::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_DamageObject::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_DamageObject::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_DamageObject::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_DamageObject::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_DamageObject::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_DamageObject::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DamageObject::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::units",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_units",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_DamageObject_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_DamageObject_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_DamageObject_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_DamageObject_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_DamageObject_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_DamageObject_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_DamageObject_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_DamageObject_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_DamageObject_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_DamageObject_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_DamageObject_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_DamageObject_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_DamageObject_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_DamageObject_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_DamageObject_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_DamageObject_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_DamageObject_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_DamageObject_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_DamageObject_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_DamageObject_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_DamageObject_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_DamageObject_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_DamageObject_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int,int)\n"
    "    Effect_DamageObject::units(int,int,int)\n"
    "    Effect_DamageObject::units(int,int)\n"
    "    Effect_DamageObject::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_DamageObject_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_DamageObject::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::getUids",1,"Effect_DamageObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_getUids",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_DamageObject::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::readUids",1,"Effect_DamageObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DamageObject::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_DamageObject::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUids",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_amount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DamageObject::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::amount",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_amount",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DamageObject::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::getAmount",1,"Effect_DamageObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_getAmount",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::readAmount",1,"Effect_DamageObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DamageObject::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_readAmount",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DamageObject_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DamageObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::unit_group",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_unit_group",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::unit_group",1,"Effect_DamageObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_DamageObject::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_unit_group",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_DamageObject_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_DamageObject_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_DamageObject_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_DamageObject::unit_group(int)\n"
    "    Effect_DamageObject::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_DamageObject_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DamageObject::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::getUnitGroup",1,"Effect_DamageObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_getUnitGroup",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::readUnitGroup",1,"Effect_DamageObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DamageObject::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUnitGroup",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DamageObject::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::unit_const",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_unit_const",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DamageObject::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::getUnitConst",1,"Effect_DamageObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_getUnitConst",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::readUnitConst",1,"Effect_DamageObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DamageObject::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUnitConst",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_DamageObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::unit_type",1,"Effect_DamageObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_DamageObject::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_unit_type",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::unit_type",1,"Effect_DamageObject *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_DamageObject::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_unit_type",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_DamageObject_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_DamageObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_DamageObject_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_DamageObject_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_DamageObject::unit_type(int)\n"
    "    Effect_DamageObject::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_DamageObject_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_DamageObject::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::getUnitType",1,"Effect_DamageObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_getUnitType",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_DamageObject_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_DamageObject *arg1 = (Effect_DamageObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_DamageObject::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_DamageObject::readUnitType",1,"Effect_DamageObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_DamageObject::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_DamageObject,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUnitType",1,SWIGTYPE_p_Effect_DamageObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_DamageObject_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_DamageObject(void *obj) {
Effect_DamageObject *arg1 = (Effect_DamageObject *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_DamageObject_methods[] = {
    {"p_source", _wrap_Effect_DamageObject_p_source}, 
    {"getPlayerSource", _wrap_Effect_DamageObject_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_DamageObject_readPlayerSource}, 
    {"area", _wrap_Effect_DamageObject_area}, 
    {"getArea", _wrap_Effect_DamageObject_getArea}, 
    {"readArea", _wrap_Effect_DamageObject_readArea}, 
    {"units", _wrap_Effect_DamageObject_units}, 
    {"getUids", _wrap_Effect_DamageObject_getUids}, 
    {"readUids", _wrap_Effect_DamageObject_readUids}, 
    {"amount", _wrap_Effect_DamageObject_amount}, 
    {"getAmount", _wrap_Effect_DamageObject_getAmount}, 
    {"readAmount", _wrap_Effect_DamageObject_readAmount}, 
    {"unit_group", _wrap_Effect_DamageObject_unit_group}, 
    {"getUnitGroup", _wrap_Effect_DamageObject_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_DamageObject_readUnitGroup}, 
    {"unit_const", _wrap_Effect_DamageObject_unit_const}, 
    {"getUnitConst", _wrap_Effect_DamageObject_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_DamageObject_readUnitConst}, 
    {"unit_type", _wrap_Effect_DamageObject_unit_type}, 
    {"getUnitType", _wrap_Effect_DamageObject_getUnitType}, 
    {"readUnitType", _wrap_Effect_DamageObject_readUnitType}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_DamageObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_DamageObject_bases[] = {0,0};
static const char *swig_Effect_DamageObject_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_DamageObject = { "Effect_DamageObject", &SWIGTYPE_p_Effect_DamageObject,_wrap_new_Effect_DamageObject, swig_delete_Effect_DamageObject, swig_Effect_DamageObject_methods, swig_Effect_DamageObject_attributes, swig_Effect_DamageObject_bases, swig_Effect_DamageObject_base_names };

static int _wrap_new_Effect_PlaceFoundation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *result = 0 ;
  
  SWIG_check_num_args("Effect_PlaceFoundation::Effect_PlaceFoundation",0,0)
  result = (Effect_PlaceFoundation *)new Effect_PlaceFoundation();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_PlaceFoundation,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_PlaceFoundation::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::p_source",1,"Effect_PlaceFoundation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_PlaceFoundation::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_p_source",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_PlaceFoundation::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::getPlayerSource",1,"Effect_PlaceFoundation *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_getPlayerSource",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_PlaceFoundation::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::readPlayerSource",1,"Effect_PlaceFoundation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_PlaceFoundation::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_readPlayerSource",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_PlaceFoundation::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::location",1,"Effect_PlaceFoundation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_PlaceFoundation::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_PlaceFoundation::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_location",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_PlaceFoundation::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::getLocation",1,"Effect_PlaceFoundation *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_getLocation",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_PlaceFoundation::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::readLocation",1,"Effect_PlaceFoundation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_PlaceFoundation::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_readLocation",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_PlaceFoundation::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::unit_const",1,"Effect_PlaceFoundation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_PlaceFoundation::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_unit_const",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_PlaceFoundation::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::getUnitConst",1,"Effect_PlaceFoundation *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_getUnitConst",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_PlaceFoundation_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_PlaceFoundation::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_PlaceFoundation::readUnitConst",1,"Effect_PlaceFoundation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_PlaceFoundation::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_PlaceFoundation,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_readUnitConst",1,SWIGTYPE_p_Effect_PlaceFoundation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_PlaceFoundation_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_PlaceFoundation(void *obj) {
Effect_PlaceFoundation *arg1 = (Effect_PlaceFoundation *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_PlaceFoundation_methods[] = {
    {"p_source", _wrap_Effect_PlaceFoundation_p_source}, 
    {"getPlayerSource", _wrap_Effect_PlaceFoundation_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_PlaceFoundation_readPlayerSource}, 
    {"location", _wrap_Effect_PlaceFoundation_location}, 
    {"getLocation", _wrap_Effect_PlaceFoundation_getLocation}, 
    {"readLocation", _wrap_Effect_PlaceFoundation_readLocation}, 
    {"unit_const", _wrap_Effect_PlaceFoundation_unit_const}, 
    {"getUnitConst", _wrap_Effect_PlaceFoundation_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_PlaceFoundation_readUnitConst}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_PlaceFoundation_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_PlaceFoundation_bases[] = {0,0};
static const char *swig_Effect_PlaceFoundation_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_PlaceFoundation = { "Effect_PlaceFoundation", &SWIGTYPE_p_Effect_PlaceFoundation,_wrap_new_Effect_PlaceFoundation, swig_delete_Effect_PlaceFoundation, swig_Effect_PlaceFoundation_methods, swig_Effect_PlaceFoundation_attributes, swig_Effect_PlaceFoundation_bases, swig_Effect_PlaceFoundation_base_names };

static int _wrap_new_Effect_ChangeObjectName(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *result = 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::Effect_ChangeObjectName",0,0)
  result = (Effect_ChangeObjectName *)new Effect_ChangeObjectName();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeObjectName,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectName::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectName::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectName::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectName::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectName::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeObjectName::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_ChangeObjectName::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectName::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectName::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectName::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectName::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectName::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeObjectName::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectName::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectName::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectName::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectName::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectName::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectName::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectName::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectName::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectName::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectName::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectName::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectName::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectName::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectName::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectName::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectName::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectName::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectName::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectName::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectName::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectName::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectName::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectName::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectName::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectName::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectName::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectName::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectName::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::units",1,"Effect_ChangeObjectName *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_units",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectName_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_ChangeObjectName_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_ChangeObjectName_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_ChangeObjectName_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_ChangeObjectName_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_ChangeObjectName_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_ChangeObjectName_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_ChangeObjectName_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_ChangeObjectName_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_ChangeObjectName_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_ChangeObjectName_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_ChangeObjectName_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_ChangeObjectName_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_ChangeObjectName_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_ChangeObjectName_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_ChangeObjectName_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_ChangeObjectName_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_ChangeObjectName_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_ChangeObjectName_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_ChangeObjectName_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_ChangeObjectName_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectName, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_ChangeObjectName_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeObjectName_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int,int)\n"
    "    Effect_ChangeObjectName::units(int,int)\n"
    "    Effect_ChangeObjectName::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeObjectName_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_ChangeObjectName::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::getUids",1,"Effect_ChangeObjectName *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_getUids",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::readUids",1,"Effect_ChangeObjectName *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectName::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_readUids",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_text(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::text",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::text",1,"Effect_ChangeObjectName *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::text",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_text",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->text((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_getText(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  std::string result;
  
  SWIG_check_num_args("Effect_ChangeObjectName::getText",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::getText",1,"Effect_ChangeObjectName *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_getText",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  result = (arg1)->getText();
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectName_readText(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectName::readText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectName::readText",1,"Effect_ChangeObjectName *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectName::readText",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectName,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_readText",1,SWIGTYPE_p_Effect_ChangeObjectName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectName_readText",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readText(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ChangeObjectName(void *obj) {
Effect_ChangeObjectName *arg1 = (Effect_ChangeObjectName *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ChangeObjectName_methods[] = {
    {"units", _wrap_Effect_ChangeObjectName_units}, 
    {"getUids", _wrap_Effect_ChangeObjectName_getUids}, 
    {"readUids", _wrap_Effect_ChangeObjectName_readUids}, 
    {"text", _wrap_Effect_ChangeObjectName_text}, 
    {"getText", _wrap_Effect_ChangeObjectName_getText}, 
    {"readText", _wrap_Effect_ChangeObjectName_readText}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ChangeObjectName_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ChangeObjectName_bases[] = {0,0};
static const char *swig_Effect_ChangeObjectName_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ChangeObjectName = { "Effect_ChangeObjectName", &SWIGTYPE_p_Effect_ChangeObjectName,_wrap_new_Effect_ChangeObjectName, swig_delete_Effect_ChangeObjectName, swig_Effect_ChangeObjectName_methods, swig_Effect_ChangeObjectName_attributes, swig_Effect_ChangeObjectName_bases, swig_Effect_ChangeObjectName_base_names };

static int _wrap_new_Effect_ChangeObjectHP(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *result = 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::Effect_ChangeObjectHP",0,0)
  result = (Effect_ChangeObjectHP *)new Effect_ChangeObjectHP();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeObjectHP,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::p_source",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_p_source",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::getPlayerSource",1,"Effect_ChangeObjectHP *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_getPlayerSource",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::readPlayerSource",1,"Effect_ChangeObjectHP *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readPlayerSource",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::area",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_area",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::getArea",1,"Effect_ChangeObjectHP *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_getArea",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::readArea",1,"Effect_ChangeObjectHP *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readArea",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectHP::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectHP::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectHP::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectHP::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectHP::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeObjectHP::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_ChangeObjectHP::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectHP::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectHP::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectHP::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectHP::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectHP::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeObjectHP::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectHP::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectHP::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectHP::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectHP::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectHP::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectHP::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectHP::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectHP::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectHP::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectHP::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectHP::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectHP::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectHP::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectHP::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectHP::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectHP::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectHP::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectHP::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectHP::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectHP::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectHP::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectHP::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectHP::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectHP::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectHP::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectHP::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectHP::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectHP::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::units",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_units",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectHP_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_ChangeObjectHP_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_ChangeObjectHP_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_ChangeObjectHP_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_ChangeObjectHP_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_ChangeObjectHP_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_ChangeObjectHP_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_ChangeObjectHP_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_ChangeObjectHP_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_ChangeObjectHP_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_ChangeObjectHP_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_ChangeObjectHP_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_ChangeObjectHP_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_ChangeObjectHP_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_ChangeObjectHP_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_ChangeObjectHP_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_ChangeObjectHP_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_ChangeObjectHP_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_ChangeObjectHP_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_ChangeObjectHP_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_ChangeObjectHP_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_ChangeObjectHP_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeObjectHP_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int,int)\n"
    "    Effect_ChangeObjectHP::units(int,int)\n"
    "    Effect_ChangeObjectHP::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeObjectHP_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::getUids",1,"Effect_ChangeObjectHP *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_getUids",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::readUids",1,"Effect_ChangeObjectHP *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectHP::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUids",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_amount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::amount",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_amount",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::getAmount",1,"Effect_ChangeObjectHP *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_getAmount",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::readAmount",1,"Effect_ChangeObjectHP *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readAmount",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_group",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_unit_group",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_group",1,"Effect_ChangeObjectHP *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_unit_group",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectHP_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectHP_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeObjectHP_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeObjectHP::unit_group(int)\n"
    "    Effect_ChangeObjectHP::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeObjectHP_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::getUnitGroup",1,"Effect_ChangeObjectHP *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_getUnitGroup",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::readUnitGroup",1,"Effect_ChangeObjectHP *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUnitGroup",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_const",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_unit_const",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::getUnitConst",1,"Effect_ChangeObjectHP *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_getUnitConst",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::readUnitConst",1,"Effect_ChangeObjectHP *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUnitConst",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_type",1,"Effect_ChangeObjectHP *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_unit_type",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_type",1,"Effect_ChangeObjectHP *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_unit_type",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectHP_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectHP, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectHP_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeObjectHP_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeObjectHP::unit_type(int)\n"
    "    Effect_ChangeObjectHP::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeObjectHP_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::getUnitType",1,"Effect_ChangeObjectHP *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_getUnitType",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectHP_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectHP::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectHP::readUnitType",1,"Effect_ChangeObjectHP *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectHP::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectHP,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUnitType",1,SWIGTYPE_p_Effect_ChangeObjectHP);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectHP_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ChangeObjectHP(void *obj) {
Effect_ChangeObjectHP *arg1 = (Effect_ChangeObjectHP *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ChangeObjectHP_methods[] = {
    {"p_source", _wrap_Effect_ChangeObjectHP_p_source}, 
    {"getPlayerSource", _wrap_Effect_ChangeObjectHP_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_ChangeObjectHP_readPlayerSource}, 
    {"area", _wrap_Effect_ChangeObjectHP_area}, 
    {"getArea", _wrap_Effect_ChangeObjectHP_getArea}, 
    {"readArea", _wrap_Effect_ChangeObjectHP_readArea}, 
    {"units", _wrap_Effect_ChangeObjectHP_units}, 
    {"getUids", _wrap_Effect_ChangeObjectHP_getUids}, 
    {"readUids", _wrap_Effect_ChangeObjectHP_readUids}, 
    {"amount", _wrap_Effect_ChangeObjectHP_amount}, 
    {"getAmount", _wrap_Effect_ChangeObjectHP_getAmount}, 
    {"readAmount", _wrap_Effect_ChangeObjectHP_readAmount}, 
    {"unit_group", _wrap_Effect_ChangeObjectHP_unit_group}, 
    {"getUnitGroup", _wrap_Effect_ChangeObjectHP_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_ChangeObjectHP_readUnitGroup}, 
    {"unit_const", _wrap_Effect_ChangeObjectHP_unit_const}, 
    {"getUnitConst", _wrap_Effect_ChangeObjectHP_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_ChangeObjectHP_readUnitConst}, 
    {"unit_type", _wrap_Effect_ChangeObjectHP_unit_type}, 
    {"getUnitType", _wrap_Effect_ChangeObjectHP_getUnitType}, 
    {"readUnitType", _wrap_Effect_ChangeObjectHP_readUnitType}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ChangeObjectHP_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ChangeObjectHP_bases[] = {0,0};
static const char *swig_Effect_ChangeObjectHP_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ChangeObjectHP = { "Effect_ChangeObjectHP", &SWIGTYPE_p_Effect_ChangeObjectHP,_wrap_new_Effect_ChangeObjectHP, swig_delete_Effect_ChangeObjectHP, swig_Effect_ChangeObjectHP_methods, swig_Effect_ChangeObjectHP_attributes, swig_Effect_ChangeObjectHP_bases, swig_Effect_ChangeObjectHP_base_names };

static int _wrap_new_Effect_ChangeObjectAttack(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *result = 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::Effect_ChangeObjectAttack",0,0)
  result = (Effect_ChangeObjectAttack *)new Effect_ChangeObjectAttack();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeObjectAttack,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::p_source",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_p_source",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::getPlayerSource",1,"Effect_ChangeObjectAttack *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_getPlayerSource",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::readPlayerSource",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readPlayerSource",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::area",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_area",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::getArea",1,"Effect_ChangeObjectAttack *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_getArea",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::readArea",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readArea",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_units",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectAttack_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_ChangeObjectAttack_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_ChangeObjectAttack_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_ChangeObjectAttack_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_ChangeObjectAttack_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_ChangeObjectAttack_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_ChangeObjectAttack_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_ChangeObjectAttack_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_ChangeObjectAttack_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_ChangeObjectAttack_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_ChangeObjectAttack_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_ChangeObjectAttack_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_ChangeObjectAttack_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_ChangeObjectAttack_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_ChangeObjectAttack_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_ChangeObjectAttack_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_ChangeObjectAttack_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_ChangeObjectAttack_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_ChangeObjectAttack_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_ChangeObjectAttack_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_ChangeObjectAttack_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_ChangeObjectAttack_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeObjectAttack_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int,int)\n"
    "    Effect_ChangeObjectAttack::units(int,int)\n"
    "    Effect_ChangeObjectAttack::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeObjectAttack_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::getUids",1,"Effect_ChangeObjectAttack *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_getUids",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUids",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUids",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_amount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::amount",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_amount",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::getAmount",1,"Effect_ChangeObjectAttack *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_getAmount",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::readAmount",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readAmount",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_group",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_unit_group",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_group",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_unit_group",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectAttack_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectAttack_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeObjectAttack_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeObjectAttack::unit_group(int)\n"
    "    Effect_ChangeObjectAttack::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeObjectAttack_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::getUnitGroup",1,"Effect_ChangeObjectAttack *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_getUnitGroup",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUnitGroup",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUnitGroup",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_const",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_unit_const",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::getUnitConst",1,"Effect_ChangeObjectAttack *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_getUnitConst",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUnitConst",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUnitConst",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_type",1,"Effect_ChangeObjectAttack *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_unit_type",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_type",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_unit_type",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectAttack_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_ChangeObjectAttack, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_ChangeObjectAttack_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_ChangeObjectAttack_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_ChangeObjectAttack::unit_type(int)\n"
    "    Effect_ChangeObjectAttack::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_ChangeObjectAttack_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::getUnitType",1,"Effect_ChangeObjectAttack *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_getUnitType",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_ChangeObjectAttack_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_ChangeObjectAttack::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUnitType",1,"Effect_ChangeObjectAttack *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_ChangeObjectAttack::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_ChangeObjectAttack,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUnitType",1,SWIGTYPE_p_Effect_ChangeObjectAttack);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_ChangeObjectAttack_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_ChangeObjectAttack(void *obj) {
Effect_ChangeObjectAttack *arg1 = (Effect_ChangeObjectAttack *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_ChangeObjectAttack_methods[] = {
    {"p_source", _wrap_Effect_ChangeObjectAttack_p_source}, 
    {"getPlayerSource", _wrap_Effect_ChangeObjectAttack_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_ChangeObjectAttack_readPlayerSource}, 
    {"area", _wrap_Effect_ChangeObjectAttack_area}, 
    {"getArea", _wrap_Effect_ChangeObjectAttack_getArea}, 
    {"readArea", _wrap_Effect_ChangeObjectAttack_readArea}, 
    {"units", _wrap_Effect_ChangeObjectAttack_units}, 
    {"getUids", _wrap_Effect_ChangeObjectAttack_getUids}, 
    {"readUids", _wrap_Effect_ChangeObjectAttack_readUids}, 
    {"amount", _wrap_Effect_ChangeObjectAttack_amount}, 
    {"getAmount", _wrap_Effect_ChangeObjectAttack_getAmount}, 
    {"readAmount", _wrap_Effect_ChangeObjectAttack_readAmount}, 
    {"unit_group", _wrap_Effect_ChangeObjectAttack_unit_group}, 
    {"getUnitGroup", _wrap_Effect_ChangeObjectAttack_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_ChangeObjectAttack_readUnitGroup}, 
    {"unit_const", _wrap_Effect_ChangeObjectAttack_unit_const}, 
    {"getUnitConst", _wrap_Effect_ChangeObjectAttack_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_ChangeObjectAttack_readUnitConst}, 
    {"unit_type", _wrap_Effect_ChangeObjectAttack_unit_type}, 
    {"getUnitType", _wrap_Effect_ChangeObjectAttack_getUnitType}, 
    {"readUnitType", _wrap_Effect_ChangeObjectAttack_readUnitType}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_ChangeObjectAttack_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_ChangeObjectAttack_bases[] = {0,0};
static const char *swig_Effect_ChangeObjectAttack_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_ChangeObjectAttack = { "Effect_ChangeObjectAttack", &SWIGTYPE_p_Effect_ChangeObjectAttack,_wrap_new_Effect_ChangeObjectAttack, swig_delete_Effect_ChangeObjectAttack, swig_Effect_ChangeObjectAttack_methods, swig_Effect_ChangeObjectAttack_attributes, swig_Effect_ChangeObjectAttack_bases, swig_Effect_ChangeObjectAttack_base_names };

static int _wrap_new_Effect_StopUnit(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *result = 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::Effect_StopUnit",0,0)
  result = (Effect_StopUnit *)new Effect_StopUnit();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_StopUnit,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_p_source(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_StopUnit::p_source",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::p_source",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::p_source",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_p_source",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->p_source(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_getPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_StopUnit::getPlayerSource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getPlayerSource",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getPlayerSource",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (long)(arg1)->getPlayerSource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readPlayerSource(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::readPlayerSource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readPlayerSource",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readPlayerSource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readPlayerSource",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readPlayerSource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayerSource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  int arg23 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",23,23)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_StopUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_StopUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_StopUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_StopUnit::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_StopUnit::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_StopUnit::units",22,"int");
  if(!lua_isnumber(L,23)) SWIG_fail_arg("Effect_StopUnit::units",23,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  arg23 = (int)lua_tonumber(L, 23);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  int arg22 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",22,22)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_StopUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_StopUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_StopUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_StopUnit::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_StopUnit::units",21,"int");
  if(!lua_isnumber(L,22)) SWIG_fail_arg("Effect_StopUnit::units",22,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  arg22 = (int)lua_tonumber(L, 22);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  int arg21 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",21,21)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_StopUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_StopUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_StopUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_StopUnit::units",20,"int");
  if(!lua_isnumber(L,21)) SWIG_fail_arg("Effect_StopUnit::units",21,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  arg21 = (int)lua_tonumber(L, 21);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  int arg20 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",20,20)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_StopUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_StopUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_StopUnit::units",19,"int");
  if(!lua_isnumber(L,20)) SWIG_fail_arg("Effect_StopUnit::units",20,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  arg20 = (int)lua_tonumber(L, 20);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  int arg19 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",19,19)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_StopUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_StopUnit::units",18,"int");
  if(!lua_isnumber(L,19)) SWIG_fail_arg("Effect_StopUnit::units",19,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  arg19 = (int)lua_tonumber(L, 19);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  int arg18 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",18,18)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_StopUnit::units",17,"int");
  if(!lua_isnumber(L,18)) SWIG_fail_arg("Effect_StopUnit::units",18,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  arg18 = (int)lua_tonumber(L, 18);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  int arg17 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",17,17)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  if(!lua_isnumber(L,17)) SWIG_fail_arg("Effect_StopUnit::units",17,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  arg17 = (int)lua_tonumber(L, 17);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",16,16)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  if(!lua_isnumber(L,16)) SWIG_fail_arg("Effect_StopUnit::units",16,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",15,15)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  if(!lua_isnumber(L,15)) SWIG_fail_arg("Effect_StopUnit::units",15,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  int arg14 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",14,14)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  if(!lua_isnumber(L,14)) SWIG_fail_arg("Effect_StopUnit::units",14,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  int arg13 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",13,13)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  if(!lua_isnumber(L,13)) SWIG_fail_arg("Effect_StopUnit::units",13,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  int arg12 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",12,12)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  if(!lua_isnumber(L,12)) SWIG_fail_arg("Effect_StopUnit::units",12,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  arg12 = (int)lua_tonumber(L, 12);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  int arg11 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",11,11)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  if(!lua_isnumber(L,11)) SWIG_fail_arg("Effect_StopUnit::units",11,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  arg11 = (int)lua_tonumber(L, 11);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",10,10)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("Effect_StopUnit::units",10,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  arg10 = (int)lua_tonumber(L, 10);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("Effect_StopUnit::units",9,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (int)lua_tonumber(L, 9);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_15(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("Effect_StopUnit::units",8,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_16(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("Effect_StopUnit::units",7,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  arg7 = (int)lua_tonumber(L, 7);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6,arg7);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_17(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("Effect_StopUnit::units",6,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->units(arg2,arg3,arg4,arg5,arg6);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_18(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::units",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->units(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_19(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::units",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->units(arg2,arg3,arg4);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_20(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::units",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->units(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units__SWIG_21(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_StopUnit::units",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::units",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::units",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_units",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->units(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_units(lua_State* L) {
  int argc;
  int argv[24]={
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_StopUnit_units__SWIG_21(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_Effect_StopUnit_units__SWIG_20(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_Effect_StopUnit_units__SWIG_19(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_Effect_StopUnit_units__SWIG_18(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_Effect_StopUnit_units__SWIG_17(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_Effect_StopUnit_units__SWIG_16(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_Effect_StopUnit_units__SWIG_15(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_Effect_StopUnit_units__SWIG_14(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        return _wrap_Effect_StopUnit_units__SWIG_13(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          return _wrap_Effect_StopUnit_units__SWIG_12(L);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            return _wrap_Effect_StopUnit_units__SWIG_11(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              return _wrap_Effect_StopUnit_units__SWIG_10(L);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 14) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                return _wrap_Effect_StopUnit_units__SWIG_9(L);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 15) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  return _wrap_Effect_StopUnit_units__SWIG_8(L);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 16) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    return _wrap_Effect_StopUnit_units__SWIG_7(L);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 17) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      return _wrap_Effect_StopUnit_units__SWIG_6(L);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 18) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        return _wrap_Effect_StopUnit_units__SWIG_5(L);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 19) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          return _wrap_Effect_StopUnit_units__SWIG_4(L);
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 20) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            return _wrap_Effect_StopUnit_units__SWIG_3(L);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 21) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              return _wrap_Effect_StopUnit_units__SWIG_2(L);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 22) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                return _wrap_Effect_StopUnit_units__SWIG_1(L);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 23) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          _v = lua_isnumber(L,argv[10]);
                        }
                        if (_v) {
                          {
                            _v = lua_isnumber(L,argv[11]);
                          }
                          if (_v) {
                            {
                              _v = lua_isnumber(L,argv[12]);
                            }
                            if (_v) {
                              {
                                _v = lua_isnumber(L,argv[13]);
                              }
                              if (_v) {
                                {
                                  _v = lua_isnumber(L,argv[14]);
                                }
                                if (_v) {
                                  {
                                    _v = lua_isnumber(L,argv[15]);
                                  }
                                  if (_v) {
                                    {
                                      _v = lua_isnumber(L,argv[16]);
                                    }
                                    if (_v) {
                                      {
                                        _v = lua_isnumber(L,argv[17]);
                                      }
                                      if (_v) {
                                        {
                                          _v = lua_isnumber(L,argv[18]);
                                        }
                                        if (_v) {
                                          {
                                            _v = lua_isnumber(L,argv[19]);
                                          }
                                          if (_v) {
                                            {
                                              _v = lua_isnumber(L,argv[20]);
                                            }
                                            if (_v) {
                                              {
                                                _v = lua_isnumber(L,argv[21]);
                                              }
                                              if (_v) {
                                                {
                                                  _v = lua_isnumber(L,argv[22]);
                                                }
                                                if (_v) {
                                                  return _wrap_Effect_StopUnit_units__SWIG_0(L);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_StopUnit_units'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int,int)\n"
    "    Effect_StopUnit::units(int,int,int)\n"
    "    Effect_StopUnit::units(int,int)\n"
    "    Effect_StopUnit::units(int)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_StopUnit_getUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  std::vector< int > result;
  
  SWIG_check_num_args("Effect_StopUnit::getUids",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getUids",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getUids",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (arg1)->getUids();
  {
    std::vector< int > * resultptr = new std::vector< int >((const std::vector< int > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_int_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readUids(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("Effect_StopUnit::readUids",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readUids",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readUids",2,"FILE *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::readUids",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUids",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUids",2,SWIGTYPE_p_FILE);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  (arg1)->readUids(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_StopUnit::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::unit_location",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_unit_location",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_StopUnit::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::uid_location",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_uid_location",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_StopUnit::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getUidLocation",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getUidLocation",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readUidLocation",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUidLocation",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_location(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("Effect_StopUnit::location",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::location",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::location",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::location",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_location",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->location(arg2,arg3);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_getLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  AOKPT result;
  
  SWIG_check_num_args("Effect_StopUnit::getLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getLocation",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getLocation",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (arg1)->getLocation();
  {
    AOKPT * resultptr = new AOKPT((const AOKPT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKPT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readLocation(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::readLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readLocation",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readLocation",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_area(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Effect_StopUnit::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::area",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Effect_StopUnit::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Effect_StopUnit::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Effect_StopUnit::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_area",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Effect_StopUnit::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getArea",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getArea",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readArea",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readArea",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_StopUnit::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::unit_group",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_unit_group",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::unit_group",1,"Effect_StopUnit *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_StopUnit::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_unit_group",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_StopUnit_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_StopUnit_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_StopUnit_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_StopUnit::unit_group(int)\n"
    "    Effect_StopUnit::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_StopUnit_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_StopUnit::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getUnitGroup",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getUnitGroup",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readUnitGroup",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUnitGroup",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_StopUnit::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::unit_type",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_unit_type",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::unit_type",1,"Effect_StopUnit *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Effect_StopUnit::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_unit_type",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_StopUnit_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Effect_StopUnit, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Effect_StopUnit_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Effect_StopUnit_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Effect_StopUnit::unit_type(int)\n"
    "    Effect_StopUnit::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Effect_StopUnit_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_StopUnit::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getUnitType",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getUnitType",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readUnitType",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUnitType",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Effect_StopUnit::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::unit_const",1,"Effect_StopUnit *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Effect_StopUnit::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_unit_const",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  long result;
  
  SWIG_check_num_args("Effect_StopUnit::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::getUnitConst",1,"Effect_StopUnit *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_getUnitConst",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Effect_StopUnit_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Effect_StopUnit *arg1 = (Effect_StopUnit *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Effect_StopUnit::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Effect_StopUnit::readUnitConst",1,"Effect_StopUnit *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Effect_StopUnit::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Effect_StopUnit,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUnitConst",1,SWIGTYPE_p_Effect_StopUnit);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Effect_StopUnit_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Effect_StopUnit(void *obj) {
Effect_StopUnit *arg1 = (Effect_StopUnit *) obj;
delete arg1;
}
static swig_lua_method swig_Effect_StopUnit_methods[] = {
    {"p_source", _wrap_Effect_StopUnit_p_source}, 
    {"getPlayerSource", _wrap_Effect_StopUnit_getPlayerSource}, 
    {"readPlayerSource", _wrap_Effect_StopUnit_readPlayerSource}, 
    {"units", _wrap_Effect_StopUnit_units}, 
    {"getUids", _wrap_Effect_StopUnit_getUids}, 
    {"readUids", _wrap_Effect_StopUnit_readUids}, 
    {"unit_location", _wrap_Effect_StopUnit_unit_location}, 
    {"uid_location", _wrap_Effect_StopUnit_uid_location}, 
    {"getUidLocation", _wrap_Effect_StopUnit_getUidLocation}, 
    {"readUidLocation", _wrap_Effect_StopUnit_readUidLocation}, 
    {"location", _wrap_Effect_StopUnit_location}, 
    {"getLocation", _wrap_Effect_StopUnit_getLocation}, 
    {"readLocation", _wrap_Effect_StopUnit_readLocation}, 
    {"area", _wrap_Effect_StopUnit_area}, 
    {"getArea", _wrap_Effect_StopUnit_getArea}, 
    {"readArea", _wrap_Effect_StopUnit_readArea}, 
    {"unit_group", _wrap_Effect_StopUnit_unit_group}, 
    {"getUnitGroup", _wrap_Effect_StopUnit_getUnitGroup}, 
    {"readUnitGroup", _wrap_Effect_StopUnit_readUnitGroup}, 
    {"unit_type", _wrap_Effect_StopUnit_unit_type}, 
    {"getUnitType", _wrap_Effect_StopUnit_getUnitType}, 
    {"readUnitType", _wrap_Effect_StopUnit_readUnitType}, 
    {"unit_const", _wrap_Effect_StopUnit_unit_const}, 
    {"getUnitConst", _wrap_Effect_StopUnit_getUnitConst}, 
    {"readUnitConst", _wrap_Effect_StopUnit_readUnitConst}, 
    {0,0}
};
static swig_lua_attribute swig_Effect_StopUnit_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Effect_StopUnit_bases[] = {0,0};
static const char *swig_Effect_StopUnit_base_names[] = {"Effect *",0};
static swig_lua_class _wrap_class_Effect_StopUnit = { "Effect_StopUnit", &SWIGTYPE_p_Effect_StopUnit,_wrap_new_Effect_StopUnit, swig_delete_Effect_StopUnit, swig_Effect_StopUnit_methods, swig_Effect_StopUnit_attributes, swig_Effect_StopUnit_bases, swig_Effect_StopUnit_base_names };

static int _wrap_new_Condition(lua_State* L) {
  int SWIG_arg = 0;
  long arg1 ;
  Condition *result = 0 ;
  
  SWIG_check_num_args("Condition::Condition",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("Condition::Condition",1,"long");
  arg1 = (long)lua_tonumber(L, 1);
  result = (Condition *)new Condition(arg1);
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_createType__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  long arg1 ;
  Condition *result = 0 ;
  
  SWIG_check_num_args("Condition::createType",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("Condition::createType",1,"long");
  arg1 = (long)lua_tonumber(L, 1);
  result = (Condition *)Condition::createType(arg1);
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_createType__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition *result = 0 ;
  
  SWIG_check_num_args("Condition::createType",0,0)
  result = (Condition *)Condition::createType();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_createType(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_Condition_createType__SWIG_1(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_Condition_createType__SWIG_0(L);
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_createType'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition::createType(long)\n"
    "    Condition::createType()\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_getName(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  char *result = 0 ;
  
  SWIG_check_num_args("Condition::getName",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getName",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getName",1,SWIGTYPE_p_Condition);
  }
  
  result = (char *)(arg1)->getName();
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_read(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::read",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::read",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::read",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_read",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_read",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->read(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_write(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::write",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::write",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::write",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_write",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_write",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->write(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_check(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  bool result;
  
  SWIG_check_num_args("Condition::check",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::check",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_check",1,SWIGTYPE_p_Condition);
  }
  
  result = (bool)(arg1)->check();
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getAmount",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getAmount",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getResource(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getResource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getResource",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getResource",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getResource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getUidObject",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getUidObject",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getUidLocation",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getUidLocation",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getPlayer",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getPlayer",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getTechnology",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getTechnology",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getTechnology();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getTimer(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getTimer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getTimer",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getTimer",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getTimer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Condition::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getArea",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getArea",1,SWIGTYPE_p_Condition);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getUnitGroup",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getUnitGroup",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getUnitType",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getUnitType",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getUnitConst",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getUnitConst",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_getAiSignal(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition::getAiSignal",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::getAiSignal",1,"Condition *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_getAiSignal",1,SWIGTYPE_p_Condition);
  }
  
  result = (long)(arg1)->getAiSignal();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readAmount",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readAmount",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readResource(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readResource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readResource",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readResource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readResource",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readResource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readResource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readUidObject",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readUidObject",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readUidLocation",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readUidLocation",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readPlayer",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readPlayer",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readTechnology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readTechnology",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readTechnology",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readTechnology",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readTechnology",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTechnology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readTimer(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readTimer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readTimer",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readTimer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readTimer",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readTimer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTimer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readArea",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readArea",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readUnitGroup",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readUnitGroup",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readUnitType",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readUnitType",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readUnitConst",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readUnitConst",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_readAiSignal(lua_State* L) {
  int SWIG_arg = 0;
  Condition *arg1 = (Condition *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition::readAiSignal",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::readAiSignal",1,"Condition *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition::readAiSignal",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition,0))){
    SWIG_fail_ptr("Condition_readAiSignal",1,SWIGTYPE_p_Condition);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_readAiSignal",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAiSignal(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_types_set(lua_State* L) {
  int SWIG_arg = 0;
  char **arg1 ;
  
  SWIG_check_num_args("Condition::types",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::types",1,"char const *[20]");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_p_char,0))){
    SWIG_fail_ptr("Condition_types_set",1,SWIGTYPE_p_p_char);
  }
  
  {
    size_t ii;
    char const * *b = (char const * *) Condition::types;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((char const * *) arg1 + ii);
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_types_get(lua_State* L) {
  int SWIG_arg = 0;
  char **result = 0 ;
  
  SWIG_check_num_args("Condition::types",0,0)
  result = (char **)(char **)Condition::types;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_p_char,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_propertyTypes_set(lua_State* L) {
  int SWIG_arg = 0;
  char **arg1 ;
  
  SWIG_check_num_args("Condition::propertyTypes",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition::propertyTypes",1,"char const *[12]");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_p_char,0))){
    SWIG_fail_ptr("Condition_propertyTypes_set",1,SWIGTYPE_p_p_char);
  }
  
  {
    size_t ii;
    char const * *b = (char const * *) Condition::propertyTypes;
    for (ii = 0; ii < (size_t)12; ii++) b[ii] = *((char const * *) arg1 + ii);
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_propertyTypes_get(lua_State* L) {
  int SWIG_arg = 0;
  char **result = 0 ;
  
  SWIG_check_num_args("Condition::propertyTypes",0,0)
  result = (char **)(char **)Condition::propertyTypes;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_p_char,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition(void *obj) {
Condition *arg1 = (Condition *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_methods[] = {
    {"getName", _wrap_Condition_getName}, 
    {"read", _wrap_Condition_read}, 
    {"write", _wrap_Condition_write}, 
    {"check", _wrap_Condition_check}, 
    {"getAmount", _wrap_Condition_getAmount}, 
    {"getResource", _wrap_Condition_getResource}, 
    {"getUidObject", _wrap_Condition_getUidObject}, 
    {"getUidLocation", _wrap_Condition_getUidLocation}, 
    {"getPlayer", _wrap_Condition_getPlayer}, 
    {"getTechnology", _wrap_Condition_getTechnology}, 
    {"getTimer", _wrap_Condition_getTimer}, 
    {"getArea", _wrap_Condition_getArea}, 
    {"getUnitGroup", _wrap_Condition_getUnitGroup}, 
    {"getUnitType", _wrap_Condition_getUnitType}, 
    {"getUnitConst", _wrap_Condition_getUnitConst}, 
    {"getAiSignal", _wrap_Condition_getAiSignal}, 
    {"readAmount", _wrap_Condition_readAmount}, 
    {"readResource", _wrap_Condition_readResource}, 
    {"readUidObject", _wrap_Condition_readUidObject}, 
    {"readUidLocation", _wrap_Condition_readUidLocation}, 
    {"readPlayer", _wrap_Condition_readPlayer}, 
    {"readTechnology", _wrap_Condition_readTechnology}, 
    {"readTimer", _wrap_Condition_readTimer}, 
    {"readArea", _wrap_Condition_readArea}, 
    {"readUnitGroup", _wrap_Condition_readUnitGroup}, 
    {"readUnitType", _wrap_Condition_readUnitType}, 
    {"readUnitConst", _wrap_Condition_readUnitConst}, 
    {"readAiSignal", _wrap_Condition_readAiSignal}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_bases[] = {0};
static const char *swig_Condition_base_names[] = {0};
static swig_lua_class _wrap_class_Condition = { "Condition", &SWIGTYPE_p_Condition,_wrap_new_Condition, swig_delete_Condition, swig_Condition_methods, swig_Condition_attributes, swig_Condition_bases, swig_Condition_base_names };

static int _wrap_new_Condition_None(lua_State* L) {
  int SWIG_arg = 0;
  Condition_None *result = 0 ;
  
  SWIG_check_num_args("Condition_None::Condition_None",0,0)
  result = (Condition_None *)new Condition_None();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_None,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_None(void *obj) {
Condition_None *arg1 = (Condition_None *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_None_methods[] = {
    {0,0}
};
static swig_lua_attribute swig_Condition_None_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_None_bases[] = {0,0};
static const char *swig_Condition_None_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_None = { "Condition_None", &SWIGTYPE_p_Condition_None,_wrap_new_Condition_None, swig_delete_Condition_None, swig_Condition_None_methods, swig_Condition_None_attributes, swig_Condition_None_bases, swig_Condition_None_base_names };

static int _wrap_new_Condition_BringObjectToArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *result = 0 ;
  
  SWIG_check_num_args("Condition_BringObjectToArea::Condition_BringObjectToArea",0,0)
  result = (Condition_BringObjectToArea *)new Condition_BringObjectToArea();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_BringObjectToArea,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToArea_area(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Condition_BringObjectToArea::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToArea::area",1,"Condition_BringObjectToArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_BringObjectToArea::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Condition_BringObjectToArea::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Condition_BringObjectToArea::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Condition_BringObjectToArea::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToArea,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_area",1,SWIGTYPE_p_Condition_BringObjectToArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToArea_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Condition_BringObjectToArea::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToArea::getArea",1,"Condition_BringObjectToArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToArea,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_getArea",1,SWIGTYPE_p_Condition_BringObjectToArea);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToArea_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_BringObjectToArea::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToArea::readArea",1,"Condition_BringObjectToArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_BringObjectToArea::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToArea,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_readArea",1,SWIGTYPE_p_Condition_BringObjectToArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToArea_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_BringObjectToArea::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToArea::unit_object",1,"Condition_BringObjectToArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_BringObjectToArea::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToArea,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_unit_object",1,SWIGTYPE_p_Condition_BringObjectToArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToArea_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_BringObjectToArea::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToArea::uid_object",1,"Condition_BringObjectToArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_BringObjectToArea::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToArea,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_uid_object",1,SWIGTYPE_p_Condition_BringObjectToArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToArea_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_BringObjectToArea::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToArea::getUidObject",1,"Condition_BringObjectToArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToArea,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_getUidObject",1,SWIGTYPE_p_Condition_BringObjectToArea);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToArea_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_BringObjectToArea::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToArea::readUidObject",1,"Condition_BringObjectToArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_BringObjectToArea::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToArea,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_readUidObject",1,SWIGTYPE_p_Condition_BringObjectToArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_BringObjectToArea_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_BringObjectToArea(void *obj) {
Condition_BringObjectToArea *arg1 = (Condition_BringObjectToArea *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_BringObjectToArea_methods[] = {
    {"area", _wrap_Condition_BringObjectToArea_area}, 
    {"getArea", _wrap_Condition_BringObjectToArea_getArea}, 
    {"readArea", _wrap_Condition_BringObjectToArea_readArea}, 
    {"unit_object", _wrap_Condition_BringObjectToArea_unit_object}, 
    {"uid_object", _wrap_Condition_BringObjectToArea_uid_object}, 
    {"getUidObject", _wrap_Condition_BringObjectToArea_getUidObject}, 
    {"readUidObject", _wrap_Condition_BringObjectToArea_readUidObject}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_BringObjectToArea_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_BringObjectToArea_bases[] = {0,0};
static const char *swig_Condition_BringObjectToArea_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_BringObjectToArea = { "Condition_BringObjectToArea", &SWIGTYPE_p_Condition_BringObjectToArea,_wrap_new_Condition_BringObjectToArea, swig_delete_Condition_BringObjectToArea, swig_Condition_BringObjectToArea_methods, swig_Condition_BringObjectToArea_attributes, swig_Condition_BringObjectToArea_bases, swig_Condition_BringObjectToArea_base_names };

static int _wrap_new_Condition_BringObjectToObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *result = 0 ;
  
  SWIG_check_num_args("Condition_BringObjectToObject::Condition_BringObjectToObject",0,0)
  result = (Condition_BringObjectToObject *)new Condition_BringObjectToObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_BringObjectToObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_BringObjectToObject::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::unit_object",1,"Condition_BringObjectToObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_BringObjectToObject::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_unit_object",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_BringObjectToObject::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::uid_object",1,"Condition_BringObjectToObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_BringObjectToObject::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_uid_object",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_BringObjectToObject::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::getUidObject",1,"Condition_BringObjectToObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_getUidObject",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_BringObjectToObject::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::readUidObject",1,"Condition_BringObjectToObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_BringObjectToObject::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_readUidObject",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_BringObjectToObject::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::unit_location",1,"Condition_BringObjectToObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_BringObjectToObject::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_unit_location",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_BringObjectToObject::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::uid_location",1,"Condition_BringObjectToObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_BringObjectToObject::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_uid_location",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_BringObjectToObject::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::getUidLocation",1,"Condition_BringObjectToObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_getUidLocation",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_BringObjectToObject_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_BringObjectToObject::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_BringObjectToObject::readUidLocation",1,"Condition_BringObjectToObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_BringObjectToObject::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_BringObjectToObject,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_readUidLocation",1,SWIGTYPE_p_Condition_BringObjectToObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_BringObjectToObject_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_BringObjectToObject(void *obj) {
Condition_BringObjectToObject *arg1 = (Condition_BringObjectToObject *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_BringObjectToObject_methods[] = {
    {"unit_object", _wrap_Condition_BringObjectToObject_unit_object}, 
    {"uid_object", _wrap_Condition_BringObjectToObject_uid_object}, 
    {"getUidObject", _wrap_Condition_BringObjectToObject_getUidObject}, 
    {"readUidObject", _wrap_Condition_BringObjectToObject_readUidObject}, 
    {"unit_location", _wrap_Condition_BringObjectToObject_unit_location}, 
    {"uid_location", _wrap_Condition_BringObjectToObject_uid_location}, 
    {"getUidLocation", _wrap_Condition_BringObjectToObject_getUidLocation}, 
    {"readUidLocation", _wrap_Condition_BringObjectToObject_readUidLocation}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_BringObjectToObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_BringObjectToObject_bases[] = {0,0};
static const char *swig_Condition_BringObjectToObject_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_BringObjectToObject = { "Condition_BringObjectToObject", &SWIGTYPE_p_Condition_BringObjectToObject,_wrap_new_Condition_BringObjectToObject, swig_delete_Condition_BringObjectToObject, swig_Condition_BringObjectToObject_methods, swig_Condition_BringObjectToObject_attributes, swig_Condition_BringObjectToObject_bases, swig_Condition_BringObjectToObject_base_names };

static int _wrap_new_Condition_OwnObjects(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *result = 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::Condition_OwnObjects",0,0)
  result = (Condition_OwnObjects *)new Condition_OwnObjects();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_OwnObjects,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_player(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnObjects::player",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::player",1,"Condition_OwnObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnObjects::player",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_player",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->player(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnObjects::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::getPlayer",1,"Condition_OwnObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_getPlayer",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::readPlayer",1,"Condition_OwnObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnObjects::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readPlayer",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_amount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnObjects::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::amount",1,"Condition_OwnObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnObjects::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_amount",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnObjects::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::getAmount",1,"Condition_OwnObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_getAmount",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::readAmount",1,"Condition_OwnObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnObjects::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readAmount",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnObjects::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::unit_const",1,"Condition_OwnObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnObjects::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_unit_const",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnObjects::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::getUnitConst",1,"Condition_OwnObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_getUnitConst",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::readUnitConst",1,"Condition_OwnObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnObjects::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readUnitConst",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnObjects::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::unit_type",1,"Condition_OwnObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnObjects::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_unit_type",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::unit_type",1,"Condition_OwnObjects *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Condition_OwnObjects::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_unit_type",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnObjects_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnObjects_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_OwnObjects_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition_OwnObjects::unit_type(int)\n"
    "    Condition_OwnObjects::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_OwnObjects_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnObjects::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::getUnitType",1,"Condition_OwnObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_getUnitType",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::readUnitType",1,"Condition_OwnObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnObjects::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readUnitType",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnObjects::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::unit_group",1,"Condition_OwnObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnObjects::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_unit_group",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::unit_group",1,"Condition_OwnObjects *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Condition_OwnObjects::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_unit_group",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnObjects_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnObjects_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_OwnObjects_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition_OwnObjects::unit_group(int)\n"
    "    Condition_OwnObjects::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_OwnObjects_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnObjects::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::getUnitGroup",1,"Condition_OwnObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_getUnitGroup",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnObjects_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnObjects *arg1 = (Condition_OwnObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnObjects::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnObjects::readUnitGroup",1,"Condition_OwnObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnObjects::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnObjects,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readUnitGroup",1,SWIGTYPE_p_Condition_OwnObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnObjects_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_OwnObjects(void *obj) {
Condition_OwnObjects *arg1 = (Condition_OwnObjects *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_OwnObjects_methods[] = {
    {"player", _wrap_Condition_OwnObjects_player}, 
    {"getPlayer", _wrap_Condition_OwnObjects_getPlayer}, 
    {"readPlayer", _wrap_Condition_OwnObjects_readPlayer}, 
    {"amount", _wrap_Condition_OwnObjects_amount}, 
    {"getAmount", _wrap_Condition_OwnObjects_getAmount}, 
    {"readAmount", _wrap_Condition_OwnObjects_readAmount}, 
    {"unit_const", _wrap_Condition_OwnObjects_unit_const}, 
    {"getUnitConst", _wrap_Condition_OwnObjects_getUnitConst}, 
    {"readUnitConst", _wrap_Condition_OwnObjects_readUnitConst}, 
    {"unit_type", _wrap_Condition_OwnObjects_unit_type}, 
    {"getUnitType", _wrap_Condition_OwnObjects_getUnitType}, 
    {"readUnitType", _wrap_Condition_OwnObjects_readUnitType}, 
    {"unit_group", _wrap_Condition_OwnObjects_unit_group}, 
    {"getUnitGroup", _wrap_Condition_OwnObjects_getUnitGroup}, 
    {"readUnitGroup", _wrap_Condition_OwnObjects_readUnitGroup}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_OwnObjects_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_OwnObjects_bases[] = {0,0};
static const char *swig_Condition_OwnObjects_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_OwnObjects = { "Condition_OwnObjects", &SWIGTYPE_p_Condition_OwnObjects,_wrap_new_Condition_OwnObjects, swig_delete_Condition_OwnObjects, swig_Condition_OwnObjects_methods, swig_Condition_OwnObjects_attributes, swig_Condition_OwnObjects_bases, swig_Condition_OwnObjects_base_names };

static int _wrap_new_Condition_OwnFewerObjects(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *result = 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::Condition_OwnFewerObjects",0,0)
  result = (Condition_OwnFewerObjects *)new Condition_OwnFewerObjects();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_OwnFewerObjects,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_player(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::player",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::player",1,"Condition_OwnFewerObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::player",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_player",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->player(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::getPlayer",1,"Condition_OwnFewerObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_getPlayer",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::readPlayer",1,"Condition_OwnFewerObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readPlayer",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_amount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::amount",1,"Condition_OwnFewerObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_amount",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::getAmount",1,"Condition_OwnFewerObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_getAmount",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::readAmount",1,"Condition_OwnFewerObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readAmount",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_const",1,"Condition_OwnFewerObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_unit_const",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::getUnitConst",1,"Condition_OwnFewerObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_getUnitConst",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::readUnitConst",1,"Condition_OwnFewerObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readUnitConst",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_type",1,"Condition_OwnFewerObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_unit_type",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_type",1,"Condition_OwnFewerObjects *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_unit_type",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnFewerObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnFewerObjects_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnFewerObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnFewerObjects_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_OwnFewerObjects_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition_OwnFewerObjects::unit_type(int)\n"
    "    Condition_OwnFewerObjects::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_OwnFewerObjects_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::getUnitType",1,"Condition_OwnFewerObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_getUnitType",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::readUnitType",1,"Condition_OwnFewerObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readUnitType",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_group",1,"Condition_OwnFewerObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_unit_group",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_group",1,"Condition_OwnFewerObjects *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_unit_group",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnFewerObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnFewerObjects_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_OwnFewerObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_OwnFewerObjects_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_OwnFewerObjects_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition_OwnFewerObjects::unit_group(int)\n"
    "    Condition_OwnFewerObjects::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_OwnFewerObjects_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::getUnitGroup",1,"Condition_OwnFewerObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_getUnitGroup",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_OwnFewerObjects_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_OwnFewerObjects::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_OwnFewerObjects::readUnitGroup",1,"Condition_OwnFewerObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_OwnFewerObjects::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_OwnFewerObjects,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readUnitGroup",1,SWIGTYPE_p_Condition_OwnFewerObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_OwnFewerObjects_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_OwnFewerObjects(void *obj) {
Condition_OwnFewerObjects *arg1 = (Condition_OwnFewerObjects *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_OwnFewerObjects_methods[] = {
    {"player", _wrap_Condition_OwnFewerObjects_player}, 
    {"getPlayer", _wrap_Condition_OwnFewerObjects_getPlayer}, 
    {"readPlayer", _wrap_Condition_OwnFewerObjects_readPlayer}, 
    {"amount", _wrap_Condition_OwnFewerObjects_amount}, 
    {"getAmount", _wrap_Condition_OwnFewerObjects_getAmount}, 
    {"readAmount", _wrap_Condition_OwnFewerObjects_readAmount}, 
    {"unit_const", _wrap_Condition_OwnFewerObjects_unit_const}, 
    {"getUnitConst", _wrap_Condition_OwnFewerObjects_getUnitConst}, 
    {"readUnitConst", _wrap_Condition_OwnFewerObjects_readUnitConst}, 
    {"unit_type", _wrap_Condition_OwnFewerObjects_unit_type}, 
    {"getUnitType", _wrap_Condition_OwnFewerObjects_getUnitType}, 
    {"readUnitType", _wrap_Condition_OwnFewerObjects_readUnitType}, 
    {"unit_group", _wrap_Condition_OwnFewerObjects_unit_group}, 
    {"getUnitGroup", _wrap_Condition_OwnFewerObjects_getUnitGroup}, 
    {"readUnitGroup", _wrap_Condition_OwnFewerObjects_readUnitGroup}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_OwnFewerObjects_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_OwnFewerObjects_bases[] = {0,0};
static const char *swig_Condition_OwnFewerObjects_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_OwnFewerObjects = { "Condition_OwnFewerObjects", &SWIGTYPE_p_Condition_OwnFewerObjects,_wrap_new_Condition_OwnFewerObjects, swig_delete_Condition_OwnFewerObjects, swig_Condition_OwnFewerObjects_methods, swig_Condition_OwnFewerObjects_attributes, swig_Condition_OwnFewerObjects_bases, swig_Condition_OwnFewerObjects_base_names };

static int _wrap_new_Condition_ObjectsInArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *result = 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::Condition_ObjectsInArea",0,0)
  result = (Condition_ObjectsInArea *)new Condition_ObjectsInArea();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectsInArea,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_player(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::player",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::player",1,"Condition_ObjectsInArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::player",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_player",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->player(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectsInArea::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::getPlayer",1,"Condition_ObjectsInArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_getPlayer",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::readPlayer",1,"Condition_ObjectsInArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readPlayer",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_amount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::amount",1,"Condition_ObjectsInArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_amount",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectsInArea::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::getAmount",1,"Condition_ObjectsInArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_getAmount",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::readAmount",1,"Condition_ObjectsInArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readAmount",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_unit_const(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::unit_const",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::unit_const",1,"Condition_ObjectsInArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::unit_const",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_unit_const",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_const(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_getUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectsInArea::getUnitConst",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::getUnitConst",1,"Condition_ObjectsInArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_getUnitConst",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  result = (long)(arg1)->getUnitConst();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_readUnitConst(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::readUnitConst",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::readUnitConst",1,"Condition_ObjectsInArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::readUnitConst",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readUnitConst",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readUnitConst",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitConst(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_unit_type__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::unit_type",1,"Condition_ObjectsInArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::unit_type",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_unit_type",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_type(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_unit_type__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::unit_type",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::unit_type",1,"Condition_ObjectsInArea *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::unit_type",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_unit_type",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_type((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_unit_type(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_ObjectsInArea, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_ObjectsInArea_unit_type__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_ObjectsInArea, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_ObjectsInArea_unit_type__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_ObjectsInArea_unit_type'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition_ObjectsInArea::unit_type(int)\n"
    "    Condition_ObjectsInArea::unit_type(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_ObjectsInArea_getUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectsInArea::getUnitType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::getUnitType",1,"Condition_ObjectsInArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_getUnitType",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  result = (long)(arg1)->getUnitType();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_readUnitType(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::readUnitType",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::readUnitType",1,"Condition_ObjectsInArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::readUnitType",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readUnitType",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readUnitType",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitType(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_unit_group__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::unit_group",1,"Condition_ObjectsInArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::unit_group",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_unit_group",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_group(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_unit_group__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::unit_group",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::unit_group",1,"Condition_ObjectsInArea *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::unit_group",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_unit_group",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->unit_group((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_unit_group(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_ObjectsInArea, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_ObjectsInArea_unit_group__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_ObjectsInArea, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_ObjectsInArea_unit_group__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_ObjectsInArea_unit_group'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition_ObjectsInArea::unit_group(int)\n"
    "    Condition_ObjectsInArea::unit_group(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_ObjectsInArea_getUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectsInArea::getUnitGroup",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::getUnitGroup",1,"Condition_ObjectsInArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_getUnitGroup",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  result = (long)(arg1)->getUnitGroup();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_readUnitGroup(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::readUnitGroup",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::readUnitGroup",1,"Condition_ObjectsInArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::readUnitGroup",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readUnitGroup",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readUnitGroup",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUnitGroup(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_area(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::area",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::area",1,"Condition_ObjectsInArea *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::area",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("Condition_ObjectsInArea::area",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("Condition_ObjectsInArea::area",4,"int");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("Condition_ObjectsInArea::area",5,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_area",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->area(arg2,arg3,arg4,arg5);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_getArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  AOKRECT result;
  
  SWIG_check_num_args("Condition_ObjectsInArea::getArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::getArea",1,"Condition_ObjectsInArea *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_getArea",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  result = (arg1)->getArea();
  {
    AOKRECT * resultptr = new AOKRECT((const AOKRECT &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_AOKRECT,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectsInArea_readArea(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectsInArea::readArea",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectsInArea::readArea",1,"Condition_ObjectsInArea *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectsInArea::readArea",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectsInArea,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readArea",1,SWIGTYPE_p_Condition_ObjectsInArea);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectsInArea_readArea",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readArea(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_ObjectsInArea(void *obj) {
Condition_ObjectsInArea *arg1 = (Condition_ObjectsInArea *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_ObjectsInArea_methods[] = {
    {"player", _wrap_Condition_ObjectsInArea_player}, 
    {"getPlayer", _wrap_Condition_ObjectsInArea_getPlayer}, 
    {"readPlayer", _wrap_Condition_ObjectsInArea_readPlayer}, 
    {"amount", _wrap_Condition_ObjectsInArea_amount}, 
    {"getAmount", _wrap_Condition_ObjectsInArea_getAmount}, 
    {"readAmount", _wrap_Condition_ObjectsInArea_readAmount}, 
    {"unit_const", _wrap_Condition_ObjectsInArea_unit_const}, 
    {"getUnitConst", _wrap_Condition_ObjectsInArea_getUnitConst}, 
    {"readUnitConst", _wrap_Condition_ObjectsInArea_readUnitConst}, 
    {"unit_type", _wrap_Condition_ObjectsInArea_unit_type}, 
    {"getUnitType", _wrap_Condition_ObjectsInArea_getUnitType}, 
    {"readUnitType", _wrap_Condition_ObjectsInArea_readUnitType}, 
    {"unit_group", _wrap_Condition_ObjectsInArea_unit_group}, 
    {"getUnitGroup", _wrap_Condition_ObjectsInArea_getUnitGroup}, 
    {"readUnitGroup", _wrap_Condition_ObjectsInArea_readUnitGroup}, 
    {"area", _wrap_Condition_ObjectsInArea_area}, 
    {"getArea", _wrap_Condition_ObjectsInArea_getArea}, 
    {"readArea", _wrap_Condition_ObjectsInArea_readArea}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_ObjectsInArea_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_ObjectsInArea_bases[] = {0,0};
static const char *swig_Condition_ObjectsInArea_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_ObjectsInArea = { "Condition_ObjectsInArea", &SWIGTYPE_p_Condition_ObjectsInArea,_wrap_new_Condition_ObjectsInArea, swig_delete_Condition_ObjectsInArea, swig_Condition_ObjectsInArea_methods, swig_Condition_ObjectsInArea_attributes, swig_Condition_ObjectsInArea_bases, swig_Condition_ObjectsInArea_base_names };

static int _wrap_new_Condition_DestroyObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DestroyObject *result = 0 ;
  
  SWIG_check_num_args("Condition_DestroyObject::Condition_DestroyObject",0,0)
  result = (Condition_DestroyObject *)new Condition_DestroyObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_DestroyObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_DestroyObject_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DestroyObject *arg1 = (Condition_DestroyObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_DestroyObject::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_DestroyObject::unit_object",1,"Condition_DestroyObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_DestroyObject::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_DestroyObject,0))){
    SWIG_fail_ptr("Condition_DestroyObject_unit_object",1,SWIGTYPE_p_Condition_DestroyObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_DestroyObject_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DestroyObject *arg1 = (Condition_DestroyObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_DestroyObject::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_DestroyObject::uid_object",1,"Condition_DestroyObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_DestroyObject::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_DestroyObject,0))){
    SWIG_fail_ptr("Condition_DestroyObject_uid_object",1,SWIGTYPE_p_Condition_DestroyObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_DestroyObject_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DestroyObject *arg1 = (Condition_DestroyObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_DestroyObject::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_DestroyObject::getUidObject",1,"Condition_DestroyObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_DestroyObject,0))){
    SWIG_fail_ptr("Condition_DestroyObject_getUidObject",1,SWIGTYPE_p_Condition_DestroyObject);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_DestroyObject_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DestroyObject *arg1 = (Condition_DestroyObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_DestroyObject::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_DestroyObject::readUidObject",1,"Condition_DestroyObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_DestroyObject::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_DestroyObject,0))){
    SWIG_fail_ptr("Condition_DestroyObject_readUidObject",1,SWIGTYPE_p_Condition_DestroyObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_DestroyObject_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_DestroyObject(void *obj) {
Condition_DestroyObject *arg1 = (Condition_DestroyObject *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_DestroyObject_methods[] = {
    {"unit_object", _wrap_Condition_DestroyObject_unit_object}, 
    {"uid_object", _wrap_Condition_DestroyObject_uid_object}, 
    {"getUidObject", _wrap_Condition_DestroyObject_getUidObject}, 
    {"readUidObject", _wrap_Condition_DestroyObject_readUidObject}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_DestroyObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_DestroyObject_bases[] = {0,0};
static const char *swig_Condition_DestroyObject_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_DestroyObject = { "Condition_DestroyObject", &SWIGTYPE_p_Condition_DestroyObject,_wrap_new_Condition_DestroyObject, swig_delete_Condition_DestroyObject, swig_Condition_DestroyObject_methods, swig_Condition_DestroyObject_attributes, swig_Condition_DestroyObject_bases, swig_Condition_DestroyObject_base_names };

static int _wrap_new_Condition_CaptureObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *result = 0 ;
  
  SWIG_check_num_args("Condition_CaptureObject::Condition_CaptureObject",0,0)
  result = (Condition_CaptureObject *)new Condition_CaptureObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_CaptureObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_CaptureObject_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *arg1 = (Condition_CaptureObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_CaptureObject::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_CaptureObject::unit_object",1,"Condition_CaptureObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_CaptureObject::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_CaptureObject,0))){
    SWIG_fail_ptr("Condition_CaptureObject_unit_object",1,SWIGTYPE_p_Condition_CaptureObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_CaptureObject_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *arg1 = (Condition_CaptureObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_CaptureObject::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_CaptureObject::uid_object",1,"Condition_CaptureObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_CaptureObject::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_CaptureObject,0))){
    SWIG_fail_ptr("Condition_CaptureObject_uid_object",1,SWIGTYPE_p_Condition_CaptureObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_CaptureObject_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *arg1 = (Condition_CaptureObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_CaptureObject::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_CaptureObject::getUidObject",1,"Condition_CaptureObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_CaptureObject,0))){
    SWIG_fail_ptr("Condition_CaptureObject_getUidObject",1,SWIGTYPE_p_Condition_CaptureObject);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_CaptureObject_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *arg1 = (Condition_CaptureObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_CaptureObject::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_CaptureObject::readUidObject",1,"Condition_CaptureObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_CaptureObject::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_CaptureObject,0))){
    SWIG_fail_ptr("Condition_CaptureObject_readUidObject",1,SWIGTYPE_p_Condition_CaptureObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_CaptureObject_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_CaptureObject_player(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *arg1 = (Condition_CaptureObject *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_CaptureObject::player",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_CaptureObject::player",1,"Condition_CaptureObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_CaptureObject::player",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_CaptureObject,0))){
    SWIG_fail_ptr("Condition_CaptureObject_player",1,SWIGTYPE_p_Condition_CaptureObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->player(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_CaptureObject_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *arg1 = (Condition_CaptureObject *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_CaptureObject::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_CaptureObject::getPlayer",1,"Condition_CaptureObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_CaptureObject,0))){
    SWIG_fail_ptr("Condition_CaptureObject_getPlayer",1,SWIGTYPE_p_Condition_CaptureObject);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_CaptureObject_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_CaptureObject *arg1 = (Condition_CaptureObject *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_CaptureObject::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_CaptureObject::readPlayer",1,"Condition_CaptureObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_CaptureObject::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_CaptureObject,0))){
    SWIG_fail_ptr("Condition_CaptureObject_readPlayer",1,SWIGTYPE_p_Condition_CaptureObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_CaptureObject_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_CaptureObject(void *obj) {
Condition_CaptureObject *arg1 = (Condition_CaptureObject *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_CaptureObject_methods[] = {
    {"unit_object", _wrap_Condition_CaptureObject_unit_object}, 
    {"uid_object", _wrap_Condition_CaptureObject_uid_object}, 
    {"getUidObject", _wrap_Condition_CaptureObject_getUidObject}, 
    {"readUidObject", _wrap_Condition_CaptureObject_readUidObject}, 
    {"player", _wrap_Condition_CaptureObject_player}, 
    {"getPlayer", _wrap_Condition_CaptureObject_getPlayer}, 
    {"readPlayer", _wrap_Condition_CaptureObject_readPlayer}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_CaptureObject_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_CaptureObject_bases[] = {0,0};
static const char *swig_Condition_CaptureObject_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_CaptureObject = { "Condition_CaptureObject", &SWIGTYPE_p_Condition_CaptureObject,_wrap_new_Condition_CaptureObject, swig_delete_Condition_CaptureObject, swig_Condition_CaptureObject_methods, swig_Condition_CaptureObject_attributes, swig_Condition_CaptureObject_bases, swig_Condition_CaptureObject_base_names };

static int _wrap_new_Condition_AccumulateAttribute(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *result = 0 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::Condition_AccumulateAttribute",0,0)
  result = (Condition_AccumulateAttribute *)new Condition_AccumulateAttribute();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_AccumulateAttribute,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_player(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::player",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::player",1,"Condition_AccumulateAttribute *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_AccumulateAttribute::player",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_player",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->player(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::getPlayer",1,"Condition_AccumulateAttribute *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_getPlayer",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::readPlayer",1,"Condition_AccumulateAttribute *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_AccumulateAttribute::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_readPlayer",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_resource__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::resource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::resource",1,"Condition_AccumulateAttribute *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_AccumulateAttribute::resource",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_resource",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->resource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_resource__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::resource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::resource",1,"Condition_AccumulateAttribute *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("Condition_AccumulateAttribute::resource",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_resource",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->resource((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_resource(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_AccumulateAttribute, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_AccumulateAttribute_resource__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_Condition_AccumulateAttribute, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_Condition_AccumulateAttribute_resource__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'Condition_AccumulateAttribute_resource'\n"
    "  Possible C/C++ prototypes are:\n"
    "    Condition_AccumulateAttribute::resource(int)\n"
    "    Condition_AccumulateAttribute::resource(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_Condition_AccumulateAttribute_getResource(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::getResource",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::getResource",1,"Condition_AccumulateAttribute *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_getResource",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  result = (long)(arg1)->getResource();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_readResource(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::readResource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::readResource",1,"Condition_AccumulateAttribute *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_AccumulateAttribute::readResource",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_readResource",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_readResource",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readResource(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_amount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::amount",1,"Condition_AccumulateAttribute *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_AccumulateAttribute::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_amount",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_getAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::getAmount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::getAmount",1,"Condition_AccumulateAttribute *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_getAmount",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  result = (long)(arg1)->getAmount();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AccumulateAttribute_readAmount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_AccumulateAttribute::readAmount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AccumulateAttribute::readAmount",1,"Condition_AccumulateAttribute *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_AccumulateAttribute::readAmount",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AccumulateAttribute,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_readAmount",1,SWIGTYPE_p_Condition_AccumulateAttribute);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_AccumulateAttribute_readAmount",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAmount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_AccumulateAttribute(void *obj) {
Condition_AccumulateAttribute *arg1 = (Condition_AccumulateAttribute *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_AccumulateAttribute_methods[] = {
    {"player", _wrap_Condition_AccumulateAttribute_player}, 
    {"getPlayer", _wrap_Condition_AccumulateAttribute_getPlayer}, 
    {"readPlayer", _wrap_Condition_AccumulateAttribute_readPlayer}, 
    {"resource", _wrap_Condition_AccumulateAttribute_resource}, 
    {"getResource", _wrap_Condition_AccumulateAttribute_getResource}, 
    {"readResource", _wrap_Condition_AccumulateAttribute_readResource}, 
    {"amount", _wrap_Condition_AccumulateAttribute_amount}, 
    {"getAmount", _wrap_Condition_AccumulateAttribute_getAmount}, 
    {"readAmount", _wrap_Condition_AccumulateAttribute_readAmount}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_AccumulateAttribute_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_AccumulateAttribute_bases[] = {0,0};
static const char *swig_Condition_AccumulateAttribute_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_AccumulateAttribute = { "Condition_AccumulateAttribute", &SWIGTYPE_p_Condition_AccumulateAttribute,_wrap_new_Condition_AccumulateAttribute, swig_delete_Condition_AccumulateAttribute, swig_Condition_AccumulateAttribute_methods, swig_Condition_AccumulateAttribute_attributes, swig_Condition_AccumulateAttribute_bases, swig_Condition_AccumulateAttribute_base_names };

static int _wrap_new_Condition_ResearchTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *result = 0 ;
  
  SWIG_check_num_args("Condition_ResearchTechnology::Condition_ResearchTechnology",0,0)
  result = (Condition_ResearchTechnology *)new Condition_ResearchTechnology();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ResearchTechnology,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchTechnology_player(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ResearchTechnology::player",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchTechnology::player",1,"Condition_ResearchTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ResearchTechnology::player",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_player",1,SWIGTYPE_p_Condition_ResearchTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->player(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchTechnology_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ResearchTechnology::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchTechnology::getPlayer",1,"Condition_ResearchTechnology *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_getPlayer",1,SWIGTYPE_p_Condition_ResearchTechnology);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchTechnology_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ResearchTechnology::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchTechnology::readPlayer",1,"Condition_ResearchTechnology *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ResearchTechnology::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_readPlayer",1,SWIGTYPE_p_Condition_ResearchTechnology);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchTechnology_technology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ResearchTechnology::technology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchTechnology::technology",1,"Condition_ResearchTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ResearchTechnology::technology",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_technology",1,SWIGTYPE_p_Condition_ResearchTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->technology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchTechnology_tech(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ResearchTechnology::tech",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchTechnology::tech",1,"Condition_ResearchTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ResearchTechnology::tech",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_tech",1,SWIGTYPE_p_Condition_ResearchTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->tech(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchTechnology_getTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ResearchTechnology::getTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchTechnology::getTechnology",1,"Condition_ResearchTechnology *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_getTechnology",1,SWIGTYPE_p_Condition_ResearchTechnology);
  }
  
  result = (long)(arg1)->getTechnology();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchTechnology_readTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ResearchTechnology::readTechnology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchTechnology::readTechnology",1,"Condition_ResearchTechnology *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ResearchTechnology::readTechnology",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_readTechnology",1,SWIGTYPE_p_Condition_ResearchTechnology);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ResearchTechnology_readTechnology",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTechnology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_ResearchTechnology(void *obj) {
Condition_ResearchTechnology *arg1 = (Condition_ResearchTechnology *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_ResearchTechnology_methods[] = {
    {"player", _wrap_Condition_ResearchTechnology_player}, 
    {"getPlayer", _wrap_Condition_ResearchTechnology_getPlayer}, 
    {"readPlayer", _wrap_Condition_ResearchTechnology_readPlayer}, 
    {"technology", _wrap_Condition_ResearchTechnology_technology}, 
    {"tech", _wrap_Condition_ResearchTechnology_tech}, 
    {"getTechnology", _wrap_Condition_ResearchTechnology_getTechnology}, 
    {"readTechnology", _wrap_Condition_ResearchTechnology_readTechnology}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_ResearchTechnology_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_ResearchTechnology_bases[] = {0,0};
static const char *swig_Condition_ResearchTechnology_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_ResearchTechnology = { "Condition_ResearchTechnology", &SWIGTYPE_p_Condition_ResearchTechnology,_wrap_new_Condition_ResearchTechnology, swig_delete_Condition_ResearchTechnology, swig_Condition_ResearchTechnology_methods, swig_Condition_ResearchTechnology_attributes, swig_Condition_ResearchTechnology_bases, swig_Condition_ResearchTechnology_base_names };

static int _wrap_new_Condition_Timer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_Timer *result = 0 ;
  
  SWIG_check_num_args("Condition_Timer::Condition_Timer",0,0)
  result = (Condition_Timer *)new Condition_Timer();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_Timer,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_Timer_time(lua_State* L) {
  int SWIG_arg = 0;
  Condition_Timer *arg1 = (Condition_Timer *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_Timer::time",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_Timer::time",1,"Condition_Timer *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_Timer::time",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_Timer,0))){
    SWIG_fail_ptr("Condition_Timer_time",1,SWIGTYPE_p_Condition_Timer);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->time(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_Timer_amount(lua_State* L) {
  int SWIG_arg = 0;
  Condition_Timer *arg1 = (Condition_Timer *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_Timer::amount",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_Timer::amount",1,"Condition_Timer *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_Timer::amount",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_Timer,0))){
    SWIG_fail_ptr("Condition_Timer_amount",1,SWIGTYPE_p_Condition_Timer);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->amount(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_Timer_getTimer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_Timer *arg1 = (Condition_Timer *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_Timer::getTimer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_Timer::getTimer",1,"Condition_Timer *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_Timer,0))){
    SWIG_fail_ptr("Condition_Timer_getTimer",1,SWIGTYPE_p_Condition_Timer);
  }
  
  result = (long)(arg1)->getTimer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_Timer_readTimer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_Timer *arg1 = (Condition_Timer *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_Timer::readTimer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_Timer::readTimer",1,"Condition_Timer *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_Timer::readTimer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_Timer,0))){
    SWIG_fail_ptr("Condition_Timer_readTimer",1,SWIGTYPE_p_Condition_Timer);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_Timer_readTimer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTimer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_Timer(void *obj) {
Condition_Timer *arg1 = (Condition_Timer *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_Timer_methods[] = {
    {"time", _wrap_Condition_Timer_time}, 
    {"amount", _wrap_Condition_Timer_amount}, 
    {"getTimer", _wrap_Condition_Timer_getTimer}, 
    {"readTimer", _wrap_Condition_Timer_readTimer}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_Timer_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_Timer_bases[] = {0,0};
static const char *swig_Condition_Timer_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_Timer = { "Condition_Timer", &SWIGTYPE_p_Condition_Timer,_wrap_new_Condition_Timer, swig_delete_Condition_Timer, swig_Condition_Timer_methods, swig_Condition_Timer_attributes, swig_Condition_Timer_bases, swig_Condition_Timer_base_names };

static int _wrap_new_Condition_ObjectSelected(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectSelected *result = 0 ;
  
  SWIG_check_num_args("Condition_ObjectSelected::Condition_ObjectSelected",0,0)
  result = (Condition_ObjectSelected *)new Condition_ObjectSelected();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectSelected,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectSelected_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectSelected *arg1 = (Condition_ObjectSelected *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectSelected::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectSelected::unit_object",1,"Condition_ObjectSelected *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectSelected::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectSelected,0))){
    SWIG_fail_ptr("Condition_ObjectSelected_unit_object",1,SWIGTYPE_p_Condition_ObjectSelected);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectSelected_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectSelected *arg1 = (Condition_ObjectSelected *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectSelected::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectSelected::uid_object",1,"Condition_ObjectSelected *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectSelected::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectSelected,0))){
    SWIG_fail_ptr("Condition_ObjectSelected_uid_object",1,SWIGTYPE_p_Condition_ObjectSelected);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectSelected_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectSelected *arg1 = (Condition_ObjectSelected *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectSelected::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectSelected::getUidObject",1,"Condition_ObjectSelected *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectSelected,0))){
    SWIG_fail_ptr("Condition_ObjectSelected_getUidObject",1,SWIGTYPE_p_Condition_ObjectSelected);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectSelected_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectSelected *arg1 = (Condition_ObjectSelected *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectSelected::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectSelected::readUidObject",1,"Condition_ObjectSelected *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectSelected::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectSelected,0))){
    SWIG_fail_ptr("Condition_ObjectSelected_readUidObject",1,SWIGTYPE_p_Condition_ObjectSelected);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectSelected_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_ObjectSelected(void *obj) {
Condition_ObjectSelected *arg1 = (Condition_ObjectSelected *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_ObjectSelected_methods[] = {
    {"unit_object", _wrap_Condition_ObjectSelected_unit_object}, 
    {"uid_object", _wrap_Condition_ObjectSelected_uid_object}, 
    {"getUidObject", _wrap_Condition_ObjectSelected_getUidObject}, 
    {"readUidObject", _wrap_Condition_ObjectSelected_readUidObject}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_ObjectSelected_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_ObjectSelected_bases[] = {0,0};
static const char *swig_Condition_ObjectSelected_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_ObjectSelected = { "Condition_ObjectSelected", &SWIGTYPE_p_Condition_ObjectSelected,_wrap_new_Condition_ObjectSelected, swig_delete_Condition_ObjectSelected, swig_Condition_ObjectSelected_methods, swig_Condition_ObjectSelected_attributes, swig_Condition_ObjectSelected_bases, swig_Condition_ObjectSelected_base_names };

static int _wrap_new_Condition_AISignal(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AISignal *result = 0 ;
  
  SWIG_check_num_args("Condition_AISignal::Condition_AISignal",0,0)
  result = (Condition_AISignal *)new Condition_AISignal();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_AISignal,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AISignal_ai_signal(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AISignal *arg1 = (Condition_AISignal *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_AISignal::ai_signal",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AISignal::ai_signal",1,"Condition_AISignal *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_AISignal::ai_signal",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AISignal,0))){
    SWIG_fail_ptr("Condition_AISignal_ai_signal",1,SWIGTYPE_p_Condition_AISignal);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ai_signal(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AISignal_getAiSignal(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AISignal *arg1 = (Condition_AISignal *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_AISignal::getAiSignal",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AISignal::getAiSignal",1,"Condition_AISignal *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AISignal,0))){
    SWIG_fail_ptr("Condition_AISignal_getAiSignal",1,SWIGTYPE_p_Condition_AISignal);
  }
  
  result = (long)(arg1)->getAiSignal();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_AISignal_readAiSignal(lua_State* L) {
  int SWIG_arg = 0;
  Condition_AISignal *arg1 = (Condition_AISignal *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_AISignal::readAiSignal",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_AISignal::readAiSignal",1,"Condition_AISignal *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_AISignal::readAiSignal",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_AISignal,0))){
    SWIG_fail_ptr("Condition_AISignal_readAiSignal",1,SWIGTYPE_p_Condition_AISignal);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_AISignal_readAiSignal",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readAiSignal(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_AISignal(void *obj) {
Condition_AISignal *arg1 = (Condition_AISignal *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_AISignal_methods[] = {
    {"ai_signal", _wrap_Condition_AISignal_ai_signal}, 
    {"getAiSignal", _wrap_Condition_AISignal_getAiSignal}, 
    {"readAiSignal", _wrap_Condition_AISignal_readAiSignal}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_AISignal_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_AISignal_bases[] = {0,0};
static const char *swig_Condition_AISignal_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_AISignal = { "Condition_AISignal", &SWIGTYPE_p_Condition_AISignal,_wrap_new_Condition_AISignal, swig_delete_Condition_AISignal, swig_Condition_AISignal_methods, swig_Condition_AISignal_attributes, swig_Condition_AISignal_bases, swig_Condition_AISignal_base_names };

static int _wrap_new_Condition_PlayerDefeated(lua_State* L) {
  int SWIG_arg = 0;
  Condition_PlayerDefeated *result = 0 ;
  
  SWIG_check_num_args("Condition_PlayerDefeated::Condition_PlayerDefeated",0,0)
  result = (Condition_PlayerDefeated *)new Condition_PlayerDefeated();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_PlayerDefeated,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_PlayerDefeated_player(lua_State* L) {
  int SWIG_arg = 0;
  Condition_PlayerDefeated *arg1 = (Condition_PlayerDefeated *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_PlayerDefeated::player",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_PlayerDefeated::player",1,"Condition_PlayerDefeated *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_PlayerDefeated::player",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_PlayerDefeated,0))){
    SWIG_fail_ptr("Condition_PlayerDefeated_player",1,SWIGTYPE_p_Condition_PlayerDefeated);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->player(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_PlayerDefeated_getPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_PlayerDefeated *arg1 = (Condition_PlayerDefeated *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_PlayerDefeated::getPlayer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_PlayerDefeated::getPlayer",1,"Condition_PlayerDefeated *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_PlayerDefeated,0))){
    SWIG_fail_ptr("Condition_PlayerDefeated_getPlayer",1,SWIGTYPE_p_Condition_PlayerDefeated);
  }
  
  result = (long)(arg1)->getPlayer();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_PlayerDefeated_readPlayer(lua_State* L) {
  int SWIG_arg = 0;
  Condition_PlayerDefeated *arg1 = (Condition_PlayerDefeated *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_PlayerDefeated::readPlayer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_PlayerDefeated::readPlayer",1,"Condition_PlayerDefeated *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_PlayerDefeated::readPlayer",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_PlayerDefeated,0))){
    SWIG_fail_ptr("Condition_PlayerDefeated_readPlayer",1,SWIGTYPE_p_Condition_PlayerDefeated);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_PlayerDefeated_readPlayer",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readPlayer(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_PlayerDefeated(void *obj) {
Condition_PlayerDefeated *arg1 = (Condition_PlayerDefeated *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_PlayerDefeated_methods[] = {
    {"player", _wrap_Condition_PlayerDefeated_player}, 
    {"getPlayer", _wrap_Condition_PlayerDefeated_getPlayer}, 
    {"readPlayer", _wrap_Condition_PlayerDefeated_readPlayer}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_PlayerDefeated_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_PlayerDefeated_bases[] = {0,0};
static const char *swig_Condition_PlayerDefeated_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_PlayerDefeated = { "Condition_PlayerDefeated", &SWIGTYPE_p_Condition_PlayerDefeated,_wrap_new_Condition_PlayerDefeated, swig_delete_Condition_PlayerDefeated, swig_Condition_PlayerDefeated_methods, swig_Condition_PlayerDefeated_attributes, swig_Condition_PlayerDefeated_bases, swig_Condition_PlayerDefeated_base_names };

static int _wrap_new_Condition_ObjectHasTarget(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *result = 0 ;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::Condition_ObjectHasTarget",0,0)
  result = (Condition_ObjectHasTarget *)new Condition_ObjectHasTarget();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectHasTarget,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::unit_object",1,"Condition_ObjectHasTarget *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectHasTarget::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_unit_object",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::uid_object",1,"Condition_ObjectHasTarget *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectHasTarget::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_uid_object",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::getUidObject",1,"Condition_ObjectHasTarget *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_getUidObject",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::readUidObject",1,"Condition_ObjectHasTarget *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectHasTarget::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_readUidObject",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_unit_location(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::unit_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::unit_location",1,"Condition_ObjectHasTarget *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectHasTarget::unit_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_unit_location",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_uid_location(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::uid_location",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::uid_location",1,"Condition_ObjectHasTarget *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectHasTarget::uid_location",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_uid_location",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_location(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_getUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::getUidLocation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::getUidLocation",1,"Condition_ObjectHasTarget *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_getUidLocation",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  result = (long)(arg1)->getUidLocation();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectHasTarget_readUidLocation(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectHasTarget::readUidLocation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectHasTarget::readUidLocation",1,"Condition_ObjectHasTarget *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectHasTarget::readUidLocation",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectHasTarget,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_readUidLocation",1,SWIGTYPE_p_Condition_ObjectHasTarget);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectHasTarget_readUidLocation",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidLocation(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_ObjectHasTarget(void *obj) {
Condition_ObjectHasTarget *arg1 = (Condition_ObjectHasTarget *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_ObjectHasTarget_methods[] = {
    {"unit_object", _wrap_Condition_ObjectHasTarget_unit_object}, 
    {"uid_object", _wrap_Condition_ObjectHasTarget_uid_object}, 
    {"getUidObject", _wrap_Condition_ObjectHasTarget_getUidObject}, 
    {"readUidObject", _wrap_Condition_ObjectHasTarget_readUidObject}, 
    {"unit_location", _wrap_Condition_ObjectHasTarget_unit_location}, 
    {"uid_location", _wrap_Condition_ObjectHasTarget_uid_location}, 
    {"getUidLocation", _wrap_Condition_ObjectHasTarget_getUidLocation}, 
    {"readUidLocation", _wrap_Condition_ObjectHasTarget_readUidLocation}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_ObjectHasTarget_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_ObjectHasTarget_bases[] = {0,0};
static const char *swig_Condition_ObjectHasTarget_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_ObjectHasTarget = { "Condition_ObjectHasTarget", &SWIGTYPE_p_Condition_ObjectHasTarget,_wrap_new_Condition_ObjectHasTarget, swig_delete_Condition_ObjectHasTarget, swig_Condition_ObjectHasTarget_methods, swig_Condition_ObjectHasTarget_attributes, swig_Condition_ObjectHasTarget_bases, swig_Condition_ObjectHasTarget_base_names };

static int _wrap_new_Condition_ObjectVisible(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectVisible *result = 0 ;
  
  SWIG_check_num_args("Condition_ObjectVisible::Condition_ObjectVisible",0,0)
  result = (Condition_ObjectVisible *)new Condition_ObjectVisible();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectVisible,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectVisible_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectVisible *arg1 = (Condition_ObjectVisible *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectVisible::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectVisible::unit_object",1,"Condition_ObjectVisible *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectVisible::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectVisible,0))){
    SWIG_fail_ptr("Condition_ObjectVisible_unit_object",1,SWIGTYPE_p_Condition_ObjectVisible);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectVisible_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectVisible *arg1 = (Condition_ObjectVisible *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectVisible::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectVisible::uid_object",1,"Condition_ObjectVisible *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectVisible::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectVisible,0))){
    SWIG_fail_ptr("Condition_ObjectVisible_uid_object",1,SWIGTYPE_p_Condition_ObjectVisible);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectVisible_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectVisible *arg1 = (Condition_ObjectVisible *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectVisible::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectVisible::getUidObject",1,"Condition_ObjectVisible *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectVisible,0))){
    SWIG_fail_ptr("Condition_ObjectVisible_getUidObject",1,SWIGTYPE_p_Condition_ObjectVisible);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectVisible_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectVisible *arg1 = (Condition_ObjectVisible *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectVisible::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectVisible::readUidObject",1,"Condition_ObjectVisible *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectVisible::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectVisible,0))){
    SWIG_fail_ptr("Condition_ObjectVisible_readUidObject",1,SWIGTYPE_p_Condition_ObjectVisible);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectVisible_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_ObjectVisible(void *obj) {
Condition_ObjectVisible *arg1 = (Condition_ObjectVisible *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_ObjectVisible_methods[] = {
    {"unit_object", _wrap_Condition_ObjectVisible_unit_object}, 
    {"uid_object", _wrap_Condition_ObjectVisible_uid_object}, 
    {"getUidObject", _wrap_Condition_ObjectVisible_getUidObject}, 
    {"readUidObject", _wrap_Condition_ObjectVisible_readUidObject}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_ObjectVisible_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_ObjectVisible_bases[] = {0,0};
static const char *swig_Condition_ObjectVisible_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_ObjectVisible = { "Condition_ObjectVisible", &SWIGTYPE_p_Condition_ObjectVisible,_wrap_new_Condition_ObjectVisible, swig_delete_Condition_ObjectVisible, swig_Condition_ObjectVisible_methods, swig_Condition_ObjectVisible_attributes, swig_Condition_ObjectVisible_bases, swig_Condition_ObjectVisible_base_names };

static int _wrap_new_Condition_ObjectNotVisible(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectNotVisible *result = 0 ;
  
  SWIG_check_num_args("Condition_ObjectNotVisible::Condition_ObjectNotVisible",0,0)
  result = (Condition_ObjectNotVisible *)new Condition_ObjectNotVisible();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectNotVisible,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectNotVisible_unit_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectNotVisible *arg1 = (Condition_ObjectNotVisible *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectNotVisible::unit_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectNotVisible::unit_object",1,"Condition_ObjectNotVisible *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectNotVisible::unit_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectNotVisible,0))){
    SWIG_fail_ptr("Condition_ObjectNotVisible_unit_object",1,SWIGTYPE_p_Condition_ObjectNotVisible);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->unit_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectNotVisible_uid_object(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectNotVisible *arg1 = (Condition_ObjectNotVisible *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ObjectNotVisible::uid_object",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectNotVisible::uid_object",1,"Condition_ObjectNotVisible *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ObjectNotVisible::uid_object",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectNotVisible,0))){
    SWIG_fail_ptr("Condition_ObjectNotVisible_uid_object",1,SWIGTYPE_p_Condition_ObjectNotVisible);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->uid_object(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectNotVisible_getUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectNotVisible *arg1 = (Condition_ObjectNotVisible *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ObjectNotVisible::getUidObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectNotVisible::getUidObject",1,"Condition_ObjectNotVisible *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectNotVisible,0))){
    SWIG_fail_ptr("Condition_ObjectNotVisible_getUidObject",1,SWIGTYPE_p_Condition_ObjectNotVisible);
  }
  
  result = (long)(arg1)->getUidObject();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ObjectNotVisible_readUidObject(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ObjectNotVisible *arg1 = (Condition_ObjectNotVisible *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ObjectNotVisible::readUidObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ObjectNotVisible::readUidObject",1,"Condition_ObjectNotVisible *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ObjectNotVisible::readUidObject",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ObjectNotVisible,0))){
    SWIG_fail_ptr("Condition_ObjectNotVisible_readUidObject",1,SWIGTYPE_p_Condition_ObjectNotVisible);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ObjectNotVisible_readUidObject",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readUidObject(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_ObjectNotVisible(void *obj) {
Condition_ObjectNotVisible *arg1 = (Condition_ObjectNotVisible *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_ObjectNotVisible_methods[] = {
    {"unit_object", _wrap_Condition_ObjectNotVisible_unit_object}, 
    {"uid_object", _wrap_Condition_ObjectNotVisible_uid_object}, 
    {"getUidObject", _wrap_Condition_ObjectNotVisible_getUidObject}, 
    {"readUidObject", _wrap_Condition_ObjectNotVisible_readUidObject}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_ObjectNotVisible_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_ObjectNotVisible_bases[] = {0,0};
static const char *swig_Condition_ObjectNotVisible_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_ObjectNotVisible = { "Condition_ObjectNotVisible", &SWIGTYPE_p_Condition_ObjectNotVisible,_wrap_new_Condition_ObjectNotVisible, swig_delete_Condition_ObjectNotVisible, swig_Condition_ObjectNotVisible_methods, swig_Condition_ObjectNotVisible_attributes, swig_Condition_ObjectNotVisible_bases, swig_Condition_ObjectNotVisible_base_names };

static int _wrap_new_Condition_ResearchingTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchingTechnology *result = 0 ;
  
  SWIG_check_num_args("Condition_ResearchingTechnology::Condition_ResearchingTechnology",0,0)
  result = (Condition_ResearchingTechnology *)new Condition_ResearchingTechnology();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ResearchingTechnology,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchingTechnology_technology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchingTechnology *arg1 = (Condition_ResearchingTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ResearchingTechnology::technology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchingTechnology::technology",1,"Condition_ResearchingTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ResearchingTechnology::technology",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchingTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchingTechnology_technology",1,SWIGTYPE_p_Condition_ResearchingTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->technology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchingTechnology_tech(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchingTechnology *arg1 = (Condition_ResearchingTechnology *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("Condition_ResearchingTechnology::tech",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchingTechnology::tech",1,"Condition_ResearchingTechnology *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("Condition_ResearchingTechnology::tech",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchingTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchingTechnology_tech",1,SWIGTYPE_p_Condition_ResearchingTechnology);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->tech(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchingTechnology_getTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchingTechnology *arg1 = (Condition_ResearchingTechnology *) 0 ;
  long result;
  
  SWIG_check_num_args("Condition_ResearchingTechnology::getTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchingTechnology::getTechnology",1,"Condition_ResearchingTechnology *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchingTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchingTechnology_getTechnology",1,SWIGTYPE_p_Condition_ResearchingTechnology);
  }
  
  result = (long)(arg1)->getTechnology();
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_ResearchingTechnology_readTechnology(lua_State* L) {
  int SWIG_arg = 0;
  Condition_ResearchingTechnology *arg1 = (Condition_ResearchingTechnology *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  
  SWIG_check_num_args("Condition_ResearchingTechnology::readTechnology",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_ResearchingTechnology::readTechnology",1,"Condition_ResearchingTechnology *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("Condition_ResearchingTechnology::readTechnology",2,"FILE *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_ResearchingTechnology,0))){
    SWIG_fail_ptr("Condition_ResearchingTechnology_readTechnology",1,SWIGTYPE_p_Condition_ResearchingTechnology);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_FILE,0))){
    SWIG_fail_ptr("Condition_ResearchingTechnology_readTechnology",2,SWIGTYPE_p_FILE);
  }
  
  (arg1)->readTechnology(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_ResearchingTechnology(void *obj) {
Condition_ResearchingTechnology *arg1 = (Condition_ResearchingTechnology *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_ResearchingTechnology_methods[] = {
    {"technology", _wrap_Condition_ResearchingTechnology_technology}, 
    {"tech", _wrap_Condition_ResearchingTechnology_tech}, 
    {"getTechnology", _wrap_Condition_ResearchingTechnology_getTechnology}, 
    {"readTechnology", _wrap_Condition_ResearchingTechnology_readTechnology}, 
    {0,0}
};
static swig_lua_attribute swig_Condition_ResearchingTechnology_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_Condition_ResearchingTechnology_bases[] = {0,0};
static const char *swig_Condition_ResearchingTechnology_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_ResearchingTechnology = { "Condition_ResearchingTechnology", &SWIGTYPE_p_Condition_ResearchingTechnology,_wrap_new_Condition_ResearchingTechnology, swig_delete_Condition_ResearchingTechnology, swig_Condition_ResearchingTechnology_methods, swig_Condition_ResearchingTechnology_attributes, swig_Condition_ResearchingTechnology_bases, swig_Condition_ResearchingTechnology_base_names };

static int _wrap_new_Condition_UnitsGarrisoned(lua_State* L) {
  int SWIG_arg = 0;
  Condition_UnitsGarrisoned *result = 0 ;
  
  SWIG_check_num_args("Condition_UnitsGarrisoned::Condition_UnitsGarrisoned",0,0)
  result = (Condition_UnitsGarrisoned *)new Condition_UnitsGarrisoned();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_UnitsGarrisoned,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_UnitsGarrisoned_uid_obj_set(lua_State* L) {
  int SWIG_arg = 0;
  Condition_UnitsGarrisoned *arg1 = (Condition_UnitsGarrisoned *) 0 ;
  eclong arg2 ;
  eclong *argp2 ;
  
  SWIG_check_num_args("Condition_UnitsGarrisoned::uid_obj",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_UnitsGarrisoned::uid_obj",1,"Condition_UnitsGarrisoned *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("Condition_UnitsGarrisoned::uid_obj",2,"eclong");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_UnitsGarrisoned,0))){
    SWIG_fail_ptr("Condition_UnitsGarrisoned_uid_obj_set",1,SWIGTYPE_p_Condition_UnitsGarrisoned);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_eclong,0))){
    SWIG_fail_ptr("Condition_UnitsGarrisoned_uid_obj_set",2,SWIGTYPE_p_eclong);
  }
  arg2 = *argp2;
  
  if (arg1) (arg1)->uid_obj = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_UnitsGarrisoned_uid_obj_get(lua_State* L) {
  int SWIG_arg = 0;
  Condition_UnitsGarrisoned *arg1 = (Condition_UnitsGarrisoned *) 0 ;
  eclong result;
  
  SWIG_check_num_args("Condition_UnitsGarrisoned::uid_obj",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_UnitsGarrisoned::uid_obj",1,"Condition_UnitsGarrisoned *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_UnitsGarrisoned,0))){
    SWIG_fail_ptr("Condition_UnitsGarrisoned_uid_obj_get",1,SWIGTYPE_p_Condition_UnitsGarrisoned);
  }
  
  result =  ((arg1)->uid_obj);
  {
    eclong * resultptr = new eclong((const eclong &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_eclong,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_UnitsGarrisoned_amt_set(lua_State* L) {
  int SWIG_arg = 0;
  Condition_UnitsGarrisoned *arg1 = (Condition_UnitsGarrisoned *) 0 ;
  eclong arg2 ;
  eclong *argp2 ;
  
  SWIG_check_num_args("Condition_UnitsGarrisoned::amt",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_UnitsGarrisoned::amt",1,"Condition_UnitsGarrisoned *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("Condition_UnitsGarrisoned::amt",2,"eclong");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_UnitsGarrisoned,0))){
    SWIG_fail_ptr("Condition_UnitsGarrisoned_amt_set",1,SWIGTYPE_p_Condition_UnitsGarrisoned);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_eclong,0))){
    SWIG_fail_ptr("Condition_UnitsGarrisoned_amt_set",2,SWIGTYPE_p_eclong);
  }
  arg2 = *argp2;
  
  if (arg1) (arg1)->amt = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_UnitsGarrisoned_amt_get(lua_State* L) {
  int SWIG_arg = 0;
  Condition_UnitsGarrisoned *arg1 = (Condition_UnitsGarrisoned *) 0 ;
  eclong result;
  
  SWIG_check_num_args("Condition_UnitsGarrisoned::amt",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_UnitsGarrisoned::amt",1,"Condition_UnitsGarrisoned *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_UnitsGarrisoned,0))){
    SWIG_fail_ptr("Condition_UnitsGarrisoned_amt_get",1,SWIGTYPE_p_Condition_UnitsGarrisoned);
  }
  
  result =  ((arg1)->amt);
  {
    eclong * resultptr = new eclong((const eclong &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_eclong,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_UnitsGarrisoned(void *obj) {
Condition_UnitsGarrisoned *arg1 = (Condition_UnitsGarrisoned *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_UnitsGarrisoned_methods[] = {
    {0,0}
};
static swig_lua_attribute swig_Condition_UnitsGarrisoned_attributes[] = {
    { "uid_obj", _wrap_Condition_UnitsGarrisoned_uid_obj_get, _wrap_Condition_UnitsGarrisoned_uid_obj_set},
    { "amt", _wrap_Condition_UnitsGarrisoned_amt_get, _wrap_Condition_UnitsGarrisoned_amt_set},
    {0,0,0}
};
static swig_lua_class *swig_Condition_UnitsGarrisoned_bases[] = {0,0};
static const char *swig_Condition_UnitsGarrisoned_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_UnitsGarrisoned = { "Condition_UnitsGarrisoned", &SWIGTYPE_p_Condition_UnitsGarrisoned,_wrap_new_Condition_UnitsGarrisoned, swig_delete_Condition_UnitsGarrisoned, swig_Condition_UnitsGarrisoned_methods, swig_Condition_UnitsGarrisoned_attributes, swig_Condition_UnitsGarrisoned_bases, swig_Condition_UnitsGarrisoned_base_names };

static int _wrap_new_Condition_DifficultyLevel(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DifficultyLevel *result = 0 ;
  
  SWIG_check_num_args("Condition_DifficultyLevel::Condition_DifficultyLevel",0,0)
  result = (Condition_DifficultyLevel *)new Condition_DifficultyLevel();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_DifficultyLevel,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_DifficultyLevel_amt_set(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DifficultyLevel *arg1 = (Condition_DifficultyLevel *) 0 ;
  eclong arg2 ;
  eclong *argp2 ;
  
  SWIG_check_num_args("Condition_DifficultyLevel::amt",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_DifficultyLevel::amt",1,"Condition_DifficultyLevel *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("Condition_DifficultyLevel::amt",2,"eclong");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_DifficultyLevel,0))){
    SWIG_fail_ptr("Condition_DifficultyLevel_amt_set",1,SWIGTYPE_p_Condition_DifficultyLevel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_eclong,0))){
    SWIG_fail_ptr("Condition_DifficultyLevel_amt_set",2,SWIGTYPE_p_eclong);
  }
  arg2 = *argp2;
  
  if (arg1) (arg1)->amt = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Condition_DifficultyLevel_amt_get(lua_State* L) {
  int SWIG_arg = 0;
  Condition_DifficultyLevel *arg1 = (Condition_DifficultyLevel *) 0 ;
  eclong result;
  
  SWIG_check_num_args("Condition_DifficultyLevel::amt",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("Condition_DifficultyLevel::amt",1,"Condition_DifficultyLevel *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_Condition_DifficultyLevel,0))){
    SWIG_fail_ptr("Condition_DifficultyLevel_amt_get",1,SWIGTYPE_p_Condition_DifficultyLevel);
  }
  
  result =  ((arg1)->amt);
  {
    eclong * resultptr = new eclong((const eclong &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_eclong,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_Condition_DifficultyLevel(void *obj) {
Condition_DifficultyLevel *arg1 = (Condition_DifficultyLevel *) obj;
delete arg1;
}
static swig_lua_method swig_Condition_DifficultyLevel_methods[] = {
    {0,0}
};
static swig_lua_attribute swig_Condition_DifficultyLevel_attributes[] = {
    { "amt", _wrap_Condition_DifficultyLevel_amt_get, _wrap_Condition_DifficultyLevel_amt_set},
    {0,0,0}
};
static swig_lua_class *swig_Condition_DifficultyLevel_bases[] = {0,0};
static const char *swig_Condition_DifficultyLevel_base_names[] = {"Condition *",0};
static swig_lua_class _wrap_class_Condition_DifficultyLevel = { "Condition_DifficultyLevel", &SWIGTYPE_p_Condition_DifficultyLevel,_wrap_new_Condition_DifficultyLevel, swig_delete_Condition_DifficultyLevel, swig_Condition_DifficultyLevel_methods, swig_Condition_DifficultyLevel_attributes, swig_Condition_DifficultyLevel_bases, swig_Condition_DifficultyLevel_base_names };

static int _wrap_new_NewTrigger__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  NewTrigger *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::NewTrigger",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("NewTrigger::NewTrigger",1,"int");
  arg1 = (int)lua_tonumber(L, 1);
  try {
    result = (NewTrigger *)new NewTrigger(arg1);
  }
  catch(char *_e) {
    lua_pushstring(L,_e);SWIG_fail;
  }
  
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_NewTrigger,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_NewTrigger__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::NewTrigger",0,0)
  try {
    result = (NewTrigger *)new NewTrigger();
  }
  catch(char *_e) {
    lua_pushstring(L,_e);SWIG_fail;
  }
  
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_NewTrigger,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_NewTrigger(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_NewTrigger__SWIG_1(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_NewTrigger__SWIG_0(L);
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'new_NewTrigger'\n"
    "  Possible C/C++ prototypes are:\n"
    "    NewTrigger::NewTrigger(int)\n"
    "    NewTrigger::NewTrigger()\n");
  lua_error(L);return 0;
}


static int _wrap_NewTrigger_name(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("NewTrigger::name",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::name",1,"NewTrigger *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("NewTrigger::name",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_name",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  try {
    (arg1)->name((char const *)arg2);
  }
  catch(char *_e) {
    lua_pushstring(L,_e);SWIG_fail;
  }
  
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_description(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("NewTrigger::description",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::description",1,"NewTrigger *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("NewTrigger::description",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_description",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->description((char const *)arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_on__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("NewTrigger::on",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::on",1,"NewTrigger *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("NewTrigger::on",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_on",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  (arg1)->on(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_on__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("NewTrigger::on",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::on",1,"NewTrigger *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("NewTrigger::on",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_on",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->on(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_on(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_NewTrigger, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_NewTrigger_on__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_NewTrigger, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_NewTrigger_on__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'NewTrigger_on'\n"
    "  Possible C/C++ prototypes are:\n"
    "    NewTrigger::on(bool)\n"
    "    NewTrigger::on(int)\n");
  lua_error(L);return 0;
}


static int _wrap_NewTrigger_loop__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("NewTrigger::loop",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::loop",1,"NewTrigger *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("NewTrigger::loop",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_loop",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  (arg1)->loop(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_loop__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("NewTrigger::loop",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::loop",1,"NewTrigger *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("NewTrigger::loop",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_loop",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->loop(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_loop(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_NewTrigger, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_NewTrigger_loop__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_NewTrigger, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_NewTrigger_loop__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'NewTrigger_loop'\n"
    "  Possible C/C++ prototypes are:\n"
    "    NewTrigger::loop(bool)\n"
    "    NewTrigger::loop(int)\n");
  lua_error(L);return 0;
}


static int _wrap_NewTrigger_objective__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("NewTrigger::objective",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::objective",1,"NewTrigger *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("NewTrigger::objective",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_objective",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  (arg1)->objective(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_objective__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("NewTrigger::objective",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::objective",1,"NewTrigger *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("NewTrigger::objective",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_objective",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->objective(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_objective(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_NewTrigger, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_NewTrigger_objective__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_NewTrigger, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_NewTrigger_objective__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"Wrong arguments for overloaded function 'NewTrigger_objective'\n"
    "  Possible C/C++ prototypes are:\n"
    "    NewTrigger::objective(bool)\n"
    "    NewTrigger::objective(int)\n");
  lua_error(L);return 0;
}


static int _wrap_NewTrigger_desc_order(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("NewTrigger::desc_order",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::desc_order",1,"NewTrigger *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("NewTrigger::desc_order",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_desc_order",1,SWIGTYPE_p_NewTrigger);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->desc_order(arg2);
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionNone(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_None *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionNone",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionNone",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionNone",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_None *)(arg1)->ConditionNone();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_None,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionBringObjectToArea(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_BringObjectToArea *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionBringObjectToArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionBringObjectToArea",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionBringObjectToArea",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_BringObjectToArea *)(arg1)->ConditionBringObjectToArea();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_BringObjectToArea,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionBringObjectToObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_BringObjectToObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionBringObjectToObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionBringObjectToObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionBringObjectToObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_BringObjectToObject *)(arg1)->ConditionBringObjectToObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_BringObjectToObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionOwnObjects(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_OwnObjects *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionOwnObjects",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionOwnObjects",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionOwnObjects",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_OwnObjects *)(arg1)->ConditionOwnObjects();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_OwnObjects,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionOwnFewerObjects(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_OwnFewerObjects *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionOwnFewerObjects",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionOwnFewerObjects",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionOwnFewerObjects",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_OwnFewerObjects *)(arg1)->ConditionOwnFewerObjects();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_OwnFewerObjects,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionObjectsInArea(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_ObjectsInArea *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionObjectsInArea",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionObjectsInArea",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionObjectsInArea",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_ObjectsInArea *)(arg1)->ConditionObjectsInArea();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectsInArea,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionDestroyObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_DestroyObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionDestroyObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionDestroyObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionDestroyObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_DestroyObject *)(arg1)->ConditionDestroyObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_DestroyObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionCaptureObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_CaptureObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionCaptureObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionCaptureObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionCaptureObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_CaptureObject *)(arg1)->ConditionCaptureObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_CaptureObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionAccumulateAttribute(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_AccumulateAttribute *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionAccumulateAttribute",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionAccumulateAttribute",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionAccumulateAttribute",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_AccumulateAttribute *)(arg1)->ConditionAccumulateAttribute();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_AccumulateAttribute,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionResearchTechnology(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_ResearchTechnology *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionResearchTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionResearchTechnology",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionResearchTechnology",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_ResearchTechnology *)(arg1)->ConditionResearchTechnology();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ResearchTechnology,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionTimer(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_Timer *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionTimer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionTimer",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionTimer",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_Timer *)(arg1)->ConditionTimer();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_Timer,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionObjectSelected(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_ObjectSelected *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionObjectSelected",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionObjectSelected",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionObjectSelected",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_ObjectSelected *)(arg1)->ConditionObjectSelected();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectSelected,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionAiSignal(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_AISignal *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionAiSignal",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionAiSignal",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionAiSignal",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_AISignal *)(arg1)->ConditionAiSignal();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_AISignal,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionPlayerDefeated(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_PlayerDefeated *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionPlayerDefeated",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionPlayerDefeated",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionPlayerDefeated",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_PlayerDefeated *)(arg1)->ConditionPlayerDefeated();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_PlayerDefeated,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionObjectHasTarget(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_ObjectHasTarget *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionObjectHasTarget",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionObjectHasTarget",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionObjectHasTarget",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_ObjectHasTarget *)(arg1)->ConditionObjectHasTarget();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectHasTarget,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionObjectVisible(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_ObjectVisible *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionObjectVisible",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionObjectVisible",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionObjectVisible",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_ObjectVisible *)(arg1)->ConditionObjectVisible();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectVisible,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionObjectNotVisible(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_ObjectNotVisible *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionObjectNotVisible",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionObjectNotVisible",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionObjectNotVisible",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_ObjectNotVisible *)(arg1)->ConditionObjectNotVisible();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ObjectNotVisible,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionResearchingTechnology(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_ResearchingTechnology *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionResearchingTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionResearchingTechnology",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionResearchingTechnology",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_ResearchingTechnology *)(arg1)->ConditionResearchingTechnology();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_ResearchingTechnology,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionUnitsGarrisoned(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_UnitsGarrisoned *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionUnitsGarrisoned",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionUnitsGarrisoned",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionUnitsGarrisoned",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_UnitsGarrisoned *)(arg1)->ConditionUnitsGarrisoned();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_UnitsGarrisoned,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_ConditionDifficultyLevel(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Condition_DifficultyLevel *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::ConditionDifficultyLevel",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::ConditionDifficultyLevel",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_ConditionDifficultyLevel",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Condition_DifficultyLevel *)(arg1)->ConditionDifficultyLevel();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Condition_DifficultyLevel,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectNone(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_None *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectNone",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectNone",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectNone",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_None *)(arg1)->EffectNone();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_None,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectChangeDiplomacy(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ChangeDiplomacy *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectChangeDiplomacy",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectChangeDiplomacy",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectChangeDiplomacy",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ChangeDiplomacy *)(arg1)->EffectChangeDiplomacy();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeDiplomacy,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectResearchTechnology(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ResearchTechnology *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectResearchTechnology",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectResearchTechnology",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectResearchTechnology",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ResearchTechnology *)(arg1)->EffectResearchTechnology();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ResearchTechnology,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectSendChat(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_SendChat *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectSendChat",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectSendChat",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectSendChat",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_SendChat *)(arg1)->EffectSendChat();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_SendChat,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectPlaySound(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_PlaySound *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectPlaySound",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectPlaySound",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectPlaySound",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_PlaySound *)(arg1)->EffectPlaySound();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_PlaySound,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectSendTribute(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_SendTribute *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectSendTribute",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectSendTribute",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectSendTribute",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_SendTribute *)(arg1)->EffectSendTribute();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_SendTribute,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectUnlockGate(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_UnlockGate *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectUnlockGate",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectUnlockGate",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectUnlockGate",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_UnlockGate *)(arg1)->EffectUnlockGate();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_UnlockGate,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectLockGate(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_LockGate *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectLockGate",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectLockGate",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectLockGate",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_LockGate *)(arg1)->EffectLockGate();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_LockGate,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectActivateTrigger(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ActivateTrigger *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectActivateTrigger",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectActivateTrigger",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectActivateTrigger",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ActivateTrigger *)(arg1)->EffectActivateTrigger();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ActivateTrigger,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectDeactivateTrigger(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_DeactivateTrigger *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectDeactivateTrigger",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectDeactivateTrigger",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectDeactivateTrigger",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_DeactivateTrigger *)(arg1)->EffectDeactivateTrigger();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DeactivateTrigger,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectAIScriptGoal(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_AIScriptGoal *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectAIScriptGoal",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectAIScriptGoal",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectAIScriptGoal",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_AIScriptGoal *)(arg1)->EffectAIScriptGoal();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_AIScriptGoal,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectCreateObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_CreateObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectCreateObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectCreateObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectCreateObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_CreateObject *)(arg1)->EffectCreateObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_CreateObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectTaskObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_TaskObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectTaskObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectTaskObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectTaskObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_TaskObject *)(arg1)->EffectTaskObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_TaskObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectDeclareVictory(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_DeclareVictory *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectDeclareVictory",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectDeclareVictory",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectDeclareVictory",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_DeclareVictory *)(arg1)->EffectDeclareVictory();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DeclareVictory,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectKillObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_KillObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectKillObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectKillObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectKillObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_KillObject *)(arg1)->EffectKillObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_KillObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectRemoveObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_RemoveObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectRemoveObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectRemoveObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectRemoveObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_RemoveObject *)(arg1)->EffectRemoveObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_RemoveObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectChangeView(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ChangeView *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectChangeView",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectChangeView",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectChangeView",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ChangeView *)(arg1)->EffectChangeView();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeView,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectUnload(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_Unload *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectUnload",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectUnload",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectUnload",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_Unload *)(arg1)->EffectUnload();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_Unload,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectChangeOwnership(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ChangeOwnership *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectChangeOwnership",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectChangeOwnership",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectChangeOwnership",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ChangeOwnership *)(arg1)->EffectChangeOwnership();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeOwnership,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectPatrol(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_Patrol *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectPatrol",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectPatrol",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectPatrol",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_Patrol *)(arg1)->EffectPatrol();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_Patrol,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectDisplayInstructions(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_DisplayInstructions *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectDisplayInstructions",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectDisplayInstructions",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectDisplayInstructions",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_DisplayInstructions *)(arg1)->EffectDisplayInstructions();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DisplayInstructions,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectClearInstructions(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ClearInstructions *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectClearInstructions",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectClearInstructions",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectClearInstructions",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ClearInstructions *)(arg1)->EffectClearInstructions();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ClearInstructions,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectFreezeUnit(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_FreezeUnit *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectFreezeUnit",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectFreezeUnit",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectFreezeUnit",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_FreezeUnit *)(arg1)->EffectFreezeUnit();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_FreezeUnit,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectUseAdvancedButtons(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_UseAdvancedButtons *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectUseAdvancedButtons",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectUseAdvancedButtons",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectUseAdvancedButtons",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_UseAdvancedButtons *)(arg1)->EffectUseAdvancedButtons();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_UseAdvancedButtons,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectDamageObject(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_DamageObject *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectDamageObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectDamageObject",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectDamageObject",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_DamageObject *)(arg1)->EffectDamageObject();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_DamageObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectPlaceFoundation(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_PlaceFoundation *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectPlaceFoundation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectPlaceFoundation",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectPlaceFoundation",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_PlaceFoundation *)(arg1)->EffectPlaceFoundation();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_PlaceFoundation,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectChangeObjectName(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ChangeObjectName *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectChangeObjectName",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectChangeObjectName",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectChangeObjectName",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ChangeObjectName *)(arg1)->EffectChangeObjectName();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeObjectName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectChangeObjectHP(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ChangeObjectHP *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectChangeObjectHP",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectChangeObjectHP",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectChangeObjectHP",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ChangeObjectHP *)(arg1)->EffectChangeObjectHP();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeObjectHP,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectChangeObjectAttack(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_ChangeObjectAttack *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectChangeObjectAttack",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectChangeObjectAttack",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectChangeObjectAttack",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_ChangeObjectAttack *)(arg1)->EffectChangeObjectAttack();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_ChangeObjectAttack,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NewTrigger_EffectStopUnit(lua_State* L) {
  int SWIG_arg = 0;
  NewTrigger *arg1 = (NewTrigger *) 0 ;
  Effect_StopUnit *result = 0 ;
  
  SWIG_check_num_args("NewTrigger::EffectStopUnit",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("NewTrigger::EffectStopUnit",1,"NewTrigger *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_NewTrigger,0))){
    SWIG_fail_ptr("NewTrigger_EffectStopUnit",1,SWIGTYPE_p_NewTrigger);
  }
  
  result = (Effect_StopUnit *)(arg1)->EffectStopUnit();
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_Effect_StopUnit,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_NewTrigger(void *obj) {
NewTrigger *arg1 = (NewTrigger *) obj;
delete arg1;
}
static swig_lua_method swig_NewTrigger_methods[] = {
    {"name", _wrap_NewTrigger_name}, 
    {"description", _wrap_NewTrigger_description}, 
    {"on", _wrap_NewTrigger_on}, 
    {"loop", _wrap_NewTrigger_loop}, 
    {"objective", _wrap_NewTrigger_objective}, 
    {"desc_order", _wrap_NewTrigger_desc_order}, 
    {"ConditionNone", _wrap_NewTrigger_ConditionNone}, 
    {"ConditionBringObjectToArea", _wrap_NewTrigger_ConditionBringObjectToArea}, 
    {"ConditionBringObjectToObject", _wrap_NewTrigger_ConditionBringObjectToObject}, 
    {"ConditionOwnObjects", _wrap_NewTrigger_ConditionOwnObjects}, 
    {"ConditionOwnFewerObjects", _wrap_NewTrigger_ConditionOwnFewerObjects}, 
    {"ConditionObjectsInArea", _wrap_NewTrigger_ConditionObjectsInArea}, 
    {"ConditionDestroyObject", _wrap_NewTrigger_ConditionDestroyObject}, 
    {"ConditionCaptureObject", _wrap_NewTrigger_ConditionCaptureObject}, 
    {"ConditionAccumulateAttribute", _wrap_NewTrigger_ConditionAccumulateAttribute}, 
    {"ConditionResearchTechnology", _wrap_NewTrigger_ConditionResearchTechnology}, 
    {"ConditionTimer", _wrap_NewTrigger_ConditionTimer}, 
    {"ConditionObjectSelected", _wrap_NewTrigger_ConditionObjectSelected}, 
    {"ConditionAiSignal", _wrap_NewTrigger_ConditionAiSignal}, 
    {"ConditionPlayerDefeated", _wrap_NewTrigger_ConditionPlayerDefeated}, 
    {"ConditionObjectHasTarget", _wrap_NewTrigger_ConditionObjectHasTarget}, 
    {"ConditionObjectVisible", _wrap_NewTrigger_ConditionObjectVisible}, 
    {"ConditionObjectNotVisible", _wrap_NewTrigger_ConditionObjectNotVisible}, 
    {"ConditionResearchingTechnology", _wrap_NewTrigger_ConditionResearchingTechnology}, 
    {"ConditionUnitsGarrisoned", _wrap_NewTrigger_ConditionUnitsGarrisoned}, 
    {"ConditionDifficultyLevel", _wrap_NewTrigger_ConditionDifficultyLevel}, 
    {"EffectNone", _wrap_NewTrigger_EffectNone}, 
    {"EffectChangeDiplomacy", _wrap_NewTrigger_EffectChangeDiplomacy}, 
    {"EffectResearchTechnology", _wrap_NewTrigger_EffectResearchTechnology}, 
    {"EffectSendChat", _wrap_NewTrigger_EffectSendChat}, 
    {"EffectPlaySound", _wrap_NewTrigger_EffectPlaySound}, 
    {"EffectSendTribute", _wrap_NewTrigger_EffectSendTribute}, 
    {"EffectUnlockGate", _wrap_NewTrigger_EffectUnlockGate}, 
    {"EffectLockGate", _wrap_NewTrigger_EffectLockGate}, 
    {"EffectActivateTrigger", _wrap_NewTrigger_EffectActivateTrigger}, 
    {"EffectDeactivateTrigger", _wrap_NewTrigger_EffectDeactivateTrigger}, 
    {"EffectAIScriptGoal", _wrap_NewTrigger_EffectAIScriptGoal}, 
    {"EffectCreateObject", _wrap_NewTrigger_EffectCreateObject}, 
    {"EffectTaskObject", _wrap_NewTrigger_EffectTaskObject}, 
    {"EffectDeclareVictory", _wrap_NewTrigger_EffectDeclareVictory}, 
    {"EffectKillObject", _wrap_NewTrigger_EffectKillObject}, 
    {"EffectRemoveObject", _wrap_NewTrigger_EffectRemoveObject}, 
    {"EffectChangeView", _wrap_NewTrigger_EffectChangeView}, 
    {"EffectUnload", _wrap_NewTrigger_EffectUnload}, 
    {"EffectChangeOwnership", _wrap_NewTrigger_EffectChangeOwnership}, 
    {"EffectPatrol", _wrap_NewTrigger_EffectPatrol}, 
    {"EffectDisplayInstructions", _wrap_NewTrigger_EffectDisplayInstructions}, 
    {"EffectClearInstructions", _wrap_NewTrigger_EffectClearInstructions}, 
    {"EffectFreezeUnit", _wrap_NewTrigger_EffectFreezeUnit}, 
    {"EffectUseAdvancedButtons", _wrap_NewTrigger_EffectUseAdvancedButtons}, 
    {"EffectDamageObject", _wrap_NewTrigger_EffectDamageObject}, 
    {"EffectPlaceFoundation", _wrap_NewTrigger_EffectPlaceFoundation}, 
    {"EffectChangeObjectName", _wrap_NewTrigger_EffectChangeObjectName}, 
    {"EffectChangeObjectHP", _wrap_NewTrigger_EffectChangeObjectHP}, 
    {"EffectChangeObjectAttack", _wrap_NewTrigger_EffectChangeObjectAttack}, 
    {"EffectStopUnit", _wrap_NewTrigger_EffectStopUnit}, 
    {0,0}
};
static swig_lua_attribute swig_NewTrigger_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_NewTrigger_bases[] = {0};
static const char *swig_NewTrigger_base_names[] = {0};
static swig_lua_class _wrap_class_NewTrigger = { "NewTrigger", &SWIGTYPE_p_NewTrigger,_wrap_new_NewTrigger, swig_delete_NewTrigger, swig_NewTrigger_methods, swig_NewTrigger_attributes, swig_NewTrigger_bases, swig_NewTrigger_base_names };

#ifdef __cplusplus
}
#endif

static const struct luaL_reg swig_commands[] = {
    { "Effect_createType",_wrap_Effect_createType},
    { "Condition_createType",_wrap_Condition_createType},
    {0,0}
};

static swig_lua_var_info swig_variables[] = {
    { "Effect_types", _wrap_Effect_types_get, _wrap_Effect_types_set },
    { "Effect_propertyTypes", _wrap_Effect_propertyTypes_get, _wrap_Effect_propertyTypes_set },
    { "Condition_types", _wrap_Condition_types_get, _wrap_Condition_types_set },
    { "Condition_propertyTypes", _wrap_Condition_propertyTypes_get, _wrap_Condition_propertyTypes_set },
    {0,0,0}
};

static swig_lua_const_info swig_constants[] = {
{ SWIG_LUA_INT,     (char *)"NUM_EFFECTS", (long) 30, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"NUM_EFFECT_PARAMS", (long) 21, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"MAX_UNITSEL", (long) 22, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_None", (long) EFFECT_None, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ChangeDiplomacy", (long) EFFECT_ChangeDiplomacy, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ResearchTechnology", (long) EFFECT_ResearchTechnology, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_SendChat", (long) EFFECT_SendChat, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_PlaySound", (long) EFFECT_PlaySound, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_SendTribute", (long) EFFECT_SendTribute, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_UnlockGate", (long) EFFECT_UnlockGate, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_LockGate", (long) EFFECT_LockGate, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ActivateTrigger", (long) EFFECT_ActivateTrigger, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_DeactivateTrigger", (long) EFFECT_DeactivateTrigger, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_AIScriptGoal", (long) EFFECT_AIScriptGoal, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_CreateObject", (long) EFFECT_CreateObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_TaskObject", (long) EFFECT_TaskObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_DeclareVictory", (long) EFFECT_DeclareVictory, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_KillObject", (long) EFFECT_KillObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_RemoveObject", (long) EFFECT_RemoveObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ChangeView", (long) EFFECT_ChangeView, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_Unload", (long) EFFECT_Unload, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ChangeOwnership", (long) EFFECT_ChangeOwnership, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_Patrol", (long) EFFECT_Patrol, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_DisplayInstructions", (long) EFFECT_DisplayInstructions, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ClearInstructions", (long) EFFECT_ClearInstructions, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_FreezeUnit", (long) EFFECT_FreezeUnit, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_UseAdvancedButtons", (long) EFFECT_UseAdvancedButtons, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_DamageObject", (long) EFFECT_DamageObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_PlaceFoundation", (long) EFFECT_PlaceFoundation, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ChangeObjectName", (long) EFFECT_ChangeObjectName, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ChangeObjectHP", (long) EFFECT_ChangeObjectHP, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_ChangeObjectAttack", (long) EFFECT_ChangeObjectAttack, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECT_StopUnit", (long) EFFECT_StopUnit, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Amount", (long) EFFECTP_Amount, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Location", (long) EFFECTP_Location, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Area", (long) EFFECTP_Area, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_AIGoal", (long) EFFECTP_AIGoal, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Diplomacy", (long) EFFECTP_Diplomacy, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_DisplayTime", (long) EFFECTP_DisplayTime, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_NumSelected", (long) EFFECTP_NumSelected, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Panel", (long) EFFECTP_Panel, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_PlayerSource", (long) EFFECTP_PlayerSource, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_PlayerTarget", (long) EFFECTP_PlayerTarget, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Resource", (long) EFFECTP_Resource, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Technology", (long) EFFECTP_Technology, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_TriggerIndex", (long) EFFECTP_TriggerIndex, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Type", (long) EFFECTP_Type, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_UIDs", (long) EFFECTP_UIDs, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_UIDLocation", (long) EFFECTP_UIDLocation, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_UnitGroup", (long) EFFECTP_UnitGroup, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_UnitType", (long) EFFECTP_UnitType, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_UnitConst", (long) EFFECTP_UnitConst, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Sound", (long) EFFECTP_Sound, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EFFECTP_Text", (long) EFFECTP_Text, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"NUM_CONDS", (long) 20, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"NUM_COND_PARAMS", (long) 12, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_None", (long) CONDITION_None, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_BringObjectToArea", (long) CONDITION_BringObjectToArea, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_BringObjectToObject", (long) CONDITION_BringObjectToObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_OwnObjects", (long) CONDITION_OwnObjects, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_OwnFewerObjects", (long) CONDITION_OwnFewerObjects, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_ObjectsInArea", (long) CONDITION_ObjectsInArea, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_DestroyObject", (long) CONDITION_DestroyObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_CaptureObject", (long) CONDITION_CaptureObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_AccumulateAttribute", (long) CONDITION_AccumulateAttribute, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_ResearchTechnology", (long) CONDITION_ResearchTechnology, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_Timer", (long) CONDITION_Timer, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_ObjectSelected", (long) CONDITION_ObjectSelected, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_AISignal", (long) CONDITION_AISignal, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_PlayerDefeated", (long) CONDITION_PlayerDefeated, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_ObjectHasTarget", (long) CONDITION_ObjectHasTarget, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_ObjectVisible", (long) CONDITION_ObjectVisible, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_ObjectNotVisible", (long) CONDITION_ObjectNotVisible, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_ResearchingTechnology", (long) CONDITION_ResearchingTechnology, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_UnitsGarrisoned", (long) CONDITION_UnitsGarrisoned, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITION_DifficultyLevel", (long) CONDITION_DifficultyLevel, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_Amount", (long) CONDITIONP_Amount, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_Resource", (long) CONDITIONP_Resource, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_UIDObject", (long) CONDITIONP_UIDObject, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_UIDLocation", (long) CONDITIONP_UIDLocation, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_Player", (long) CONDITIONP_Player, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_Technology", (long) CONDITIONP_Technology, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_Timer", (long) CONDITIONP_Timer, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_Area", (long) CONDITIONP_Area, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_UnitGroup", (long) CONDITIONP_UnitGroup, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_UnitType", (long) CONDITIONP_UnitType, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_UnitConst", (long) CONDITIONP_UnitConst, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"CONDITIONP_AISignal", (long) CONDITIONP_AISignal, 0, 0, 0},
    {0,0,0,0,0,0}
};

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_Effect_ChangeViewTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ChangeView *) x));
}
static void *_p_Effect_KillObjectTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_KillObject *) x));
}
static void *_p_Effect_DisplayInstructionsTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_DisplayInstructions *) x));
}
static void *_p_Effect_ClearInstructionsTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ClearInstructions *) x));
}
static void *_p_Effect_PlaceFoundationTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_PlaceFoundation *) x));
}
static void *_p_Effect_SendChatTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_SendChat *) x));
}
static void *_p_Effect_ResearchTechnologyTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ResearchTechnology *) x));
}
static void *_p_Effect_NoneTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_None *) x));
}
static void *_p_Effect_ChangeObjectAttackTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ChangeObjectAttack *) x));
}
static void *_p_Effect_DeclareVictoryTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_DeclareVictory *) x));
}
static void *_p_Effect_ChangeOwnershipTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ChangeOwnership *) x));
}
static void *_p_Effect_DeactivateTriggerTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_DeactivateTrigger *) x));
}
static void *_p_Effect_ActivateTriggerTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ActivateTrigger *) x));
}
static void *_p_Effect_PlaySoundTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_PlaySound *) x));
}
static void *_p_Effect_StopUnitTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_StopUnit *) x));
}
static void *_p_Effect_SendTributeTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_SendTribute *) x));
}
static void *_p_Effect_PatrolTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_Patrol *) x));
}
static void *_p_Effect_FreezeUnitTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_FreezeUnit *) x));
}
static void *_p_Effect_UnloadTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_Unload *) x));
}
static void *_p_Effect_ChangeDiplomacyTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ChangeDiplomacy *) x));
}
static void *_p_Effect_AIScriptGoalTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_AIScriptGoal *) x));
}
static void *_p_Effect_LockGateTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_LockGate *) x));
}
static void *_p_Effect_UnlockGateTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_UnlockGate *) x));
}
static void *_p_Effect_UseAdvancedButtonsTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_UseAdvancedButtons *) x));
}
static void *_p_Effect_ChangeObjectNameTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ChangeObjectName *) x));
}
static void *_p_Effect_TaskObjectTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_TaskObject *) x));
}
static void *_p_Effect_CreateObjectTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_CreateObject *) x));
}
static void *_p_Effect_RemoveObjectTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_RemoveObject *) x));
}
static void *_p_Effect_DamageObjectTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_DamageObject *) x));
}
static void *_p_Effect_ChangeObjectHPTo_p_Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Effect *)  ((Effect_ChangeObjectHP *) x));
}
static void *_p_Condition_ResearchTechnologyTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_ResearchTechnology *) x));
}
static void *_p_Condition_AISignalTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_AISignal *) x));
}
static void *_p_Condition_ObjectSelectedTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_ObjectSelected *) x));
}
static void *_p_Condition_ResearchingTechnologyTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_ResearchingTechnology *) x));
}
static void *_p_Condition_PlayerDefeatedTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_PlayerDefeated *) x));
}
static void *_p_Condition_AccumulateAttributeTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_AccumulateAttribute *) x));
}
static void *_p_Condition_ObjectsInAreaTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_ObjectsInArea *) x));
}
static void *_p_Condition_NoneTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_None *) x));
}
static void *_p_Condition_UnitsGarrisonedTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_UnitsGarrisoned *) x));
}
static void *_p_Condition_TimerTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_Timer *) x));
}
static void *_p_Condition_CaptureObjectTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_CaptureObject *) x));
}
static void *_p_Condition_DestroyObjectTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_DestroyObject *) x));
}
static void *_p_Condition_BringObjectToObjectTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_BringObjectToObject *) x));
}
static void *_p_Condition_OwnFewerObjectsTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_OwnFewerObjects *) x));
}
static void *_p_Condition_OwnObjectsTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_OwnObjects *) x));
}
static void *_p_Condition_BringObjectToAreaTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_BringObjectToArea *) x));
}
static void *_p_Condition_ObjectHasTargetTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_ObjectHasTarget *) x));
}
static void *_p_Condition_ObjectVisibleTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_ObjectVisible *) x));
}
static void *_p_Condition_ObjectNotVisibleTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_ObjectNotVisible *) x));
}
static void *_p_Condition_DifficultyLevelTo_p_Condition(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Condition *)  ((Condition_DifficultyLevel *) x));
}
static swig_type_info _swigt__p_AOKPT = {"_p_AOKPT", "AOKPT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AOKRECT = {"_p_AOKRECT", "AOKRECT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Condition = {"_p_Condition", "Condition *", 0, 0, (void*)&_wrap_class_Condition, 0};
static swig_type_info _swigt__p_Condition_AISignal = {"_p_Condition_AISignal", "Condition_AISignal *", 0, 0, (void*)&_wrap_class_Condition_AISignal, 0};
static swig_type_info _swigt__p_Condition_AccumulateAttribute = {"_p_Condition_AccumulateAttribute", "Condition_AccumulateAttribute *", 0, 0, (void*)&_wrap_class_Condition_AccumulateAttribute, 0};
static swig_type_info _swigt__p_Condition_BringObjectToArea = {"_p_Condition_BringObjectToArea", "Condition_BringObjectToArea *", 0, 0, (void*)&_wrap_class_Condition_BringObjectToArea, 0};
static swig_type_info _swigt__p_Condition_BringObjectToObject = {"_p_Condition_BringObjectToObject", "Condition_BringObjectToObject *", 0, 0, (void*)&_wrap_class_Condition_BringObjectToObject, 0};
static swig_type_info _swigt__p_Condition_CaptureObject = {"_p_Condition_CaptureObject", "Condition_CaptureObject *", 0, 0, (void*)&_wrap_class_Condition_CaptureObject, 0};
static swig_type_info _swigt__p_Condition_DestroyObject = {"_p_Condition_DestroyObject", "Condition_DestroyObject *", 0, 0, (void*)&_wrap_class_Condition_DestroyObject, 0};
static swig_type_info _swigt__p_Condition_DifficultyLevel = {"_p_Condition_DifficultyLevel", "Condition_DifficultyLevel *", 0, 0, (void*)&_wrap_class_Condition_DifficultyLevel, 0};
static swig_type_info _swigt__p_Condition_None = {"_p_Condition_None", "Condition_None *", 0, 0, (void*)&_wrap_class_Condition_None, 0};
static swig_type_info _swigt__p_Condition_ObjectHasTarget = {"_p_Condition_ObjectHasTarget", "Condition_ObjectHasTarget *", 0, 0, (void*)&_wrap_class_Condition_ObjectHasTarget, 0};
static swig_type_info _swigt__p_Condition_ObjectNotVisible = {"_p_Condition_ObjectNotVisible", "Condition_ObjectNotVisible *", 0, 0, (void*)&_wrap_class_Condition_ObjectNotVisible, 0};
static swig_type_info _swigt__p_Condition_ObjectSelected = {"_p_Condition_ObjectSelected", "Condition_ObjectSelected *", 0, 0, (void*)&_wrap_class_Condition_ObjectSelected, 0};
static swig_type_info _swigt__p_Condition_ObjectVisible = {"_p_Condition_ObjectVisible", "Condition_ObjectVisible *", 0, 0, (void*)&_wrap_class_Condition_ObjectVisible, 0};
static swig_type_info _swigt__p_Condition_ObjectsInArea = {"_p_Condition_ObjectsInArea", "Condition_ObjectsInArea *", 0, 0, (void*)&_wrap_class_Condition_ObjectsInArea, 0};
static swig_type_info _swigt__p_Condition_OwnFewerObjects = {"_p_Condition_OwnFewerObjects", "Condition_OwnFewerObjects *", 0, 0, (void*)&_wrap_class_Condition_OwnFewerObjects, 0};
static swig_type_info _swigt__p_Condition_OwnObjects = {"_p_Condition_OwnObjects", "Condition_OwnObjects *", 0, 0, (void*)&_wrap_class_Condition_OwnObjects, 0};
static swig_type_info _swigt__p_Condition_PlayerDefeated = {"_p_Condition_PlayerDefeated", "Condition_PlayerDefeated *", 0, 0, (void*)&_wrap_class_Condition_PlayerDefeated, 0};
static swig_type_info _swigt__p_Condition_ResearchTechnology = {"_p_Condition_ResearchTechnology", "Condition_ResearchTechnology *", 0, 0, (void*)&_wrap_class_Condition_ResearchTechnology, 0};
static swig_type_info _swigt__p_Condition_ResearchingTechnology = {"_p_Condition_ResearchingTechnology", "Condition_ResearchingTechnology *", 0, 0, (void*)&_wrap_class_Condition_ResearchingTechnology, 0};
static swig_type_info _swigt__p_Condition_Timer = {"_p_Condition_Timer", "Condition_Timer *", 0, 0, (void*)&_wrap_class_Condition_Timer, 0};
static swig_type_info _swigt__p_Condition_UnitsGarrisoned = {"_p_Condition_UnitsGarrisoned", "Condition_UnitsGarrisoned *", 0, 0, (void*)&_wrap_class_Condition_UnitsGarrisoned, 0};
static swig_type_info _swigt__p_Effect = {"_p_Effect", "Effect *", 0, 0, (void*)&_wrap_class_Effect, 0};
static swig_type_info _swigt__p_Effect_AIScriptGoal = {"_p_Effect_AIScriptGoal", "Effect_AIScriptGoal *", 0, 0, (void*)&_wrap_class_Effect_AIScriptGoal, 0};
static swig_type_info _swigt__p_Effect_ActivateTrigger = {"_p_Effect_ActivateTrigger", "Effect_ActivateTrigger *", 0, 0, (void*)&_wrap_class_Effect_ActivateTrigger, 0};
static swig_type_info _swigt__p_Effect_ChangeDiplomacy = {"_p_Effect_ChangeDiplomacy", "Effect_ChangeDiplomacy *", 0, 0, (void*)&_wrap_class_Effect_ChangeDiplomacy, 0};
static swig_type_info _swigt__p_Effect_ChangeObjectAttack = {"_p_Effect_ChangeObjectAttack", "Effect_ChangeObjectAttack *", 0, 0, (void*)&_wrap_class_Effect_ChangeObjectAttack, 0};
static swig_type_info _swigt__p_Effect_ChangeObjectHP = {"_p_Effect_ChangeObjectHP", "Effect_ChangeObjectHP *", 0, 0, (void*)&_wrap_class_Effect_ChangeObjectHP, 0};
static swig_type_info _swigt__p_Effect_ChangeObjectName = {"_p_Effect_ChangeObjectName", "Effect_ChangeObjectName *", 0, 0, (void*)&_wrap_class_Effect_ChangeObjectName, 0};
static swig_type_info _swigt__p_Effect_ChangeOwnership = {"_p_Effect_ChangeOwnership", "Effect_ChangeOwnership *", 0, 0, (void*)&_wrap_class_Effect_ChangeOwnership, 0};
static swig_type_info _swigt__p_Effect_ChangeView = {"_p_Effect_ChangeView", "Effect_ChangeView *", 0, 0, (void*)&_wrap_class_Effect_ChangeView, 0};
static swig_type_info _swigt__p_Effect_ClearInstructions = {"_p_Effect_ClearInstructions", "Effect_ClearInstructions *", 0, 0, (void*)&_wrap_class_Effect_ClearInstructions, 0};
static swig_type_info _swigt__p_Effect_CreateObject = {"_p_Effect_CreateObject", "Effect_CreateObject *", 0, 0, (void*)&_wrap_class_Effect_CreateObject, 0};
static swig_type_info _swigt__p_Effect_DamageObject = {"_p_Effect_DamageObject", "Effect_DamageObject *", 0, 0, (void*)&_wrap_class_Effect_DamageObject, 0};
static swig_type_info _swigt__p_Effect_DeactivateTrigger = {"_p_Effect_DeactivateTrigger", "Effect_DeactivateTrigger *", 0, 0, (void*)&_wrap_class_Effect_DeactivateTrigger, 0};
static swig_type_info _swigt__p_Effect_DeclareVictory = {"_p_Effect_DeclareVictory", "Effect_DeclareVictory *", 0, 0, (void*)&_wrap_class_Effect_DeclareVictory, 0};
static swig_type_info _swigt__p_Effect_DisplayInstructions = {"_p_Effect_DisplayInstructions", "Effect_DisplayInstructions *", 0, 0, (void*)&_wrap_class_Effect_DisplayInstructions, 0};
static swig_type_info _swigt__p_Effect_FreezeUnit = {"_p_Effect_FreezeUnit", "Effect_FreezeUnit *", 0, 0, (void*)&_wrap_class_Effect_FreezeUnit, 0};
static swig_type_info _swigt__p_Effect_KillObject = {"_p_Effect_KillObject", "Effect_KillObject *", 0, 0, (void*)&_wrap_class_Effect_KillObject, 0};
static swig_type_info _swigt__p_Effect_LockGate = {"_p_Effect_LockGate", "Effect_LockGate *", 0, 0, (void*)&_wrap_class_Effect_LockGate, 0};
static swig_type_info _swigt__p_Effect_None = {"_p_Effect_None", "Effect_None *", 0, 0, (void*)&_wrap_class_Effect_None, 0};
static swig_type_info _swigt__p_Effect_Patrol = {"_p_Effect_Patrol", "Effect_Patrol *", 0, 0, (void*)&_wrap_class_Effect_Patrol, 0};
static swig_type_info _swigt__p_Effect_PlaceFoundation = {"_p_Effect_PlaceFoundation", "Effect_PlaceFoundation *", 0, 0, (void*)&_wrap_class_Effect_PlaceFoundation, 0};
static swig_type_info _swigt__p_Effect_PlaySound = {"_p_Effect_PlaySound", "Effect_PlaySound *", 0, 0, (void*)&_wrap_class_Effect_PlaySound, 0};
static swig_type_info _swigt__p_Effect_RemoveObject = {"_p_Effect_RemoveObject", "Effect_RemoveObject *", 0, 0, (void*)&_wrap_class_Effect_RemoveObject, 0};
static swig_type_info _swigt__p_Effect_ResearchTechnology = {"_p_Effect_ResearchTechnology", "Effect_ResearchTechnology *", 0, 0, (void*)&_wrap_class_Effect_ResearchTechnology, 0};
static swig_type_info _swigt__p_Effect_SendChat = {"_p_Effect_SendChat", "Effect_SendChat *", 0, 0, (void*)&_wrap_class_Effect_SendChat, 0};
static swig_type_info _swigt__p_Effect_SendTribute = {"_p_Effect_SendTribute", "Effect_SendTribute *", 0, 0, (void*)&_wrap_class_Effect_SendTribute, 0};
static swig_type_info _swigt__p_Effect_StopUnit = {"_p_Effect_StopUnit", "Effect_StopUnit *", 0, 0, (void*)&_wrap_class_Effect_StopUnit, 0};
static swig_type_info _swigt__p_Effect_TaskObject = {"_p_Effect_TaskObject", "Effect_TaskObject *", 0, 0, (void*)&_wrap_class_Effect_TaskObject, 0};
static swig_type_info _swigt__p_Effect_Unload = {"_p_Effect_Unload", "Effect_Unload *", 0, 0, (void*)&_wrap_class_Effect_Unload, 0};
static swig_type_info _swigt__p_Effect_UnlockGate = {"_p_Effect_UnlockGate", "Effect_UnlockGate *", 0, 0, (void*)&_wrap_class_Effect_UnlockGate, 0};
static swig_type_info _swigt__p_Effect_UseAdvancedButtons = {"_p_Effect_UseAdvancedButtons", "Effect_UseAdvancedButtons *", 0, 0, (void*)&_wrap_class_Effect_UseAdvancedButtons, 0};
static swig_type_info _swigt__p_FILE = {"_p_FILE", "FILE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NewTrigger = {"_p_NewTrigger", "NewTrigger *", 0, 0, (void*)&_wrap_class_NewTrigger, 0};
static swig_type_info _swigt__p_eclong = {"_p_eclong", "eclong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_int_t = {"_p_std__vectorT_int_t", "std::vector< int > *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_AOKPT,
  &_swigt__p_AOKRECT,
  &_swigt__p_Condition,
  &_swigt__p_Condition_AISignal,
  &_swigt__p_Condition_AccumulateAttribute,
  &_swigt__p_Condition_BringObjectToArea,
  &_swigt__p_Condition_BringObjectToObject,
  &_swigt__p_Condition_CaptureObject,
  &_swigt__p_Condition_DestroyObject,
  &_swigt__p_Condition_DifficultyLevel,
  &_swigt__p_Condition_None,
  &_swigt__p_Condition_ObjectHasTarget,
  &_swigt__p_Condition_ObjectNotVisible,
  &_swigt__p_Condition_ObjectSelected,
  &_swigt__p_Condition_ObjectVisible,
  &_swigt__p_Condition_ObjectsInArea,
  &_swigt__p_Condition_OwnFewerObjects,
  &_swigt__p_Condition_OwnObjects,
  &_swigt__p_Condition_PlayerDefeated,
  &_swigt__p_Condition_ResearchTechnology,
  &_swigt__p_Condition_ResearchingTechnology,
  &_swigt__p_Condition_Timer,
  &_swigt__p_Condition_UnitsGarrisoned,
  &_swigt__p_Effect,
  &_swigt__p_Effect_AIScriptGoal,
  &_swigt__p_Effect_ActivateTrigger,
  &_swigt__p_Effect_ChangeDiplomacy,
  &_swigt__p_Effect_ChangeObjectAttack,
  &_swigt__p_Effect_ChangeObjectHP,
  &_swigt__p_Effect_ChangeObjectName,
  &_swigt__p_Effect_ChangeOwnership,
  &_swigt__p_Effect_ChangeView,
  &_swigt__p_Effect_ClearInstructions,
  &_swigt__p_Effect_CreateObject,
  &_swigt__p_Effect_DamageObject,
  &_swigt__p_Effect_DeactivateTrigger,
  &_swigt__p_Effect_DeclareVictory,
  &_swigt__p_Effect_DisplayInstructions,
  &_swigt__p_Effect_FreezeUnit,
  &_swigt__p_Effect_KillObject,
  &_swigt__p_Effect_LockGate,
  &_swigt__p_Effect_None,
  &_swigt__p_Effect_Patrol,
  &_swigt__p_Effect_PlaceFoundation,
  &_swigt__p_Effect_PlaySound,
  &_swigt__p_Effect_RemoveObject,
  &_swigt__p_Effect_ResearchTechnology,
  &_swigt__p_Effect_SendChat,
  &_swigt__p_Effect_SendTribute,
  &_swigt__p_Effect_StopUnit,
  &_swigt__p_Effect_TaskObject,
  &_swigt__p_Effect_Unload,
  &_swigt__p_Effect_UnlockGate,
  &_swigt__p_Effect_UseAdvancedButtons,
  &_swigt__p_FILE,
  &_swigt__p_NewTrigger,
  &_swigt__p_eclong,
  &_swigt__p_p_char,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT_int_t,
};

static swig_cast_info _swigc__p_AOKPT[] = {  {&_swigt__p_AOKPT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AOKRECT[] = {  {&_swigt__p_AOKRECT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition[] = {  {&_swigt__p_Condition_ResearchTechnology, _p_Condition_ResearchTechnologyTo_p_Condition, 0, 0},  {&_swigt__p_Condition_ResearchingTechnology, _p_Condition_ResearchingTechnologyTo_p_Condition, 0, 0},  {&_swigt__p_Condition_AISignal, _p_Condition_AISignalTo_p_Condition, 0, 0},  {&_swigt__p_Condition_ObjectSelected, _p_Condition_ObjectSelectedTo_p_Condition, 0, 0},  {&_swigt__p_Condition_PlayerDefeated, _p_Condition_PlayerDefeatedTo_p_Condition, 0, 0},  {&_swigt__p_Condition_AccumulateAttribute, _p_Condition_AccumulateAttributeTo_p_Condition, 0, 0},  {&_swigt__p_Condition_ObjectsInArea, _p_Condition_ObjectsInAreaTo_p_Condition, 0, 0},  {&_swigt__p_Condition_None, _p_Condition_NoneTo_p_Condition, 0, 0},  {&_swigt__p_Condition, 0, 0, 0},  {&_swigt__p_Condition_UnitsGarrisoned, _p_Condition_UnitsGarrisonedTo_p_Condition, 0, 0},  {&_swigt__p_Condition_Timer, _p_Condition_TimerTo_p_Condition, 0, 0},  {&_swigt__p_Condition_CaptureObject, _p_Condition_CaptureObjectTo_p_Condition, 0, 0},  {&_swigt__p_Condition_DestroyObject, _p_Condition_DestroyObjectTo_p_Condition, 0, 0},  {&_swigt__p_Condition_BringObjectToObject, _p_Condition_BringObjectToObjectTo_p_Condition, 0, 0},  {&_swigt__p_Condition_OwnFewerObjects, _p_Condition_OwnFewerObjectsTo_p_Condition, 0, 0},  {&_swigt__p_Condition_OwnObjects, _p_Condition_OwnObjectsTo_p_Condition, 0, 0},  {&_swigt__p_Condition_BringObjectToArea, _p_Condition_BringObjectToAreaTo_p_Condition, 0, 0},  {&_swigt__p_Condition_ObjectHasTarget, _p_Condition_ObjectHasTargetTo_p_Condition, 0, 0},  {&_swigt__p_Condition_ObjectVisible, _p_Condition_ObjectVisibleTo_p_Condition, 0, 0},  {&_swigt__p_Condition_ObjectNotVisible, _p_Condition_ObjectNotVisibleTo_p_Condition, 0, 0},  {&_swigt__p_Condition_DifficultyLevel, _p_Condition_DifficultyLevelTo_p_Condition, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_AISignal[] = {  {&_swigt__p_Condition_AISignal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_AccumulateAttribute[] = {  {&_swigt__p_Condition_AccumulateAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_BringObjectToArea[] = {  {&_swigt__p_Condition_BringObjectToArea, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_BringObjectToObject[] = {  {&_swigt__p_Condition_BringObjectToObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_CaptureObject[] = {  {&_swigt__p_Condition_CaptureObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_DestroyObject[] = {  {&_swigt__p_Condition_DestroyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_DifficultyLevel[] = {  {&_swigt__p_Condition_DifficultyLevel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_None[] = {  {&_swigt__p_Condition_None, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_ObjectHasTarget[] = {  {&_swigt__p_Condition_ObjectHasTarget, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_ObjectNotVisible[] = {  {&_swigt__p_Condition_ObjectNotVisible, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_ObjectSelected[] = {  {&_swigt__p_Condition_ObjectSelected, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_ObjectVisible[] = {  {&_swigt__p_Condition_ObjectVisible, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_ObjectsInArea[] = {  {&_swigt__p_Condition_ObjectsInArea, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_OwnFewerObjects[] = {  {&_swigt__p_Condition_OwnFewerObjects, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_OwnObjects[] = {  {&_swigt__p_Condition_OwnObjects, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_PlayerDefeated[] = {  {&_swigt__p_Condition_PlayerDefeated, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_ResearchTechnology[] = {  {&_swigt__p_Condition_ResearchTechnology, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_ResearchingTechnology[] = {  {&_swigt__p_Condition_ResearchingTechnology, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_Timer[] = {  {&_swigt__p_Condition_Timer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Condition_UnitsGarrisoned[] = {  {&_swigt__p_Condition_UnitsGarrisoned, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect[] = {  {&_swigt__p_Effect_ChangeView, _p_Effect_ChangeViewTo_p_Effect, 0, 0},  {&_swigt__p_Effect_KillObject, _p_Effect_KillObjectTo_p_Effect, 0, 0},  {&_swigt__p_Effect_PlaceFoundation, _p_Effect_PlaceFoundationTo_p_Effect, 0, 0},  {&_swigt__p_Effect_DisplayInstructions, _p_Effect_DisplayInstructionsTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ClearInstructions, _p_Effect_ClearInstructionsTo_p_Effect, 0, 0},  {&_swigt__p_Effect_SendChat, _p_Effect_SendChatTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ResearchTechnology, _p_Effect_ResearchTechnologyTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ChangeObjectAttack, _p_Effect_ChangeObjectAttackTo_p_Effect, 0, 0},  {&_swigt__p_Effect_None, _p_Effect_NoneTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ChangeOwnership, _p_Effect_ChangeOwnershipTo_p_Effect, 0, 0},  {&_swigt__p_Effect_DeclareVictory, _p_Effect_DeclareVictoryTo_p_Effect, 0, 0},  {&_swigt__p_Effect_DeactivateTrigger, _p_Effect_DeactivateTriggerTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ActivateTrigger, _p_Effect_ActivateTriggerTo_p_Effect, 0, 0},  {&_swigt__p_Effect, 0, 0, 0},  {&_swigt__p_Effect_PlaySound, _p_Effect_PlaySoundTo_p_Effect, 0, 0},  {&_swigt__p_Effect_StopUnit, _p_Effect_StopUnitTo_p_Effect, 0, 0},  {&_swigt__p_Effect_SendTribute, _p_Effect_SendTributeTo_p_Effect, 0, 0},  {&_swigt__p_Effect_Patrol, _p_Effect_PatrolTo_p_Effect, 0, 0},  {&_swigt__p_Effect_FreezeUnit, _p_Effect_FreezeUnitTo_p_Effect, 0, 0},  {&_swigt__p_Effect_Unload, _p_Effect_UnloadTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ChangeDiplomacy, _p_Effect_ChangeDiplomacyTo_p_Effect, 0, 0},  {&_swigt__p_Effect_AIScriptGoal, _p_Effect_AIScriptGoalTo_p_Effect, 0, 0},  {&_swigt__p_Effect_LockGate, _p_Effect_LockGateTo_p_Effect, 0, 0},  {&_swigt__p_Effect_UnlockGate, _p_Effect_UnlockGateTo_p_Effect, 0, 0},  {&_swigt__p_Effect_UseAdvancedButtons, _p_Effect_UseAdvancedButtonsTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ChangeObjectName, _p_Effect_ChangeObjectNameTo_p_Effect, 0, 0},  {&_swigt__p_Effect_TaskObject, _p_Effect_TaskObjectTo_p_Effect, 0, 0},  {&_swigt__p_Effect_CreateObject, _p_Effect_CreateObjectTo_p_Effect, 0, 0},  {&_swigt__p_Effect_RemoveObject, _p_Effect_RemoveObjectTo_p_Effect, 0, 0},  {&_swigt__p_Effect_DamageObject, _p_Effect_DamageObjectTo_p_Effect, 0, 0},  {&_swigt__p_Effect_ChangeObjectHP, _p_Effect_ChangeObjectHPTo_p_Effect, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_AIScriptGoal[] = {  {&_swigt__p_Effect_AIScriptGoal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ActivateTrigger[] = {  {&_swigt__p_Effect_ActivateTrigger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ChangeDiplomacy[] = {  {&_swigt__p_Effect_ChangeDiplomacy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ChangeObjectAttack[] = {  {&_swigt__p_Effect_ChangeObjectAttack, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ChangeObjectHP[] = {  {&_swigt__p_Effect_ChangeObjectHP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ChangeObjectName[] = {  {&_swigt__p_Effect_ChangeObjectName, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ChangeOwnership[] = {  {&_swigt__p_Effect_ChangeOwnership, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ChangeView[] = {  {&_swigt__p_Effect_ChangeView, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ClearInstructions[] = {  {&_swigt__p_Effect_ClearInstructions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_CreateObject[] = {  {&_swigt__p_Effect_CreateObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_DamageObject[] = {  {&_swigt__p_Effect_DamageObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_DeactivateTrigger[] = {  {&_swigt__p_Effect_DeactivateTrigger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_DeclareVictory[] = {  {&_swigt__p_Effect_DeclareVictory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_DisplayInstructions[] = {  {&_swigt__p_Effect_DisplayInstructions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_FreezeUnit[] = {  {&_swigt__p_Effect_FreezeUnit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_KillObject[] = {  {&_swigt__p_Effect_KillObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_LockGate[] = {  {&_swigt__p_Effect_LockGate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_None[] = {  {&_swigt__p_Effect_None, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_Patrol[] = {  {&_swigt__p_Effect_Patrol, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_PlaceFoundation[] = {  {&_swigt__p_Effect_PlaceFoundation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_PlaySound[] = {  {&_swigt__p_Effect_PlaySound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_RemoveObject[] = {  {&_swigt__p_Effect_RemoveObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_ResearchTechnology[] = {  {&_swigt__p_Effect_ResearchTechnology, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_SendChat[] = {  {&_swigt__p_Effect_SendChat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_SendTribute[] = {  {&_swigt__p_Effect_SendTribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_StopUnit[] = {  {&_swigt__p_Effect_StopUnit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_TaskObject[] = {  {&_swigt__p_Effect_TaskObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_Unload[] = {  {&_swigt__p_Effect_Unload, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_UnlockGate[] = {  {&_swigt__p_Effect_UnlockGate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Effect_UseAdvancedButtons[] = {  {&_swigt__p_Effect_UseAdvancedButtons, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FILE[] = {  {&_swigt__p_FILE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NewTrigger[] = {  {&_swigt__p_NewTrigger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_eclong[] = {  {&_swigt__p_eclong, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_int_t[] = {  {&_swigt__p_std__vectorT_int_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_AOKPT,
  _swigc__p_AOKRECT,
  _swigc__p_Condition,
  _swigc__p_Condition_AISignal,
  _swigc__p_Condition_AccumulateAttribute,
  _swigc__p_Condition_BringObjectToArea,
  _swigc__p_Condition_BringObjectToObject,
  _swigc__p_Condition_CaptureObject,
  _swigc__p_Condition_DestroyObject,
  _swigc__p_Condition_DifficultyLevel,
  _swigc__p_Condition_None,
  _swigc__p_Condition_ObjectHasTarget,
  _swigc__p_Condition_ObjectNotVisible,
  _swigc__p_Condition_ObjectSelected,
  _swigc__p_Condition_ObjectVisible,
  _swigc__p_Condition_ObjectsInArea,
  _swigc__p_Condition_OwnFewerObjects,
  _swigc__p_Condition_OwnObjects,
  _swigc__p_Condition_PlayerDefeated,
  _swigc__p_Condition_ResearchTechnology,
  _swigc__p_Condition_ResearchingTechnology,
  _swigc__p_Condition_Timer,
  _swigc__p_Condition_UnitsGarrisoned,
  _swigc__p_Effect,
  _swigc__p_Effect_AIScriptGoal,
  _swigc__p_Effect_ActivateTrigger,
  _swigc__p_Effect_ChangeDiplomacy,
  _swigc__p_Effect_ChangeObjectAttack,
  _swigc__p_Effect_ChangeObjectHP,
  _swigc__p_Effect_ChangeObjectName,
  _swigc__p_Effect_ChangeOwnership,
  _swigc__p_Effect_ChangeView,
  _swigc__p_Effect_ClearInstructions,
  _swigc__p_Effect_CreateObject,
  _swigc__p_Effect_DamageObject,
  _swigc__p_Effect_DeactivateTrigger,
  _swigc__p_Effect_DeclareVictory,
  _swigc__p_Effect_DisplayInstructions,
  _swigc__p_Effect_FreezeUnit,
  _swigc__p_Effect_KillObject,
  _swigc__p_Effect_LockGate,
  _swigc__p_Effect_None,
  _swigc__p_Effect_Patrol,
  _swigc__p_Effect_PlaceFoundation,
  _swigc__p_Effect_PlaySound,
  _swigc__p_Effect_RemoveObject,
  _swigc__p_Effect_ResearchTechnology,
  _swigc__p_Effect_SendChat,
  _swigc__p_Effect_SendTribute,
  _swigc__p_Effect_StopUnit,
  _swigc__p_Effect_TaskObject,
  _swigc__p_Effect_Unload,
  _swigc__p_Effect_UnlockGate,
  _swigc__p_Effect_UseAdvancedButtons,
  _swigc__p_FILE,
  _swigc__p_NewTrigger,
  _swigc__p_eclong,
  _swigc__p_p_char,
  _swigc__p_std__string,
  _swigc__p_std__vectorT_int_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;

  clientdata = clientdata;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* When multiple interpeters are used, a module could have already been initialized in
     a different interpreter, but not yet have a pointer in this interpreter.
     In this case, we do not want to continue adding types... everything should be
     set up already */
  if (init == 0) return;

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
  
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
    
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif



/* Forward declaration of where the user's %init{} gets inserted */
void SWIG_init_user(lua_State* L );
    
#ifdef __cplusplus
extern "C" {
#endif
/* this is the initialization function
  added at the very end of the code
  the function is always called SWIG_init, but an eariler #define will rename it
*/
SWIGEXPORT int SWIG_init(lua_State* L)
{
  int i;
  /* start with global table */
  lua_pushvalue(L,LUA_GLOBALSINDEX);
  /* SWIG's internal initalisation */
  SWIG_InitializeModule((void*)L);
  SWIG_PropagateClientData();
  /* add a global fn */
  SWIG_Lua_add_function(L,"swig_type",SWIG_Lua_type);
  SWIG_Lua_add_function(L,"swig_equals",SWIG_Lua_equal);
  /* begin the module (its a table with the same name as the module) */
  SWIG_Lua_module_begin(L,SWIG_name);
  /* add commands/functions */
  for (i = 0; swig_commands[i].name; i++){
    SWIG_Lua_module_add_function(L,swig_commands[i].name,swig_commands[i].func);
  }
  /* add variables */
  for (i = 0; swig_variables[i].name; i++){
    SWIG_Lua_module_add_variable(L,swig_variables[i].name,swig_variables[i].get,swig_variables[i].set);
  }
  /* set up base class pointers (the hierachy) */
  for (i = 0; swig_types[i]; i++){
    if (swig_types[i]->clientdata){
      SWIG_Lua_init_base_class(L,(swig_lua_class*)(swig_types[i]->clientdata));
    }
  }
  /* additional registration structs & classes in lua */
  for (i = 0; swig_types[i]; i++){
    if (swig_types[i]->clientdata){
      SWIG_Lua_class_register(L,(swig_lua_class*)(swig_types[i]->clientdata));
    }
  }
  /* constants */
  SWIG_Lua_InstallConstants(L,swig_constants);
  /* invoke user-specific initialization */
  SWIG_init_user(L);
  /* end module */
  lua_pop(L,1);  /* tidy stack (remove module table)*/
  lua_pop(L,1);  /* tidy stack (remove global table)*/
  return 1;
}

#ifdef __cplusplus
}
#endif


const char* SWIG_LUACODE=
  "";

void SWIG_init_user(lua_State* L)
{
  /* exec Lua code if applicable */
  SWIG_Lua_dostring(L,SWIG_LUACODE);
}

